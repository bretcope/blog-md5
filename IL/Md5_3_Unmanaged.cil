// Type: Md5DotNet.Md5_3_Unmanaged 
// Assembly: Md5DotNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 92E8A231-9212-453A-AB87-DB38B4F5E3D4
// Location: C:\code\blog\md5\Md5DotNet\Md5DotNet\bin\Release\Md5DotNet.exe
// Sequence point data from C:\code\blog\md5\Md5DotNet\Md5DotNet\bin\Release\Md5DotNet.pdb

.class private abstract sealed auto ansi beforefieldinit 
  Md5DotNet.Md5_3_Unmanaged
    extends [mscorlib]System.Object
{

  .field private static unsigned int32* s_sinesPtr

  .field private static int32* s_shiftsPtr

  .method private hidebysig static void 
    Initialize() cil managed 
  {
    .maxstack 3
    .locals init (
      [0] unsigned int32* sines,
      [1] int32* shifts
    )

    // [13 13 - 13 72]
    IL_0000: ldc.i4       256 // 0x00000100
    IL_0005: call         native int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    IL_000a: call         void* [mscorlib]System.IntPtr::op_Explicit(native int)
    IL_000f: stloc.0      // sines

    // [16 13 - 16 35]
    IL_0010: ldloc.0      // sines
    IL_0011: ldc.i4       -680876936 // 0xd76aa478
    IL_0016: stind.i4     

    // [17 13 - 17 35]
    IL_0017: ldloc.0      // sines
    IL_0018: ldc.i4.4     
    IL_0019: add          
    IL_001a: ldc.i4       -389564586 // 0xe8c7b756
    IL_001f: stind.i4     

    // [18 13 - 18 35]
    IL_0020: ldloc.0      // sines
    IL_0021: ldc.i4.2     
    IL_0022: conv.i       
    IL_0023: ldc.i4.4     
    IL_0024: mul          
    IL_0025: add          
    IL_0026: ldc.i4       606105819 // 0x242070db
    IL_002b: stind.i4     

    // [19 13 - 19 35]
    IL_002c: ldloc.0      // sines
    IL_002d: ldc.i4.3     
    IL_002e: conv.i       
    IL_002f: ldc.i4.4     
    IL_0030: mul          
    IL_0031: add          
    IL_0032: ldc.i4       -1044525330 // 0xc1bdceee
    IL_0037: stind.i4     

    // [20 13 - 20 35]
    IL_0038: ldloc.0      // sines
    IL_0039: ldc.i4.4     
    IL_003a: conv.i       
    IL_003b: ldc.i4.4     
    IL_003c: mul          
    IL_003d: add          
    IL_003e: ldc.i4       -176418897 // 0xf57c0faf
    IL_0043: stind.i4     

    // [21 13 - 21 35]
    IL_0044: ldloc.0      // sines
    IL_0045: ldc.i4.5     
    IL_0046: conv.i       
    IL_0047: ldc.i4.4     
    IL_0048: mul          
    IL_0049: add          
    IL_004a: ldc.i4       1200080426 // 0x4787c62a
    IL_004f: stind.i4     

    // [22 13 - 22 35]
    IL_0050: ldloc.0      // sines
    IL_0051: ldc.i4.6     
    IL_0052: conv.i       
    IL_0053: ldc.i4.4     
    IL_0054: mul          
    IL_0055: add          
    IL_0056: ldc.i4       -1473231341 // 0xa8304613
    IL_005b: stind.i4     

    // [23 13 - 23 35]
    IL_005c: ldloc.0      // sines
    IL_005d: ldc.i4.7     
    IL_005e: conv.i       
    IL_005f: ldc.i4.4     
    IL_0060: mul          
    IL_0061: add          
    IL_0062: ldc.i4       -45705983 // 0xfd469501
    IL_0067: stind.i4     

    // [24 13 - 24 35]
    IL_0068: ldloc.0      // sines
    IL_0069: ldc.i4.8     
    IL_006a: conv.i       
    IL_006b: ldc.i4.4     
    IL_006c: mul          
    IL_006d: add          
    IL_006e: ldc.i4       1770035416 // 0x698098d8
    IL_0073: stind.i4     

    // [25 13 - 25 35]
    IL_0074: ldloc.0      // sines
    IL_0075: ldc.i4.s     9 // 0x09
    IL_0077: conv.i       
    IL_0078: ldc.i4.4     
    IL_0079: mul          
    IL_007a: add          
    IL_007b: ldc.i4       -1958414417 // 0x8b44f7af
    IL_0080: stind.i4     

    // [26 13 - 26 36]
    IL_0081: ldloc.0      // sines
    IL_0082: ldc.i4.s     10 // 0x0a
    IL_0084: conv.i       
    IL_0085: ldc.i4.4     
    IL_0086: mul          
    IL_0087: add          
    IL_0088: ldc.i4       -42063 // 0xffff5bb1
    IL_008d: stind.i4     

    // [27 13 - 27 36]
    IL_008e: ldloc.0      // sines
    IL_008f: ldc.i4.s     11 // 0x0b
    IL_0091: conv.i       
    IL_0092: ldc.i4.4     
    IL_0093: mul          
    IL_0094: add          
    IL_0095: ldc.i4       -1990404162 // 0x895cd7be
    IL_009a: stind.i4     

    // [28 13 - 28 36]
    IL_009b: ldloc.0      // sines
    IL_009c: ldc.i4.s     12 // 0x0c
    IL_009e: conv.i       
    IL_009f: ldc.i4.4     
    IL_00a0: mul          
    IL_00a1: add          
    IL_00a2: ldc.i4       1804603682 // 0x6b901122
    IL_00a7: stind.i4     

    // [29 13 - 29 36]
    IL_00a8: ldloc.0      // sines
    IL_00a9: ldc.i4.s     13 // 0x0d
    IL_00ab: conv.i       
    IL_00ac: ldc.i4.4     
    IL_00ad: mul          
    IL_00ae: add          
    IL_00af: ldc.i4       -40341101 // 0xfd987193
    IL_00b4: stind.i4     

    // [30 13 - 30 36]
    IL_00b5: ldloc.0      // sines
    IL_00b6: ldc.i4.s     14 // 0x0e
    IL_00b8: conv.i       
    IL_00b9: ldc.i4.4     
    IL_00ba: mul          
    IL_00bb: add          
    IL_00bc: ldc.i4       -1502002290 // 0xa679438e
    IL_00c1: stind.i4     

    // [31 13 - 31 36]
    IL_00c2: ldloc.0      // sines
    IL_00c3: ldc.i4.s     15 // 0x0f
    IL_00c5: conv.i       
    IL_00c6: ldc.i4.4     
    IL_00c7: mul          
    IL_00c8: add          
    IL_00c9: ldc.i4       1236535329 // 0x49b40821
    IL_00ce: stind.i4     

    // [32 13 - 32 36]
    IL_00cf: ldloc.0      // sines
    IL_00d0: ldc.i4.s     16 // 0x10
    IL_00d2: conv.i       
    IL_00d3: ldc.i4.4     
    IL_00d4: mul          
    IL_00d5: add          
    IL_00d6: ldc.i4       -165796510 // 0xf61e2562
    IL_00db: stind.i4     

    // [33 13 - 33 36]
    IL_00dc: ldloc.0      // sines
    IL_00dd: ldc.i4.s     17 // 0x11
    IL_00df: conv.i       
    IL_00e0: ldc.i4.4     
    IL_00e1: mul          
    IL_00e2: add          
    IL_00e3: ldc.i4       -1069501632 // 0xc040b340
    IL_00e8: stind.i4     

    // [34 13 - 34 36]
    IL_00e9: ldloc.0      // sines
    IL_00ea: ldc.i4.s     18 // 0x12
    IL_00ec: conv.i       
    IL_00ed: ldc.i4.4     
    IL_00ee: mul          
    IL_00ef: add          
    IL_00f0: ldc.i4       643717713 // 0x265e5a51
    IL_00f5: stind.i4     

    // [35 13 - 35 36]
    IL_00f6: ldloc.0      // sines
    IL_00f7: ldc.i4.s     19 // 0x13
    IL_00f9: conv.i       
    IL_00fa: ldc.i4.4     
    IL_00fb: mul          
    IL_00fc: add          
    IL_00fd: ldc.i4       -373897302 // 0xe9b6c7aa
    IL_0102: stind.i4     

    // [36 13 - 36 36]
    IL_0103: ldloc.0      // sines
    IL_0104: ldc.i4.s     20 // 0x14
    IL_0106: conv.i       
    IL_0107: ldc.i4.4     
    IL_0108: mul          
    IL_0109: add          
    IL_010a: ldc.i4       -701558691 // 0xd62f105d
    IL_010f: stind.i4     

    // [37 13 - 37 35]
    IL_0110: ldloc.0      // sines
    IL_0111: ldc.i4.s     21 // 0x15
    IL_0113: conv.i       
    IL_0114: ldc.i4.4     
    IL_0115: mul          
    IL_0116: add          
    IL_0117: ldc.i4       38016083 // 0x02441453
    IL_011c: stind.i4     

    // [38 13 - 38 36]
    IL_011d: ldloc.0      // sines
    IL_011e: ldc.i4.s     22 // 0x16
    IL_0120: conv.i       
    IL_0121: ldc.i4.4     
    IL_0122: mul          
    IL_0123: add          
    IL_0124: ldc.i4       -660478335 // 0xd8a1e681
    IL_0129: stind.i4     

    // [39 13 - 39 36]
    IL_012a: ldloc.0      // sines
    IL_012b: ldc.i4.s     23 // 0x17
    IL_012d: conv.i       
    IL_012e: ldc.i4.4     
    IL_012f: mul          
    IL_0130: add          
    IL_0131: ldc.i4       -405537848 // 0xe7d3fbc8
    IL_0136: stind.i4     

    // [40 13 - 40 36]
    IL_0137: ldloc.0      // sines
    IL_0138: ldc.i4.s     24 // 0x18
    IL_013a: conv.i       
    IL_013b: ldc.i4.4     
    IL_013c: mul          
    IL_013d: add          
    IL_013e: ldc.i4       568446438 // 0x21e1cde6
    IL_0143: stind.i4     

    // [41 13 - 41 36]
    IL_0144: ldloc.0      // sines
    IL_0145: ldc.i4.s     25 // 0x19
    IL_0147: conv.i       
    IL_0148: ldc.i4.4     
    IL_0149: mul          
    IL_014a: add          
    IL_014b: ldc.i4       -1019803690 // 0xc33707d6
    IL_0150: stind.i4     

    // [42 13 - 42 36]
    IL_0151: ldloc.0      // sines
    IL_0152: ldc.i4.s     26 // 0x1a
    IL_0154: conv.i       
    IL_0155: ldc.i4.4     
    IL_0156: mul          
    IL_0157: add          
    IL_0158: ldc.i4       -187363961 // 0xf4d50d87
    IL_015d: stind.i4     

    // [43 13 - 43 36]
    IL_015e: ldloc.0      // sines
    IL_015f: ldc.i4.s     27 // 0x1b
    IL_0161: conv.i       
    IL_0162: ldc.i4.4     
    IL_0163: mul          
    IL_0164: add          
    IL_0165: ldc.i4       1163531501 // 0x455a14ed
    IL_016a: stind.i4     

    // [44 13 - 44 36]
    IL_016b: ldloc.0      // sines
    IL_016c: ldc.i4.s     28 // 0x1c
    IL_016e: conv.i       
    IL_016f: ldc.i4.4     
    IL_0170: mul          
    IL_0171: add          
    IL_0172: ldc.i4       -1444681467 // 0xa9e3e905
    IL_0177: stind.i4     

    // [45 13 - 45 36]
    IL_0178: ldloc.0      // sines
    IL_0179: ldc.i4.s     29 // 0x1d
    IL_017b: conv.i       
    IL_017c: ldc.i4.4     
    IL_017d: mul          
    IL_017e: add          
    IL_017f: ldc.i4       -51403784 // 0xfcefa3f8
    IL_0184: stind.i4     

    // [46 13 - 46 36]
    IL_0185: ldloc.0      // sines
    IL_0186: ldc.i4.s     30 // 0x1e
    IL_0188: conv.i       
    IL_0189: ldc.i4.4     
    IL_018a: mul          
    IL_018b: add          
    IL_018c: ldc.i4       1735328473 // 0x676f02d9
    IL_0191: stind.i4     

    // [47 13 - 47 36]
    IL_0192: ldloc.0      // sines
    IL_0193: ldc.i4.s     31 // 0x1f
    IL_0195: conv.i       
    IL_0196: ldc.i4.4     
    IL_0197: mul          
    IL_0198: add          
    IL_0199: ldc.i4       -1926607734 // 0x8d2a4c8a
    IL_019e: stind.i4     

    // [48 13 - 48 36]
    IL_019f: ldloc.0      // sines
    IL_01a0: ldc.i4.s     32 // 0x20
    IL_01a2: conv.i       
    IL_01a3: ldc.i4.4     
    IL_01a4: mul          
    IL_01a5: add          
    IL_01a6: ldc.i4       -378558 // 0xfffa3942
    IL_01ab: stind.i4     

    // [49 13 - 49 36]
    IL_01ac: ldloc.0      // sines
    IL_01ad: ldc.i4.s     33 // 0x21
    IL_01af: conv.i       
    IL_01b0: ldc.i4.4     
    IL_01b1: mul          
    IL_01b2: add          
    IL_01b3: ldc.i4       -2022574463 // 0x8771f681
    IL_01b8: stind.i4     

    // [50 13 - 50 36]
    IL_01b9: ldloc.0      // sines
    IL_01ba: ldc.i4.s     34 // 0x22
    IL_01bc: conv.i       
    IL_01bd: ldc.i4.4     
    IL_01be: mul          
    IL_01bf: add          
    IL_01c0: ldc.i4       1839030562 // 0x6d9d6122
    IL_01c5: stind.i4     

    // [51 13 - 51 36]
    IL_01c6: ldloc.0      // sines
    IL_01c7: ldc.i4.s     35 // 0x23
    IL_01c9: conv.i       
    IL_01ca: ldc.i4.4     
    IL_01cb: mul          
    IL_01cc: add          
    IL_01cd: ldc.i4       -35309556 // 0xfde5380c
    IL_01d2: stind.i4     

    // [52 13 - 52 36]
    IL_01d3: ldloc.0      // sines
    IL_01d4: ldc.i4.s     36 // 0x24
    IL_01d6: conv.i       
    IL_01d7: ldc.i4.4     
    IL_01d8: mul          
    IL_01d9: add          
    IL_01da: ldc.i4       -1530992060 // 0xa4beea44
    IL_01df: stind.i4     

    // [53 13 - 53 36]
    IL_01e0: ldloc.0      // sines
    IL_01e1: ldc.i4.s     37 // 0x25
    IL_01e3: conv.i       
    IL_01e4: ldc.i4.4     
    IL_01e5: mul          
    IL_01e6: add          
    IL_01e7: ldc.i4       1272893353 // 0x4bdecfa9
    IL_01ec: stind.i4     

    // [54 13 - 54 36]
    IL_01ed: ldloc.0      // sines
    IL_01ee: ldc.i4.s     38 // 0x26
    IL_01f0: conv.i       
    IL_01f1: ldc.i4.4     
    IL_01f2: mul          
    IL_01f3: add          
    IL_01f4: ldc.i4       -155497632 // 0xf6bb4b60
    IL_01f9: stind.i4     

    // [55 13 - 55 36]
    IL_01fa: ldloc.0      // sines
    IL_01fb: ldc.i4.s     39 // 0x27
    IL_01fd: conv.i       
    IL_01fe: ldc.i4.4     
    IL_01ff: mul          
    IL_0200: add          
    IL_0201: ldc.i4       -1094730640 // 0xbebfbc70
    IL_0206: stind.i4     

    // [56 13 - 56 36]
    IL_0207: ldloc.0      // sines
    IL_0208: ldc.i4.s     40 // 0x28
    IL_020a: conv.i       
    IL_020b: ldc.i4.4     
    IL_020c: mul          
    IL_020d: add          
    IL_020e: ldc.i4       681279174 // 0x289b7ec6
    IL_0213: stind.i4     

    // [57 13 - 57 36]
    IL_0214: ldloc.0      // sines
    IL_0215: ldc.i4.s     41 // 0x29
    IL_0217: conv.i       
    IL_0218: ldc.i4.4     
    IL_0219: mul          
    IL_021a: add          
    IL_021b: ldc.i4       -358537222 // 0xeaa127fa
    IL_0220: stind.i4     

    // [58 13 - 58 36]
    IL_0221: ldloc.0      // sines
    IL_0222: ldc.i4.s     42 // 0x2a
    IL_0224: conv.i       
    IL_0225: ldc.i4.4     
    IL_0226: mul          
    IL_0227: add          
    IL_0228: ldc.i4       -722521979 // 0xd4ef3085
    IL_022d: stind.i4     

    // [59 13 - 59 35]
    IL_022e: ldloc.0      // sines
    IL_022f: ldc.i4.s     43 // 0x2b
    IL_0231: conv.i       
    IL_0232: ldc.i4.4     
    IL_0233: mul          
    IL_0234: add          
    IL_0235: ldc.i4       76029189 // 0x04881d05
    IL_023a: stind.i4     

    // [60 13 - 60 36]
    IL_023b: ldloc.0      // sines
    IL_023c: ldc.i4.s     44 // 0x2c
    IL_023e: conv.i       
    IL_023f: ldc.i4.4     
    IL_0240: mul          
    IL_0241: add          
    IL_0242: ldc.i4       -640364487 // 0xd9d4d039
    IL_0247: stind.i4     

    // [61 13 - 61 36]
    IL_0248: ldloc.0      // sines
    IL_0249: ldc.i4.s     45 // 0x2d
    IL_024b: conv.i       
    IL_024c: ldc.i4.4     
    IL_024d: mul          
    IL_024e: add          
    IL_024f: ldc.i4       -421815835 // 0xe6db99e5
    IL_0254: stind.i4     

    // [62 13 - 62 36]
    IL_0255: ldloc.0      // sines
    IL_0256: ldc.i4.s     46 // 0x2e
    IL_0258: conv.i       
    IL_0259: ldc.i4.4     
    IL_025a: mul          
    IL_025b: add          
    IL_025c: ldc.i4       530742520 // 0x1fa27cf8
    IL_0261: stind.i4     

    // [63 13 - 63 36]
    IL_0262: ldloc.0      // sines
    IL_0263: ldc.i4.s     47 // 0x2f
    IL_0265: conv.i       
    IL_0266: ldc.i4.4     
    IL_0267: mul          
    IL_0268: add          
    IL_0269: ldc.i4       -995338651 // 0xc4ac5665
    IL_026e: stind.i4     

    // [64 13 - 64 36]
    IL_026f: ldloc.0      // sines
    IL_0270: ldc.i4.s     48 // 0x30
    IL_0272: conv.i       
    IL_0273: ldc.i4.4     
    IL_0274: mul          
    IL_0275: add          
    IL_0276: ldc.i4       -198630844 // 0xf4292244
    IL_027b: stind.i4     

    // [65 13 - 65 36]
    IL_027c: ldloc.0      // sines
    IL_027d: ldc.i4.s     49 // 0x31
    IL_027f: conv.i       
    IL_0280: ldc.i4.4     
    IL_0281: mul          
    IL_0282: add          
    IL_0283: ldc.i4       1126891415 // 0x432aff97
    IL_0288: stind.i4     

    // [66 13 - 66 36]
    IL_0289: ldloc.0      // sines
    IL_028a: ldc.i4.s     50 // 0x32
    IL_028c: conv.i       
    IL_028d: ldc.i4.4     
    IL_028e: mul          
    IL_028f: add          
    IL_0290: ldc.i4       -1416354905 // 0xab9423a7
    IL_0295: stind.i4     

    // [67 13 - 67 36]
    IL_0296: ldloc.0      // sines
    IL_0297: ldc.i4.s     51 // 0x33
    IL_0299: conv.i       
    IL_029a: ldc.i4.4     
    IL_029b: mul          
    IL_029c: add          
    IL_029d: ldc.i4       -57434055 // 0xfc93a039
    IL_02a2: stind.i4     

    // [68 13 - 68 36]
    IL_02a3: ldloc.0      // sines
    IL_02a4: ldc.i4.s     52 // 0x34
    IL_02a6: conv.i       
    IL_02a7: ldc.i4.4     
    IL_02a8: mul          
    IL_02a9: add          
    IL_02aa: ldc.i4       1700485571 // 0x655b59c3
    IL_02af: stind.i4     

    // [69 13 - 69 36]
    IL_02b0: ldloc.0      // sines
    IL_02b1: ldc.i4.s     53 // 0x35
    IL_02b3: conv.i       
    IL_02b4: ldc.i4.4     
    IL_02b5: mul          
    IL_02b6: add          
    IL_02b7: ldc.i4       -1894986606 // 0x8f0ccc92
    IL_02bc: stind.i4     

    // [70 13 - 70 36]
    IL_02bd: ldloc.0      // sines
    IL_02be: ldc.i4.s     54 // 0x36
    IL_02c0: conv.i       
    IL_02c1: ldc.i4.4     
    IL_02c2: mul          
    IL_02c3: add          
    IL_02c4: ldc.i4       -1051523 // 0xffeff47d
    IL_02c9: stind.i4     

    // [71 13 - 71 36]
    IL_02ca: ldloc.0      // sines
    IL_02cb: ldc.i4.s     55 // 0x37
    IL_02cd: conv.i       
    IL_02ce: ldc.i4.4     
    IL_02cf: mul          
    IL_02d0: add          
    IL_02d1: ldc.i4       -2054922799 // 0x85845dd1
    IL_02d6: stind.i4     

    // [72 13 - 72 36]
    IL_02d7: ldloc.0      // sines
    IL_02d8: ldc.i4.s     56 // 0x38
    IL_02da: conv.i       
    IL_02db: ldc.i4.4     
    IL_02dc: mul          
    IL_02dd: add          
    IL_02de: ldc.i4       1873313359 // 0x6fa87e4f
    IL_02e3: stind.i4     

    // [73 13 - 73 36]
    IL_02e4: ldloc.0      // sines
    IL_02e5: ldc.i4.s     57 // 0x39
    IL_02e7: conv.i       
    IL_02e8: ldc.i4.4     
    IL_02e9: mul          
    IL_02ea: add          
    IL_02eb: ldc.i4       -30611744 // 0xfe2ce6e0
    IL_02f0: stind.i4     

    // [74 13 - 74 36]
    IL_02f1: ldloc.0      // sines
    IL_02f2: ldc.i4.s     58 // 0x3a
    IL_02f4: conv.i       
    IL_02f5: ldc.i4.4     
    IL_02f6: mul          
    IL_02f7: add          
    IL_02f8: ldc.i4       -1560198380 // 0xa3014314
    IL_02fd: stind.i4     

    // [75 13 - 75 36]
    IL_02fe: ldloc.0      // sines
    IL_02ff: ldc.i4.s     59 // 0x3b
    IL_0301: conv.i       
    IL_0302: ldc.i4.4     
    IL_0303: mul          
    IL_0304: add          
    IL_0305: ldc.i4       1309151649 // 0x4e0811a1
    IL_030a: stind.i4     

    // [76 13 - 76 36]
    IL_030b: ldloc.0      // sines
    IL_030c: ldc.i4.s     60 // 0x3c
    IL_030e: conv.i       
    IL_030f: ldc.i4.4     
    IL_0310: mul          
    IL_0311: add          
    IL_0312: ldc.i4       -145523070 // 0xf7537e82
    IL_0317: stind.i4     

    // [77 13 - 77 36]
    IL_0318: ldloc.0      // sines
    IL_0319: ldc.i4.s     61 // 0x3d
    IL_031b: conv.i       
    IL_031c: ldc.i4.4     
    IL_031d: mul          
    IL_031e: add          
    IL_031f: ldc.i4       -1120210379 // 0xbd3af235
    IL_0324: stind.i4     

    // [78 13 - 78 36]
    IL_0325: ldloc.0      // sines
    IL_0326: ldc.i4.s     62 // 0x3e
    IL_0328: conv.i       
    IL_0329: ldc.i4.4     
    IL_032a: mul          
    IL_032b: add          
    IL_032c: ldc.i4       718787259 // 0x2ad7d2bb
    IL_0331: stind.i4     

    // [79 13 - 79 36]
    IL_0332: ldloc.0      // sines
    IL_0333: ldc.i4.s     63 // 0x3f
    IL_0335: conv.i       
    IL_0336: ldc.i4.4     
    IL_0337: mul          
    IL_0338: add          
    IL_0339: ldc.i4       -343485551 // 0xeb86d391
    IL_033e: stind.i4     

    // [81 13 - 81 72]
    IL_033f: ldc.i4       256 // 0x00000100
    IL_0344: call         native int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    IL_0349: call         void* [mscorlib]System.IntPtr::op_Explicit(native int)
    IL_034e: stloc.1      // shifts

    // [83 13 - 83 27]
    IL_034f: ldloc.1      // shifts
    IL_0350: ldc.i4.7     
    IL_0351: stind.i4     

    // [84 13 - 84 28]
    IL_0352: ldloc.1      // shifts
    IL_0353: ldc.i4.4     
    IL_0354: add          
    IL_0355: ldc.i4.s     12 // 0x0c
    IL_0357: stind.i4     

    // [85 13 - 85 28]
    IL_0358: ldloc.1      // shifts
    IL_0359: ldc.i4.2     
    IL_035a: conv.i       
    IL_035b: ldc.i4.4     
    IL_035c: mul          
    IL_035d: add          
    IL_035e: ldc.i4.s     17 // 0x11
    IL_0360: stind.i4     

    // [86 13 - 86 28]
    IL_0361: ldloc.1      // shifts
    IL_0362: ldc.i4.3     
    IL_0363: conv.i       
    IL_0364: ldc.i4.4     
    IL_0365: mul          
    IL_0366: add          
    IL_0367: ldc.i4.s     22 // 0x16
    IL_0369: stind.i4     

    // [87 13 - 87 27]
    IL_036a: ldloc.1      // shifts
    IL_036b: ldc.i4.4     
    IL_036c: conv.i       
    IL_036d: ldc.i4.4     
    IL_036e: mul          
    IL_036f: add          
    IL_0370: ldc.i4.7     
    IL_0371: stind.i4     

    // [88 13 - 88 28]
    IL_0372: ldloc.1      // shifts
    IL_0373: ldc.i4.5     
    IL_0374: conv.i       
    IL_0375: ldc.i4.4     
    IL_0376: mul          
    IL_0377: add          
    IL_0378: ldc.i4.s     12 // 0x0c
    IL_037a: stind.i4     

    // [89 13 - 89 28]
    IL_037b: ldloc.1      // shifts
    IL_037c: ldc.i4.6     
    IL_037d: conv.i       
    IL_037e: ldc.i4.4     
    IL_037f: mul          
    IL_0380: add          
    IL_0381: ldc.i4.s     17 // 0x11
    IL_0383: stind.i4     

    // [90 13 - 90 28]
    IL_0384: ldloc.1      // shifts
    IL_0385: ldc.i4.7     
    IL_0386: conv.i       
    IL_0387: ldc.i4.4     
    IL_0388: mul          
    IL_0389: add          
    IL_038a: ldc.i4.s     22 // 0x16
    IL_038c: stind.i4     

    // [91 13 - 91 27]
    IL_038d: ldloc.1      // shifts
    IL_038e: ldc.i4.8     
    IL_038f: conv.i       
    IL_0390: ldc.i4.4     
    IL_0391: mul          
    IL_0392: add          
    IL_0393: ldc.i4.7     
    IL_0394: stind.i4     

    // [92 13 - 92 28]
    IL_0395: ldloc.1      // shifts
    IL_0396: ldc.i4.s     9 // 0x09
    IL_0398: conv.i       
    IL_0399: ldc.i4.4     
    IL_039a: mul          
    IL_039b: add          
    IL_039c: ldc.i4.s     12 // 0x0c
    IL_039e: stind.i4     

    // [93 13 - 93 29]
    IL_039f: ldloc.1      // shifts
    IL_03a0: ldc.i4.s     10 // 0x0a
    IL_03a2: conv.i       
    IL_03a3: ldc.i4.4     
    IL_03a4: mul          
    IL_03a5: add          
    IL_03a6: ldc.i4.s     17 // 0x11
    IL_03a8: stind.i4     

    // [94 13 - 94 29]
    IL_03a9: ldloc.1      // shifts
    IL_03aa: ldc.i4.s     11 // 0x0b
    IL_03ac: conv.i       
    IL_03ad: ldc.i4.4     
    IL_03ae: mul          
    IL_03af: add          
    IL_03b0: ldc.i4.s     22 // 0x16
    IL_03b2: stind.i4     

    // [95 13 - 95 28]
    IL_03b3: ldloc.1      // shifts
    IL_03b4: ldc.i4.s     12 // 0x0c
    IL_03b6: conv.i       
    IL_03b7: ldc.i4.4     
    IL_03b8: mul          
    IL_03b9: add          
    IL_03ba: ldc.i4.7     
    IL_03bb: stind.i4     

    // [96 13 - 96 29]
    IL_03bc: ldloc.1      // shifts
    IL_03bd: ldc.i4.s     13 // 0x0d
    IL_03bf: conv.i       
    IL_03c0: ldc.i4.4     
    IL_03c1: mul          
    IL_03c2: add          
    IL_03c3: ldc.i4.s     12 // 0x0c
    IL_03c5: stind.i4     

    // [97 13 - 97 29]
    IL_03c6: ldloc.1      // shifts
    IL_03c7: ldc.i4.s     14 // 0x0e
    IL_03c9: conv.i       
    IL_03ca: ldc.i4.4     
    IL_03cb: mul          
    IL_03cc: add          
    IL_03cd: ldc.i4.s     17 // 0x11
    IL_03cf: stind.i4     

    // [98 13 - 98 29]
    IL_03d0: ldloc.1      // shifts
    IL_03d1: ldc.i4.s     15 // 0x0f
    IL_03d3: conv.i       
    IL_03d4: ldc.i4.4     
    IL_03d5: mul          
    IL_03d6: add          
    IL_03d7: ldc.i4.s     22 // 0x16
    IL_03d9: stind.i4     

    // [99 13 - 99 28]
    IL_03da: ldloc.1      // shifts
    IL_03db: ldc.i4.s     16 // 0x10
    IL_03dd: conv.i       
    IL_03de: ldc.i4.4     
    IL_03df: mul          
    IL_03e0: add          
    IL_03e1: ldc.i4.5     
    IL_03e2: stind.i4     

    // [100 13 - 100 28]
    IL_03e3: ldloc.1      // shifts
    IL_03e4: ldc.i4.s     17 // 0x11
    IL_03e6: conv.i       
    IL_03e7: ldc.i4.4     
    IL_03e8: mul          
    IL_03e9: add          
    IL_03ea: ldc.i4.s     9 // 0x09
    IL_03ec: stind.i4     

    // [101 13 - 101 29]
    IL_03ed: ldloc.1      // shifts
    IL_03ee: ldc.i4.s     18 // 0x12
    IL_03f0: conv.i       
    IL_03f1: ldc.i4.4     
    IL_03f2: mul          
    IL_03f3: add          
    IL_03f4: ldc.i4.s     14 // 0x0e
    IL_03f6: stind.i4     

    // [102 13 - 102 29]
    IL_03f7: ldloc.1      // shifts
    IL_03f8: ldc.i4.s     19 // 0x13
    IL_03fa: conv.i       
    IL_03fb: ldc.i4.4     
    IL_03fc: mul          
    IL_03fd: add          
    IL_03fe: ldc.i4.s     20 // 0x14
    IL_0400: stind.i4     

    // [103 13 - 103 28]
    IL_0401: ldloc.1      // shifts
    IL_0402: ldc.i4.s     20 // 0x14
    IL_0404: conv.i       
    IL_0405: ldc.i4.4     
    IL_0406: mul          
    IL_0407: add          
    IL_0408: ldc.i4.5     
    IL_0409: stind.i4     

    // [104 13 - 104 28]
    IL_040a: ldloc.1      // shifts
    IL_040b: ldc.i4.s     21 // 0x15
    IL_040d: conv.i       
    IL_040e: ldc.i4.4     
    IL_040f: mul          
    IL_0410: add          
    IL_0411: ldc.i4.s     9 // 0x09
    IL_0413: stind.i4     

    // [105 13 - 105 29]
    IL_0414: ldloc.1      // shifts
    IL_0415: ldc.i4.s     22 // 0x16
    IL_0417: conv.i       
    IL_0418: ldc.i4.4     
    IL_0419: mul          
    IL_041a: add          
    IL_041b: ldc.i4.s     14 // 0x0e
    IL_041d: stind.i4     

    // [106 13 - 106 29]
    IL_041e: ldloc.1      // shifts
    IL_041f: ldc.i4.s     23 // 0x17
    IL_0421: conv.i       
    IL_0422: ldc.i4.4     
    IL_0423: mul          
    IL_0424: add          
    IL_0425: ldc.i4.s     20 // 0x14
    IL_0427: stind.i4     

    // [107 13 - 107 28]
    IL_0428: ldloc.1      // shifts
    IL_0429: ldc.i4.s     24 // 0x18
    IL_042b: conv.i       
    IL_042c: ldc.i4.4     
    IL_042d: mul          
    IL_042e: add          
    IL_042f: ldc.i4.5     
    IL_0430: stind.i4     

    // [108 13 - 108 28]
    IL_0431: ldloc.1      // shifts
    IL_0432: ldc.i4.s     25 // 0x19
    IL_0434: conv.i       
    IL_0435: ldc.i4.4     
    IL_0436: mul          
    IL_0437: add          
    IL_0438: ldc.i4.s     9 // 0x09
    IL_043a: stind.i4     

    // [109 13 - 109 29]
    IL_043b: ldloc.1      // shifts
    IL_043c: ldc.i4.s     26 // 0x1a
    IL_043e: conv.i       
    IL_043f: ldc.i4.4     
    IL_0440: mul          
    IL_0441: add          
    IL_0442: ldc.i4.s     14 // 0x0e
    IL_0444: stind.i4     

    // [110 13 - 110 29]
    IL_0445: ldloc.1      // shifts
    IL_0446: ldc.i4.s     27 // 0x1b
    IL_0448: conv.i       
    IL_0449: ldc.i4.4     
    IL_044a: mul          
    IL_044b: add          
    IL_044c: ldc.i4.s     20 // 0x14
    IL_044e: stind.i4     

    // [111 13 - 111 28]
    IL_044f: ldloc.1      // shifts
    IL_0450: ldc.i4.s     28 // 0x1c
    IL_0452: conv.i       
    IL_0453: ldc.i4.4     
    IL_0454: mul          
    IL_0455: add          
    IL_0456: ldc.i4.5     
    IL_0457: stind.i4     

    // [112 13 - 112 28]
    IL_0458: ldloc.1      // shifts
    IL_0459: ldc.i4.s     29 // 0x1d
    IL_045b: conv.i       
    IL_045c: ldc.i4.4     
    IL_045d: mul          
    IL_045e: add          
    IL_045f: ldc.i4.s     9 // 0x09
    IL_0461: stind.i4     

    // [113 13 - 113 29]
    IL_0462: ldloc.1      // shifts
    IL_0463: ldc.i4.s     30 // 0x1e
    IL_0465: conv.i       
    IL_0466: ldc.i4.4     
    IL_0467: mul          
    IL_0468: add          
    IL_0469: ldc.i4.s     14 // 0x0e
    IL_046b: stind.i4     

    // [114 13 - 114 29]
    IL_046c: ldloc.1      // shifts
    IL_046d: ldc.i4.s     31 // 0x1f
    IL_046f: conv.i       
    IL_0470: ldc.i4.4     
    IL_0471: mul          
    IL_0472: add          
    IL_0473: ldc.i4.s     20 // 0x14
    IL_0475: stind.i4     

    // [115 13 - 115 28]
    IL_0476: ldloc.1      // shifts
    IL_0477: ldc.i4.s     32 // 0x20
    IL_0479: conv.i       
    IL_047a: ldc.i4.4     
    IL_047b: mul          
    IL_047c: add          
    IL_047d: ldc.i4.4     
    IL_047e: stind.i4     

    // [116 13 - 116 29]
    IL_047f: ldloc.1      // shifts
    IL_0480: ldc.i4.s     33 // 0x21
    IL_0482: conv.i       
    IL_0483: ldc.i4.4     
    IL_0484: mul          
    IL_0485: add          
    IL_0486: ldc.i4.s     11 // 0x0b
    IL_0488: stind.i4     

    // [117 13 - 117 29]
    IL_0489: ldloc.1      // shifts
    IL_048a: ldc.i4.s     34 // 0x22
    IL_048c: conv.i       
    IL_048d: ldc.i4.4     
    IL_048e: mul          
    IL_048f: add          
    IL_0490: ldc.i4.s     16 // 0x10
    IL_0492: stind.i4     

    // [118 13 - 118 29]
    IL_0493: ldloc.1      // shifts
    IL_0494: ldc.i4.s     35 // 0x23
    IL_0496: conv.i       
    IL_0497: ldc.i4.4     
    IL_0498: mul          
    IL_0499: add          
    IL_049a: ldc.i4.s     23 // 0x17
    IL_049c: stind.i4     

    // [119 13 - 119 28]
    IL_049d: ldloc.1      // shifts
    IL_049e: ldc.i4.s     36 // 0x24
    IL_04a0: conv.i       
    IL_04a1: ldc.i4.4     
    IL_04a2: mul          
    IL_04a3: add          
    IL_04a4: ldc.i4.4     
    IL_04a5: stind.i4     

    // [120 13 - 120 29]
    IL_04a6: ldloc.1      // shifts
    IL_04a7: ldc.i4.s     37 // 0x25
    IL_04a9: conv.i       
    IL_04aa: ldc.i4.4     
    IL_04ab: mul          
    IL_04ac: add          
    IL_04ad: ldc.i4.s     11 // 0x0b
    IL_04af: stind.i4     

    // [121 13 - 121 29]
    IL_04b0: ldloc.1      // shifts
    IL_04b1: ldc.i4.s     38 // 0x26
    IL_04b3: conv.i       
    IL_04b4: ldc.i4.4     
    IL_04b5: mul          
    IL_04b6: add          
    IL_04b7: ldc.i4.s     16 // 0x10
    IL_04b9: stind.i4     

    // [122 13 - 122 29]
    IL_04ba: ldloc.1      // shifts
    IL_04bb: ldc.i4.s     39 // 0x27
    IL_04bd: conv.i       
    IL_04be: ldc.i4.4     
    IL_04bf: mul          
    IL_04c0: add          
    IL_04c1: ldc.i4.s     23 // 0x17
    IL_04c3: stind.i4     

    // [123 13 - 123 28]
    IL_04c4: ldloc.1      // shifts
    IL_04c5: ldc.i4.s     40 // 0x28
    IL_04c7: conv.i       
    IL_04c8: ldc.i4.4     
    IL_04c9: mul          
    IL_04ca: add          
    IL_04cb: ldc.i4.4     
    IL_04cc: stind.i4     

    // [124 13 - 124 29]
    IL_04cd: ldloc.1      // shifts
    IL_04ce: ldc.i4.s     41 // 0x29
    IL_04d0: conv.i       
    IL_04d1: ldc.i4.4     
    IL_04d2: mul          
    IL_04d3: add          
    IL_04d4: ldc.i4.s     11 // 0x0b
    IL_04d6: stind.i4     

    // [125 13 - 125 29]
    IL_04d7: ldloc.1      // shifts
    IL_04d8: ldc.i4.s     42 // 0x2a
    IL_04da: conv.i       
    IL_04db: ldc.i4.4     
    IL_04dc: mul          
    IL_04dd: add          
    IL_04de: ldc.i4.s     16 // 0x10
    IL_04e0: stind.i4     

    // [126 13 - 126 29]
    IL_04e1: ldloc.1      // shifts
    IL_04e2: ldc.i4.s     43 // 0x2b
    IL_04e4: conv.i       
    IL_04e5: ldc.i4.4     
    IL_04e6: mul          
    IL_04e7: add          
    IL_04e8: ldc.i4.s     23 // 0x17
    IL_04ea: stind.i4     

    // [127 13 - 127 28]
    IL_04eb: ldloc.1      // shifts
    IL_04ec: ldc.i4.s     44 // 0x2c
    IL_04ee: conv.i       
    IL_04ef: ldc.i4.4     
    IL_04f0: mul          
    IL_04f1: add          
    IL_04f2: ldc.i4.4     
    IL_04f3: stind.i4     

    // [128 13 - 128 29]
    IL_04f4: ldloc.1      // shifts
    IL_04f5: ldc.i4.s     45 // 0x2d
    IL_04f7: conv.i       
    IL_04f8: ldc.i4.4     
    IL_04f9: mul          
    IL_04fa: add          
    IL_04fb: ldc.i4.s     11 // 0x0b
    IL_04fd: stind.i4     

    // [129 13 - 129 29]
    IL_04fe: ldloc.1      // shifts
    IL_04ff: ldc.i4.s     46 // 0x2e
    IL_0501: conv.i       
    IL_0502: ldc.i4.4     
    IL_0503: mul          
    IL_0504: add          
    IL_0505: ldc.i4.s     16 // 0x10
    IL_0507: stind.i4     

    // [130 13 - 130 29]
    IL_0508: ldloc.1      // shifts
    IL_0509: ldc.i4.s     47 // 0x2f
    IL_050b: conv.i       
    IL_050c: ldc.i4.4     
    IL_050d: mul          
    IL_050e: add          
    IL_050f: ldc.i4.s     23 // 0x17
    IL_0511: stind.i4     

    // [131 13 - 131 28]
    IL_0512: ldloc.1      // shifts
    IL_0513: ldc.i4.s     48 // 0x30
    IL_0515: conv.i       
    IL_0516: ldc.i4.4     
    IL_0517: mul          
    IL_0518: add          
    IL_0519: ldc.i4.6     
    IL_051a: stind.i4     

    // [132 13 - 132 29]
    IL_051b: ldloc.1      // shifts
    IL_051c: ldc.i4.s     49 // 0x31
    IL_051e: conv.i       
    IL_051f: ldc.i4.4     
    IL_0520: mul          
    IL_0521: add          
    IL_0522: ldc.i4.s     10 // 0x0a
    IL_0524: stind.i4     

    // [133 13 - 133 29]
    IL_0525: ldloc.1      // shifts
    IL_0526: ldc.i4.s     50 // 0x32
    IL_0528: conv.i       
    IL_0529: ldc.i4.4     
    IL_052a: mul          
    IL_052b: add          
    IL_052c: ldc.i4.s     15 // 0x0f
    IL_052e: stind.i4     

    // [134 13 - 134 29]
    IL_052f: ldloc.1      // shifts
    IL_0530: ldc.i4.s     51 // 0x33
    IL_0532: conv.i       
    IL_0533: ldc.i4.4     
    IL_0534: mul          
    IL_0535: add          
    IL_0536: ldc.i4.s     21 // 0x15
    IL_0538: stind.i4     

    // [135 13 - 135 28]
    IL_0539: ldloc.1      // shifts
    IL_053a: ldc.i4.s     52 // 0x34
    IL_053c: conv.i       
    IL_053d: ldc.i4.4     
    IL_053e: mul          
    IL_053f: add          
    IL_0540: ldc.i4.6     
    IL_0541: stind.i4     

    // [136 13 - 136 29]
    IL_0542: ldloc.1      // shifts
    IL_0543: ldc.i4.s     53 // 0x35
    IL_0545: conv.i       
    IL_0546: ldc.i4.4     
    IL_0547: mul          
    IL_0548: add          
    IL_0549: ldc.i4.s     10 // 0x0a
    IL_054b: stind.i4     

    // [137 13 - 137 29]
    IL_054c: ldloc.1      // shifts
    IL_054d: ldc.i4.s     54 // 0x36
    IL_054f: conv.i       
    IL_0550: ldc.i4.4     
    IL_0551: mul          
    IL_0552: add          
    IL_0553: ldc.i4.s     15 // 0x0f
    IL_0555: stind.i4     

    // [138 13 - 138 29]
    IL_0556: ldloc.1      // shifts
    IL_0557: ldc.i4.s     55 // 0x37
    IL_0559: conv.i       
    IL_055a: ldc.i4.4     
    IL_055b: mul          
    IL_055c: add          
    IL_055d: ldc.i4.s     21 // 0x15
    IL_055f: stind.i4     

    // [139 13 - 139 28]
    IL_0560: ldloc.1      // shifts
    IL_0561: ldc.i4.s     56 // 0x38
    IL_0563: conv.i       
    IL_0564: ldc.i4.4     
    IL_0565: mul          
    IL_0566: add          
    IL_0567: ldc.i4.6     
    IL_0568: stind.i4     

    // [140 13 - 140 29]
    IL_0569: ldloc.1      // shifts
    IL_056a: ldc.i4.s     57 // 0x39
    IL_056c: conv.i       
    IL_056d: ldc.i4.4     
    IL_056e: mul          
    IL_056f: add          
    IL_0570: ldc.i4.s     10 // 0x0a
    IL_0572: stind.i4     

    // [141 13 - 141 29]
    IL_0573: ldloc.1      // shifts
    IL_0574: ldc.i4.s     58 // 0x3a
    IL_0576: conv.i       
    IL_0577: ldc.i4.4     
    IL_0578: mul          
    IL_0579: add          
    IL_057a: ldc.i4.s     15 // 0x0f
    IL_057c: stind.i4     

    // [142 13 - 142 29]
    IL_057d: ldloc.1      // shifts
    IL_057e: ldc.i4.s     59 // 0x3b
    IL_0580: conv.i       
    IL_0581: ldc.i4.4     
    IL_0582: mul          
    IL_0583: add          
    IL_0584: ldc.i4.s     21 // 0x15
    IL_0586: stind.i4     

    // [143 13 - 143 28]
    IL_0587: ldloc.1      // shifts
    IL_0588: ldc.i4.s     60 // 0x3c
    IL_058a: conv.i       
    IL_058b: ldc.i4.4     
    IL_058c: mul          
    IL_058d: add          
    IL_058e: ldc.i4.6     
    IL_058f: stind.i4     

    // [144 13 - 144 29]
    IL_0590: ldloc.1      // shifts
    IL_0591: ldc.i4.s     61 // 0x3d
    IL_0593: conv.i       
    IL_0594: ldc.i4.4     
    IL_0595: mul          
    IL_0596: add          
    IL_0597: ldc.i4.s     10 // 0x0a
    IL_0599: stind.i4     

    // [145 13 - 145 29]
    IL_059a: ldloc.1      // shifts
    IL_059b: ldc.i4.s     62 // 0x3e
    IL_059d: conv.i       
    IL_059e: ldc.i4.4     
    IL_059f: mul          
    IL_05a0: add          
    IL_05a1: ldc.i4.s     15 // 0x0f
    IL_05a3: stind.i4     

    // [146 13 - 146 29]
    IL_05a4: ldloc.1      // shifts
    IL_05a5: ldc.i4.s     63 // 0x3f
    IL_05a7: conv.i       
    IL_05a8: ldc.i4.4     
    IL_05a9: mul          
    IL_05aa: add          
    IL_05ab: ldc.i4.s     21 // 0x15
    IL_05ad: stind.i4     

    // [148 13 - 148 32]
    IL_05ae: ldloc.0      // sines
    IL_05af: stsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr

    // [149 13 - 149 34]
    IL_05b4: ldloc.1      // shifts
    IL_05b5: stsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr

    // [150 9 - 150 10]
    IL_05ba: ret          

  } // end of method Md5_3_Unmanaged::Initialize

  .method public hidebysig static unsigned int8[] 
    GetBytes(
      unsigned int8[] input
    ) cil managed 
  {
    .maxstack 3
    .locals init (
      [0] valuetype Md5DotNet.Md5Digest digest,
      [1] unsigned int8& pinned inputPtr,
      [2] unsigned int8[] V_2
    )

    // [155 20 - 155 42]
    IL_0000: ldarg.0      // input
    IL_0001: dup          
    IL_0002: stloc.2      // V_2
    IL_0003: brfalse.s    IL_000a
    IL_0005: ldloc.2      // V_2
    IL_0006: ldlen        
    IL_0007: conv.i4      
    IL_0008: brtrue.s     IL_000f
    IL_000a: ldc.i4.0     
    IL_000b: conv.u       
    IL_000c: stloc.1      // inputPtr
    IL_000d: br.s         IL_0017
    IL_000f: ldloc.2      // V_2
    IL_0010: ldc.i4.0     
    IL_0011: ldelema      [mscorlib]System.Byte
    IL_0016: stloc.1      // inputPtr

    // [157 17 - 157 60]
    IL_0017: ldloc.1      // inputPtr
    IL_0018: conv.i       
    IL_0019: ldarg.0      // input
    IL_001a: ldlen        
    IL_001b: conv.i4      
    IL_001c: ldloca.s     digest
    IL_001e: conv.u       
    IL_001f: call         void Md5DotNet.Md5_3_Unmanaged::GetDigest(unsigned int8*, int32, valuetype Md5DotNet.Md5Digest*)

    IL_0024: ldc.i4.0     
    IL_0025: conv.u       
    IL_0026: stloc.1      // inputPtr

    // [160 13 - 160 38]
    IL_0027: ldloca.s     digest
    IL_0029: call         instance unsigned int8[] Md5DotNet.Md5Digest::GetBytes()
    IL_002e: ret          

  } // end of method Md5_3_Unmanaged::GetBytes

  .method public hidebysig static void 
    GetDigest(
      unsigned int8* input, 
      int32 length, 
      valuetype Md5DotNet.Md5Digest* digest
    ) cil managed 
  {
    .maxstack 6
    .locals init (
      [0] int32 blocksCount,
      [1] valuetype Md5DotNet.Block paddingBlockData,
      [2] int32 blockIndex,
      [3] int32 offset,
      [4] int32 blockEnd,
      [5] unsigned int32* blockPtr,
      [6] unsigned int32 a,
      [7] unsigned int32 b,
      [8] unsigned int32 c,
      [9] unsigned int32 d,
      [10] unsigned int32 f,
      [11] int32 g,
      [12] int32 bytesRemaining,
      [13] unsigned int8* paddingPtr
    )

    // [165 13 - 165 36]
    IL_0000: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
    IL_0005: ldc.i4.0     
    IL_0006: conv.u       
    IL_0007: bne.un.s     IL_000e

    // [166 17 - 166 30]
    IL_0009: call         void Md5DotNet.Md5_3_Unmanaged::Initialize()

    // [169 13 - 169 64]
    IL_000e: ldarg.1      // length
    IL_000f: ldc.i4.8     
    IL_0010: add          
    IL_0011: ldc.i4.s     64 // 0x40
    IL_0013: div          
    IL_0014: ldc.i4.1     
    IL_0015: add          
    IL_0016: stloc.0      // blocksCount

    // [171 13 - 171 36]
    IL_0017: ldarg.2      // digest
    IL_0018: ldc.i4       1732584193 // 0x67452301
    IL_001d: stfld        unsigned int32 Md5DotNet.Md5Digest::A

    // [172 13 - 172 36]
    IL_0022: ldarg.2      // digest
    IL_0023: ldc.i4       -271733879 // 0xefcdab89
    IL_0028: stfld        unsigned int32 Md5DotNet.Md5Digest::B

    // [173 13 - 173 36]
    IL_002d: ldarg.2      // digest
    IL_002e: ldc.i4       -1732584194 // 0x98badcfe
    IL_0033: stfld        unsigned int32 Md5DotNet.Md5Digest::C

    // [174 13 - 174 36]
    IL_0038: ldarg.2      // digest
    IL_0039: ldc.i4       271733878 // 0x10325476
    IL_003e: stfld        unsigned int32 Md5DotNet.Md5Digest::D

    // [176 13 - 176 51]
    IL_0043: ldloca.s     paddingBlockData
    IL_0045: initobj      Md5DotNet.Block

    // [178 18 - 178 36]
    IL_004b: ldc.i4.0     
    IL_004c: stloc.2      // blockIndex

    IL_004d: br           IL_146a
    // start of loop, entry point: IL_146a

      // [180 17 - 180 57]
      IL_0052: ldloc.2      // blockIndex
      IL_0053: ldc.i4.s     64 // 0x40
      IL_0055: mul          
      IL_0056: stloc.3      // offset

      // [181 17 - 181 55]
      IL_0057: ldloc.3      // offset
      IL_0058: ldc.i4.s     64 // 0x40
      IL_005a: add          
      IL_005b: stloc.s      blockEnd

      // [185 17 - 185 39]
      IL_005d: ldloc.s      blockEnd
      IL_005f: ldarg.1      // length
      IL_0060: ble.s        IL_00c6

      // [187 21 - 187 42]
      IL_0062: ldloc.3      // offset
      IL_0063: ldarg.1      // length
      IL_0064: blt.s        IL_0087

      // [189 25 - 189 46]
      IL_0066: ldloc.3      // offset
      IL_0067: ldarg.1      // length
      IL_0068: bne.un.s     IL_0075

      // [192 29 - 192 62]
      IL_006a: ldloca.s     paddingBlockData
      IL_006c: conv.u       
      IL_006d: ldc.i4       128 // 0x00000080
      IL_0072: stind.i1     

      // [193 25 - 193 26]
      IL_0073: br.s         IL_007d

      // [197 29 - 197 63]
      IL_0075: ldloca.s     paddingBlockData
      IL_0077: initobj      Md5DotNet.Block

      // [200 25 - 200 68]
      IL_007d: ldloca.s     paddingBlockData
      IL_007f: ldarg.1      // length
      IL_0080: call         instance void Md5DotNet.Block::SetOriginalLength(int32)

      // [201 21 - 201 22]
      IL_0085: br.s         IL_00bf

      // [204 25 - 204 82]
      IL_0087: ldc.i4.s     64 // 0x40
      IL_0089: ldloc.s      blockEnd
      IL_008b: ldarg.1      // length
      IL_008c: sub          
      IL_008d: sub          
      IL_008e: stloc.s      bytesRemaining

      // [205 25 - 205 67]
      IL_0090: ldloca.s     paddingBlockData
      IL_0092: conv.u       
      IL_0093: stloc.s      paddingPtr

      // [206 25 - 206 93]
      IL_0095: ldarg.0      // input
      IL_0096: ldloc.3      // offset
      IL_0097: add          
      IL_0098: conv.u       
      IL_0099: ldloc.s      paddingPtr
      IL_009b: ldloc.s      bytesRemaining
      IL_009d: call         void Md5DotNet.Common::UnsafeMemoryCopy(unsigned int8*, unsigned int8*, int32)

      // [209 25 - 209 59]
      IL_00a2: ldloc.s      paddingPtr
      IL_00a4: ldloc.s      bytesRemaining
      IL_00a6: add          
      IL_00a7: ldc.i4       128 // 0x00000080
      IL_00ac: stind.i1     

      // [212 25 - 212 71]
      IL_00ad: ldc.i4.s     64 // 0x40
      IL_00af: ldloc.s      bytesRemaining
      IL_00b1: ldc.i4.1     
      IL_00b2: add          
      IL_00b3: sub          
      IL_00b4: ldc.i4.8     
      IL_00b5: blt.s        IL_00bf

      // [213 29 - 213 72]
      IL_00b7: ldloca.s     paddingBlockData
      IL_00b9: ldarg.1      // length
      IL_00ba: call         instance void Md5DotNet.Block::SetOriginalLength(int32)

      // [217 21 - 217 57]
      IL_00bf: ldloca.s     paddingBlockData
      IL_00c1: conv.u       
      IL_00c2: stloc.s      blockPtr

      // [218 17 - 218 18]
      IL_00c4: br.s         IL_00cc

      // [221 21 - 221 54]
      IL_00c6: ldarg.0      // input
      IL_00c7: ldloc.3      // offset
      IL_00c8: add          
      IL_00c9: conv.u       
      IL_00ca: stloc.s      blockPtr

      // [224 17 - 224 35]
      IL_00cc: ldarg.2      // digest
      IL_00cd: ldfld        unsigned int32 Md5DotNet.Md5Digest::A
      IL_00d2: stloc.s      a

      // [225 17 - 225 35]
      IL_00d4: ldarg.2      // digest
      IL_00d5: ldfld        unsigned int32 Md5DotNet.Md5Digest::B
      IL_00da: stloc.s      b

      // [226 17 - 226 35]
      IL_00dc: ldarg.2      // digest
      IL_00dd: ldfld        unsigned int32 Md5DotNet.Md5Digest::C
      IL_00e2: stloc.s      c

      // [227 17 - 227 35]
      IL_00e4: ldarg.2      // digest
      IL_00e5: ldfld        unsigned int32 Md5DotNet.Md5Digest::D
      IL_00ea: stloc.s      d

      // [233 17 - 233 40]
      IL_00ec: ldloc.s      b
      IL_00ee: ldloc.s      c
      IL_00f0: and          
      IL_00f1: ldloc.s      b
      IL_00f3: not          
      IL_00f4: ldloc.s      d
      IL_00f6: and          
      IL_00f7: or           
      IL_00f8: stloc.s      f

      // [234 17 - 234 23]
      IL_00fa: ldc.i4.0     
      IL_00fb: stloc.s      g

      // [235 17 - 235 27]
      IL_00fd: ldloc.s      d

      // [236 17 - 236 23]
      IL_00ff: ldloc.s      c
      IL_0101: stloc.s      d

      // [237 17 - 237 23]
      IL_0103: ldloc.s      b
      IL_0105: stloc.s      c

      // [238 17 - 238 86]
      IL_0107: ldloc.s      b
      IL_0109: ldloc.s      a
      IL_010b: ldloc.s      f
      IL_010d: add          
      IL_010e: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0113: ldind.u4     
      IL_0114: add          
      IL_0115: ldloc.s      blockPtr
      IL_0117: ldloc.s      g
      IL_0119: conv.i       
      IL_011a: ldc.i4.4     
      IL_011b: mul          
      IL_011c: add          
      IL_011d: ldind.u4     
      IL_011e: add          
      IL_011f: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0124: ldind.i4     
      IL_0125: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_012a: add          
      IL_012b: stloc.s      b

      // [239 17 - 239 27]
      IL_012d: stloc.s      a

      // [242 17 - 242 40]
      IL_012f: ldloc.s      b
      IL_0131: ldloc.s      c
      IL_0133: and          
      IL_0134: ldloc.s      b
      IL_0136: not          
      IL_0137: ldloc.s      d
      IL_0139: and          
      IL_013a: or           
      IL_013b: stloc.s      f

      // [243 17 - 243 23]
      IL_013d: ldc.i4.1     
      IL_013e: stloc.s      g

      // [244 17 - 244 27]
      IL_0140: ldloc.s      d

      // [245 17 - 245 23]
      IL_0142: ldloc.s      c
      IL_0144: stloc.s      d

      // [246 17 - 246 23]
      IL_0146: ldloc.s      b
      IL_0148: stloc.s      c

      // [247 17 - 247 86]
      IL_014a: ldloc.s      b
      IL_014c: ldloc.s      a
      IL_014e: ldloc.s      f
      IL_0150: add          
      IL_0151: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0156: ldc.i4.4     
      IL_0157: add          
      IL_0158: ldind.u4     
      IL_0159: add          
      IL_015a: ldloc.s      blockPtr
      IL_015c: ldloc.s      g
      IL_015e: conv.i       
      IL_015f: ldc.i4.4     
      IL_0160: mul          
      IL_0161: add          
      IL_0162: ldind.u4     
      IL_0163: add          
      IL_0164: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0169: ldc.i4.4     
      IL_016a: add          
      IL_016b: ldind.i4     
      IL_016c: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0171: add          
      IL_0172: stloc.s      b

      // [248 17 - 248 27]
      IL_0174: stloc.s      a

      // [251 17 - 251 40]
      IL_0176: ldloc.s      b
      IL_0178: ldloc.s      c
      IL_017a: and          
      IL_017b: ldloc.s      b
      IL_017d: not          
      IL_017e: ldloc.s      d
      IL_0180: and          
      IL_0181: or           
      IL_0182: stloc.s      f

      // [252 17 - 252 23]
      IL_0184: ldc.i4.2     
      IL_0185: stloc.s      g

      // [253 17 - 253 27]
      IL_0187: ldloc.s      d

      // [254 17 - 254 23]
      IL_0189: ldloc.s      c
      IL_018b: stloc.s      d

      // [255 17 - 255 23]
      IL_018d: ldloc.s      b
      IL_018f: stloc.s      c

      // [256 17 - 256 86]
      IL_0191: ldloc.s      b
      IL_0193: ldloc.s      a
      IL_0195: ldloc.s      f
      IL_0197: add          
      IL_0198: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_019d: ldc.i4.2     
      IL_019e: conv.i       
      IL_019f: ldc.i4.4     
      IL_01a0: mul          
      IL_01a1: add          
      IL_01a2: ldind.u4     
      IL_01a3: add          
      IL_01a4: ldloc.s      blockPtr
      IL_01a6: ldloc.s      g
      IL_01a8: conv.i       
      IL_01a9: ldc.i4.4     
      IL_01aa: mul          
      IL_01ab: add          
      IL_01ac: ldind.u4     
      IL_01ad: add          
      IL_01ae: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_01b3: ldc.i4.2     
      IL_01b4: conv.i       
      IL_01b5: ldc.i4.4     
      IL_01b6: mul          
      IL_01b7: add          
      IL_01b8: ldind.i4     
      IL_01b9: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_01be: add          
      IL_01bf: stloc.s      b

      // [257 17 - 257 27]
      IL_01c1: stloc.s      a

      // [260 17 - 260 40]
      IL_01c3: ldloc.s      b
      IL_01c5: ldloc.s      c
      IL_01c7: and          
      IL_01c8: ldloc.s      b
      IL_01ca: not          
      IL_01cb: ldloc.s      d
      IL_01cd: and          
      IL_01ce: or           
      IL_01cf: stloc.s      f

      // [261 17 - 261 23]
      IL_01d1: ldc.i4.3     
      IL_01d2: stloc.s      g

      // [262 17 - 262 27]
      IL_01d4: ldloc.s      d

      // [263 17 - 263 23]
      IL_01d6: ldloc.s      c
      IL_01d8: stloc.s      d

      // [264 17 - 264 23]
      IL_01da: ldloc.s      b
      IL_01dc: stloc.s      c

      // [265 17 - 265 86]
      IL_01de: ldloc.s      b
      IL_01e0: ldloc.s      a
      IL_01e2: ldloc.s      f
      IL_01e4: add          
      IL_01e5: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_01ea: ldc.i4.3     
      IL_01eb: conv.i       
      IL_01ec: ldc.i4.4     
      IL_01ed: mul          
      IL_01ee: add          
      IL_01ef: ldind.u4     
      IL_01f0: add          
      IL_01f1: ldloc.s      blockPtr
      IL_01f3: ldloc.s      g
      IL_01f5: conv.i       
      IL_01f6: ldc.i4.4     
      IL_01f7: mul          
      IL_01f8: add          
      IL_01f9: ldind.u4     
      IL_01fa: add          
      IL_01fb: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0200: ldc.i4.3     
      IL_0201: conv.i       
      IL_0202: ldc.i4.4     
      IL_0203: mul          
      IL_0204: add          
      IL_0205: ldind.i4     
      IL_0206: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_020b: add          
      IL_020c: stloc.s      b

      // [266 17 - 266 27]
      IL_020e: stloc.s      a

      // [269 17 - 269 40]
      IL_0210: ldloc.s      b
      IL_0212: ldloc.s      c
      IL_0214: and          
      IL_0215: ldloc.s      b
      IL_0217: not          
      IL_0218: ldloc.s      d
      IL_021a: and          
      IL_021b: or           
      IL_021c: stloc.s      f

      // [270 17 - 270 23]
      IL_021e: ldc.i4.4     
      IL_021f: stloc.s      g

      // [271 17 - 271 27]
      IL_0221: ldloc.s      d

      // [272 17 - 272 23]
      IL_0223: ldloc.s      c
      IL_0225: stloc.s      d

      // [273 17 - 273 23]
      IL_0227: ldloc.s      b
      IL_0229: stloc.s      c

      // [274 17 - 274 86]
      IL_022b: ldloc.s      b
      IL_022d: ldloc.s      a
      IL_022f: ldloc.s      f
      IL_0231: add          
      IL_0232: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0237: ldc.i4.4     
      IL_0238: conv.i       
      IL_0239: ldc.i4.4     
      IL_023a: mul          
      IL_023b: add          
      IL_023c: ldind.u4     
      IL_023d: add          
      IL_023e: ldloc.s      blockPtr
      IL_0240: ldloc.s      g
      IL_0242: conv.i       
      IL_0243: ldc.i4.4     
      IL_0244: mul          
      IL_0245: add          
      IL_0246: ldind.u4     
      IL_0247: add          
      IL_0248: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_024d: ldc.i4.4     
      IL_024e: conv.i       
      IL_024f: ldc.i4.4     
      IL_0250: mul          
      IL_0251: add          
      IL_0252: ldind.i4     
      IL_0253: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0258: add          
      IL_0259: stloc.s      b

      // [275 17 - 275 27]
      IL_025b: stloc.s      a

      // [278 17 - 278 40]
      IL_025d: ldloc.s      b
      IL_025f: ldloc.s      c
      IL_0261: and          
      IL_0262: ldloc.s      b
      IL_0264: not          
      IL_0265: ldloc.s      d
      IL_0267: and          
      IL_0268: or           
      IL_0269: stloc.s      f

      // [279 17 - 279 23]
      IL_026b: ldc.i4.5     
      IL_026c: stloc.s      g

      // [280 17 - 280 27]
      IL_026e: ldloc.s      d

      // [281 17 - 281 23]
      IL_0270: ldloc.s      c
      IL_0272: stloc.s      d

      // [282 17 - 282 23]
      IL_0274: ldloc.s      b
      IL_0276: stloc.s      c

      // [283 17 - 283 86]
      IL_0278: ldloc.s      b
      IL_027a: ldloc.s      a
      IL_027c: ldloc.s      f
      IL_027e: add          
      IL_027f: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0284: ldc.i4.5     
      IL_0285: conv.i       
      IL_0286: ldc.i4.4     
      IL_0287: mul          
      IL_0288: add          
      IL_0289: ldind.u4     
      IL_028a: add          
      IL_028b: ldloc.s      blockPtr
      IL_028d: ldloc.s      g
      IL_028f: conv.i       
      IL_0290: ldc.i4.4     
      IL_0291: mul          
      IL_0292: add          
      IL_0293: ldind.u4     
      IL_0294: add          
      IL_0295: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_029a: ldc.i4.5     
      IL_029b: conv.i       
      IL_029c: ldc.i4.4     
      IL_029d: mul          
      IL_029e: add          
      IL_029f: ldind.i4     
      IL_02a0: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_02a5: add          
      IL_02a6: stloc.s      b

      // [284 17 - 284 27]
      IL_02a8: stloc.s      a

      // [287 17 - 287 40]
      IL_02aa: ldloc.s      b
      IL_02ac: ldloc.s      c
      IL_02ae: and          
      IL_02af: ldloc.s      b
      IL_02b1: not          
      IL_02b2: ldloc.s      d
      IL_02b4: and          
      IL_02b5: or           
      IL_02b6: stloc.s      f

      // [288 17 - 288 23]
      IL_02b8: ldc.i4.6     
      IL_02b9: stloc.s      g

      // [289 17 - 289 27]
      IL_02bb: ldloc.s      d

      // [290 17 - 290 23]
      IL_02bd: ldloc.s      c
      IL_02bf: stloc.s      d

      // [291 17 - 291 23]
      IL_02c1: ldloc.s      b
      IL_02c3: stloc.s      c

      // [292 17 - 292 86]
      IL_02c5: ldloc.s      b
      IL_02c7: ldloc.s      a
      IL_02c9: ldloc.s      f
      IL_02cb: add          
      IL_02cc: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_02d1: ldc.i4.6     
      IL_02d2: conv.i       
      IL_02d3: ldc.i4.4     
      IL_02d4: mul          
      IL_02d5: add          
      IL_02d6: ldind.u4     
      IL_02d7: add          
      IL_02d8: ldloc.s      blockPtr
      IL_02da: ldloc.s      g
      IL_02dc: conv.i       
      IL_02dd: ldc.i4.4     
      IL_02de: mul          
      IL_02df: add          
      IL_02e0: ldind.u4     
      IL_02e1: add          
      IL_02e2: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_02e7: ldc.i4.6     
      IL_02e8: conv.i       
      IL_02e9: ldc.i4.4     
      IL_02ea: mul          
      IL_02eb: add          
      IL_02ec: ldind.i4     
      IL_02ed: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_02f2: add          
      IL_02f3: stloc.s      b

      // [293 17 - 293 27]
      IL_02f5: stloc.s      a

      // [296 17 - 296 40]
      IL_02f7: ldloc.s      b
      IL_02f9: ldloc.s      c
      IL_02fb: and          
      IL_02fc: ldloc.s      b
      IL_02fe: not          
      IL_02ff: ldloc.s      d
      IL_0301: and          
      IL_0302: or           
      IL_0303: stloc.s      f

      // [297 17 - 297 23]
      IL_0305: ldc.i4.7     
      IL_0306: stloc.s      g

      // [298 17 - 298 27]
      IL_0308: ldloc.s      d

      // [299 17 - 299 23]
      IL_030a: ldloc.s      c
      IL_030c: stloc.s      d

      // [300 17 - 300 23]
      IL_030e: ldloc.s      b
      IL_0310: stloc.s      c

      // [301 17 - 301 86]
      IL_0312: ldloc.s      b
      IL_0314: ldloc.s      a
      IL_0316: ldloc.s      f
      IL_0318: add          
      IL_0319: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_031e: ldc.i4.7     
      IL_031f: conv.i       
      IL_0320: ldc.i4.4     
      IL_0321: mul          
      IL_0322: add          
      IL_0323: ldind.u4     
      IL_0324: add          
      IL_0325: ldloc.s      blockPtr
      IL_0327: ldloc.s      g
      IL_0329: conv.i       
      IL_032a: ldc.i4.4     
      IL_032b: mul          
      IL_032c: add          
      IL_032d: ldind.u4     
      IL_032e: add          
      IL_032f: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0334: ldc.i4.7     
      IL_0335: conv.i       
      IL_0336: ldc.i4.4     
      IL_0337: mul          
      IL_0338: add          
      IL_0339: ldind.i4     
      IL_033a: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_033f: add          
      IL_0340: stloc.s      b

      // [302 17 - 302 27]
      IL_0342: stloc.s      a

      // [305 17 - 305 40]
      IL_0344: ldloc.s      b
      IL_0346: ldloc.s      c
      IL_0348: and          
      IL_0349: ldloc.s      b
      IL_034b: not          
      IL_034c: ldloc.s      d
      IL_034e: and          
      IL_034f: or           
      IL_0350: stloc.s      f

      // [306 17 - 306 23]
      IL_0352: ldc.i4.8     
      IL_0353: stloc.s      g

      // [307 17 - 307 27]
      IL_0355: ldloc.s      d

      // [308 17 - 308 23]
      IL_0357: ldloc.s      c
      IL_0359: stloc.s      d

      // [309 17 - 309 23]
      IL_035b: ldloc.s      b
      IL_035d: stloc.s      c

      // [310 17 - 310 86]
      IL_035f: ldloc.s      b
      IL_0361: ldloc.s      a
      IL_0363: ldloc.s      f
      IL_0365: add          
      IL_0366: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_036b: ldc.i4.8     
      IL_036c: conv.i       
      IL_036d: ldc.i4.4     
      IL_036e: mul          
      IL_036f: add          
      IL_0370: ldind.u4     
      IL_0371: add          
      IL_0372: ldloc.s      blockPtr
      IL_0374: ldloc.s      g
      IL_0376: conv.i       
      IL_0377: ldc.i4.4     
      IL_0378: mul          
      IL_0379: add          
      IL_037a: ldind.u4     
      IL_037b: add          
      IL_037c: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0381: ldc.i4.8     
      IL_0382: conv.i       
      IL_0383: ldc.i4.4     
      IL_0384: mul          
      IL_0385: add          
      IL_0386: ldind.i4     
      IL_0387: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_038c: add          
      IL_038d: stloc.s      b

      // [311 17 - 311 27]
      IL_038f: stloc.s      a

      // [314 17 - 314 40]
      IL_0391: ldloc.s      b
      IL_0393: ldloc.s      c
      IL_0395: and          
      IL_0396: ldloc.s      b
      IL_0398: not          
      IL_0399: ldloc.s      d
      IL_039b: and          
      IL_039c: or           
      IL_039d: stloc.s      f

      // [315 17 - 315 23]
      IL_039f: ldc.i4.s     9 // 0x09
      IL_03a1: stloc.s      g

      // [316 17 - 316 27]
      IL_03a3: ldloc.s      d

      // [317 17 - 317 23]
      IL_03a5: ldloc.s      c
      IL_03a7: stloc.s      d

      // [318 17 - 318 23]
      IL_03a9: ldloc.s      b
      IL_03ab: stloc.s      c

      // [319 17 - 319 86]
      IL_03ad: ldloc.s      b
      IL_03af: ldloc.s      a
      IL_03b1: ldloc.s      f
      IL_03b3: add          
      IL_03b4: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_03b9: ldc.i4.s     9 // 0x09
      IL_03bb: conv.i       
      IL_03bc: ldc.i4.4     
      IL_03bd: mul          
      IL_03be: add          
      IL_03bf: ldind.u4     
      IL_03c0: add          
      IL_03c1: ldloc.s      blockPtr
      IL_03c3: ldloc.s      g
      IL_03c5: conv.i       
      IL_03c6: ldc.i4.4     
      IL_03c7: mul          
      IL_03c8: add          
      IL_03c9: ldind.u4     
      IL_03ca: add          
      IL_03cb: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_03d0: ldc.i4.s     9 // 0x09
      IL_03d2: conv.i       
      IL_03d3: ldc.i4.4     
      IL_03d4: mul          
      IL_03d5: add          
      IL_03d6: ldind.i4     
      IL_03d7: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_03dc: add          
      IL_03dd: stloc.s      b

      // [320 17 - 320 27]
      IL_03df: stloc.s      a

      // [323 17 - 323 40]
      IL_03e1: ldloc.s      b
      IL_03e3: ldloc.s      c
      IL_03e5: and          
      IL_03e6: ldloc.s      b
      IL_03e8: not          
      IL_03e9: ldloc.s      d
      IL_03eb: and          
      IL_03ec: or           
      IL_03ed: stloc.s      f

      // [324 17 - 324 24]
      IL_03ef: ldc.i4.s     10 // 0x0a
      IL_03f1: stloc.s      g

      // [325 17 - 325 27]
      IL_03f3: ldloc.s      d

      // [326 17 - 326 23]
      IL_03f5: ldloc.s      c
      IL_03f7: stloc.s      d

      // [327 17 - 327 23]
      IL_03f9: ldloc.s      b
      IL_03fb: stloc.s      c

      // [328 17 - 328 88]
      IL_03fd: ldloc.s      b
      IL_03ff: ldloc.s      a
      IL_0401: ldloc.s      f
      IL_0403: add          
      IL_0404: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0409: ldc.i4.s     10 // 0x0a
      IL_040b: conv.i       
      IL_040c: ldc.i4.4     
      IL_040d: mul          
      IL_040e: add          
      IL_040f: ldind.u4     
      IL_0410: add          
      IL_0411: ldloc.s      blockPtr
      IL_0413: ldloc.s      g
      IL_0415: conv.i       
      IL_0416: ldc.i4.4     
      IL_0417: mul          
      IL_0418: add          
      IL_0419: ldind.u4     
      IL_041a: add          
      IL_041b: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0420: ldc.i4.s     10 // 0x0a
      IL_0422: conv.i       
      IL_0423: ldc.i4.4     
      IL_0424: mul          
      IL_0425: add          
      IL_0426: ldind.i4     
      IL_0427: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_042c: add          
      IL_042d: stloc.s      b

      // [329 17 - 329 27]
      IL_042f: stloc.s      a

      // [332 17 - 332 40]
      IL_0431: ldloc.s      b
      IL_0433: ldloc.s      c
      IL_0435: and          
      IL_0436: ldloc.s      b
      IL_0438: not          
      IL_0439: ldloc.s      d
      IL_043b: and          
      IL_043c: or           
      IL_043d: stloc.s      f

      // [333 17 - 333 24]
      IL_043f: ldc.i4.s     11 // 0x0b
      IL_0441: stloc.s      g

      // [334 17 - 334 27]
      IL_0443: ldloc.s      d

      // [335 17 - 335 23]
      IL_0445: ldloc.s      c
      IL_0447: stloc.s      d

      // [336 17 - 336 23]
      IL_0449: ldloc.s      b
      IL_044b: stloc.s      c

      // [337 17 - 337 88]
      IL_044d: ldloc.s      b
      IL_044f: ldloc.s      a
      IL_0451: ldloc.s      f
      IL_0453: add          
      IL_0454: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0459: ldc.i4.s     11 // 0x0b
      IL_045b: conv.i       
      IL_045c: ldc.i4.4     
      IL_045d: mul          
      IL_045e: add          
      IL_045f: ldind.u4     
      IL_0460: add          
      IL_0461: ldloc.s      blockPtr
      IL_0463: ldloc.s      g
      IL_0465: conv.i       
      IL_0466: ldc.i4.4     
      IL_0467: mul          
      IL_0468: add          
      IL_0469: ldind.u4     
      IL_046a: add          
      IL_046b: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0470: ldc.i4.s     11 // 0x0b
      IL_0472: conv.i       
      IL_0473: ldc.i4.4     
      IL_0474: mul          
      IL_0475: add          
      IL_0476: ldind.i4     
      IL_0477: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_047c: add          
      IL_047d: stloc.s      b

      // [338 17 - 338 27]
      IL_047f: stloc.s      a

      // [341 17 - 341 40]
      IL_0481: ldloc.s      b
      IL_0483: ldloc.s      c
      IL_0485: and          
      IL_0486: ldloc.s      b
      IL_0488: not          
      IL_0489: ldloc.s      d
      IL_048b: and          
      IL_048c: or           
      IL_048d: stloc.s      f

      // [342 17 - 342 24]
      IL_048f: ldc.i4.s     12 // 0x0c
      IL_0491: stloc.s      g

      // [343 17 - 343 27]
      IL_0493: ldloc.s      d

      // [344 17 - 344 23]
      IL_0495: ldloc.s      c
      IL_0497: stloc.s      d

      // [345 17 - 345 23]
      IL_0499: ldloc.s      b
      IL_049b: stloc.s      c

      // [346 17 - 346 88]
      IL_049d: ldloc.s      b
      IL_049f: ldloc.s      a
      IL_04a1: ldloc.s      f
      IL_04a3: add          
      IL_04a4: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_04a9: ldc.i4.s     12 // 0x0c
      IL_04ab: conv.i       
      IL_04ac: ldc.i4.4     
      IL_04ad: mul          
      IL_04ae: add          
      IL_04af: ldind.u4     
      IL_04b0: add          
      IL_04b1: ldloc.s      blockPtr
      IL_04b3: ldloc.s      g
      IL_04b5: conv.i       
      IL_04b6: ldc.i4.4     
      IL_04b7: mul          
      IL_04b8: add          
      IL_04b9: ldind.u4     
      IL_04ba: add          
      IL_04bb: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_04c0: ldc.i4.s     12 // 0x0c
      IL_04c2: conv.i       
      IL_04c3: ldc.i4.4     
      IL_04c4: mul          
      IL_04c5: add          
      IL_04c6: ldind.i4     
      IL_04c7: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_04cc: add          
      IL_04cd: stloc.s      b

      // [347 17 - 347 27]
      IL_04cf: stloc.s      a

      // [350 17 - 350 40]
      IL_04d1: ldloc.s      b
      IL_04d3: ldloc.s      c
      IL_04d5: and          
      IL_04d6: ldloc.s      b
      IL_04d8: not          
      IL_04d9: ldloc.s      d
      IL_04db: and          
      IL_04dc: or           
      IL_04dd: stloc.s      f

      // [351 17 - 351 24]
      IL_04df: ldc.i4.s     13 // 0x0d
      IL_04e1: stloc.s      g

      // [352 17 - 352 27]
      IL_04e3: ldloc.s      d

      // [353 17 - 353 23]
      IL_04e5: ldloc.s      c
      IL_04e7: stloc.s      d

      // [354 17 - 354 23]
      IL_04e9: ldloc.s      b
      IL_04eb: stloc.s      c

      // [355 17 - 355 88]
      IL_04ed: ldloc.s      b
      IL_04ef: ldloc.s      a
      IL_04f1: ldloc.s      f
      IL_04f3: add          
      IL_04f4: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_04f9: ldc.i4.s     13 // 0x0d
      IL_04fb: conv.i       
      IL_04fc: ldc.i4.4     
      IL_04fd: mul          
      IL_04fe: add          
      IL_04ff: ldind.u4     
      IL_0500: add          
      IL_0501: ldloc.s      blockPtr
      IL_0503: ldloc.s      g
      IL_0505: conv.i       
      IL_0506: ldc.i4.4     
      IL_0507: mul          
      IL_0508: add          
      IL_0509: ldind.u4     
      IL_050a: add          
      IL_050b: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0510: ldc.i4.s     13 // 0x0d
      IL_0512: conv.i       
      IL_0513: ldc.i4.4     
      IL_0514: mul          
      IL_0515: add          
      IL_0516: ldind.i4     
      IL_0517: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_051c: add          
      IL_051d: stloc.s      b

      // [356 17 - 356 27]
      IL_051f: stloc.s      a

      // [359 17 - 359 40]
      IL_0521: ldloc.s      b
      IL_0523: ldloc.s      c
      IL_0525: and          
      IL_0526: ldloc.s      b
      IL_0528: not          
      IL_0529: ldloc.s      d
      IL_052b: and          
      IL_052c: or           
      IL_052d: stloc.s      f

      // [360 17 - 360 24]
      IL_052f: ldc.i4.s     14 // 0x0e
      IL_0531: stloc.s      g

      // [361 17 - 361 27]
      IL_0533: ldloc.s      d

      // [362 17 - 362 23]
      IL_0535: ldloc.s      c
      IL_0537: stloc.s      d

      // [363 17 - 363 23]
      IL_0539: ldloc.s      b
      IL_053b: stloc.s      c

      // [364 17 - 364 88]
      IL_053d: ldloc.s      b
      IL_053f: ldloc.s      a
      IL_0541: ldloc.s      f
      IL_0543: add          
      IL_0544: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0549: ldc.i4.s     14 // 0x0e
      IL_054b: conv.i       
      IL_054c: ldc.i4.4     
      IL_054d: mul          
      IL_054e: add          
      IL_054f: ldind.u4     
      IL_0550: add          
      IL_0551: ldloc.s      blockPtr
      IL_0553: ldloc.s      g
      IL_0555: conv.i       
      IL_0556: ldc.i4.4     
      IL_0557: mul          
      IL_0558: add          
      IL_0559: ldind.u4     
      IL_055a: add          
      IL_055b: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0560: ldc.i4.s     14 // 0x0e
      IL_0562: conv.i       
      IL_0563: ldc.i4.4     
      IL_0564: mul          
      IL_0565: add          
      IL_0566: ldind.i4     
      IL_0567: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_056c: add          
      IL_056d: stloc.s      b

      // [365 17 - 365 27]
      IL_056f: stloc.s      a

      // [368 17 - 368 40]
      IL_0571: ldloc.s      b
      IL_0573: ldloc.s      c
      IL_0575: and          
      IL_0576: ldloc.s      b
      IL_0578: not          
      IL_0579: ldloc.s      d
      IL_057b: and          
      IL_057c: or           
      IL_057d: stloc.s      f

      // [369 17 - 369 24]
      IL_057f: ldc.i4.s     15 // 0x0f
      IL_0581: stloc.s      g

      // [370 17 - 370 27]
      IL_0583: ldloc.s      d

      // [371 17 - 371 23]
      IL_0585: ldloc.s      c
      IL_0587: stloc.s      d

      // [372 17 - 372 23]
      IL_0589: ldloc.s      b
      IL_058b: stloc.s      c

      // [373 17 - 373 88]
      IL_058d: ldloc.s      b
      IL_058f: ldloc.s      a
      IL_0591: ldloc.s      f
      IL_0593: add          
      IL_0594: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0599: ldc.i4.s     15 // 0x0f
      IL_059b: conv.i       
      IL_059c: ldc.i4.4     
      IL_059d: mul          
      IL_059e: add          
      IL_059f: ldind.u4     
      IL_05a0: add          
      IL_05a1: ldloc.s      blockPtr
      IL_05a3: ldloc.s      g
      IL_05a5: conv.i       
      IL_05a6: ldc.i4.4     
      IL_05a7: mul          
      IL_05a8: add          
      IL_05a9: ldind.u4     
      IL_05aa: add          
      IL_05ab: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_05b0: ldc.i4.s     15 // 0x0f
      IL_05b2: conv.i       
      IL_05b3: ldc.i4.4     
      IL_05b4: mul          
      IL_05b5: add          
      IL_05b6: ldind.i4     
      IL_05b7: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_05bc: add          
      IL_05bd: stloc.s      b

      // [374 17 - 374 27]
      IL_05bf: stloc.s      a

      // [377 17 - 377 40]
      IL_05c1: ldloc.s      d
      IL_05c3: ldloc.s      b
      IL_05c5: and          
      IL_05c6: ldloc.s      d
      IL_05c8: not          
      IL_05c9: ldloc.s      c
      IL_05cb: and          
      IL_05cc: or           
      IL_05cd: stloc.s      f

      // [378 17 - 378 39]
      IL_05cf: ldc.i4.1     
      IL_05d0: stloc.s      g

      // [379 17 - 379 27]
      IL_05d2: ldloc.s      d

      // [380 17 - 380 23]
      IL_05d4: ldloc.s      c
      IL_05d6: stloc.s      d

      // [381 17 - 381 23]
      IL_05d8: ldloc.s      b
      IL_05da: stloc.s      c

      // [382 17 - 382 88]
      IL_05dc: ldloc.s      b
      IL_05de: ldloc.s      a
      IL_05e0: ldloc.s      f
      IL_05e2: add          
      IL_05e3: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_05e8: ldc.i4.s     16 // 0x10
      IL_05ea: conv.i       
      IL_05eb: ldc.i4.4     
      IL_05ec: mul          
      IL_05ed: add          
      IL_05ee: ldind.u4     
      IL_05ef: add          
      IL_05f0: ldloc.s      blockPtr
      IL_05f2: ldloc.s      g
      IL_05f4: conv.i       
      IL_05f5: ldc.i4.4     
      IL_05f6: mul          
      IL_05f7: add          
      IL_05f8: ldind.u4     
      IL_05f9: add          
      IL_05fa: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_05ff: ldc.i4.s     16 // 0x10
      IL_0601: conv.i       
      IL_0602: ldc.i4.4     
      IL_0603: mul          
      IL_0604: add          
      IL_0605: ldind.i4     
      IL_0606: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_060b: add          
      IL_060c: stloc.s      b

      // [383 17 - 383 27]
      IL_060e: stloc.s      a

      // [386 17 - 386 40]
      IL_0610: ldloc.s      d
      IL_0612: ldloc.s      b
      IL_0614: and          
      IL_0615: ldloc.s      d
      IL_0617: not          
      IL_0618: ldloc.s      c
      IL_061a: and          
      IL_061b: or           
      IL_061c: stloc.s      f

      // [387 17 - 387 39]
      IL_061e: ldc.i4.6     
      IL_061f: stloc.s      g

      // [388 17 - 388 27]
      IL_0621: ldloc.s      d

      // [389 17 - 389 23]
      IL_0623: ldloc.s      c
      IL_0625: stloc.s      d

      // [390 17 - 390 23]
      IL_0627: ldloc.s      b
      IL_0629: stloc.s      c

      // [391 17 - 391 88]
      IL_062b: ldloc.s      b
      IL_062d: ldloc.s      a
      IL_062f: ldloc.s      f
      IL_0631: add          
      IL_0632: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0637: ldc.i4.s     17 // 0x11
      IL_0639: conv.i       
      IL_063a: ldc.i4.4     
      IL_063b: mul          
      IL_063c: add          
      IL_063d: ldind.u4     
      IL_063e: add          
      IL_063f: ldloc.s      blockPtr
      IL_0641: ldloc.s      g
      IL_0643: conv.i       
      IL_0644: ldc.i4.4     
      IL_0645: mul          
      IL_0646: add          
      IL_0647: ldind.u4     
      IL_0648: add          
      IL_0649: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_064e: ldc.i4.s     17 // 0x11
      IL_0650: conv.i       
      IL_0651: ldc.i4.4     
      IL_0652: mul          
      IL_0653: add          
      IL_0654: ldind.i4     
      IL_0655: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_065a: add          
      IL_065b: stloc.s      b

      // [392 17 - 392 27]
      IL_065d: stloc.s      a

      // [395 17 - 395 40]
      IL_065f: ldloc.s      d
      IL_0661: ldloc.s      b
      IL_0663: and          
      IL_0664: ldloc.s      d
      IL_0666: not          
      IL_0667: ldloc.s      c
      IL_0669: and          
      IL_066a: or           
      IL_066b: stloc.s      f

      // [396 17 - 396 39]
      IL_066d: ldc.i4.s     11 // 0x0b
      IL_066f: stloc.s      g

      // [397 17 - 397 27]
      IL_0671: ldloc.s      d

      // [398 17 - 398 23]
      IL_0673: ldloc.s      c
      IL_0675: stloc.s      d

      // [399 17 - 399 23]
      IL_0677: ldloc.s      b
      IL_0679: stloc.s      c

      // [400 17 - 400 88]
      IL_067b: ldloc.s      b
      IL_067d: ldloc.s      a
      IL_067f: ldloc.s      f
      IL_0681: add          
      IL_0682: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0687: ldc.i4.s     18 // 0x12
      IL_0689: conv.i       
      IL_068a: ldc.i4.4     
      IL_068b: mul          
      IL_068c: add          
      IL_068d: ldind.u4     
      IL_068e: add          
      IL_068f: ldloc.s      blockPtr
      IL_0691: ldloc.s      g
      IL_0693: conv.i       
      IL_0694: ldc.i4.4     
      IL_0695: mul          
      IL_0696: add          
      IL_0697: ldind.u4     
      IL_0698: add          
      IL_0699: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_069e: ldc.i4.s     18 // 0x12
      IL_06a0: conv.i       
      IL_06a1: ldc.i4.4     
      IL_06a2: mul          
      IL_06a3: add          
      IL_06a4: ldind.i4     
      IL_06a5: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_06aa: add          
      IL_06ab: stloc.s      b

      // [401 17 - 401 27]
      IL_06ad: stloc.s      a

      // [404 17 - 404 40]
      IL_06af: ldloc.s      d
      IL_06b1: ldloc.s      b
      IL_06b3: and          
      IL_06b4: ldloc.s      d
      IL_06b6: not          
      IL_06b7: ldloc.s      c
      IL_06b9: and          
      IL_06ba: or           
      IL_06bb: stloc.s      f

      // [405 17 - 405 39]
      IL_06bd: ldc.i4.0     
      IL_06be: stloc.s      g

      // [406 17 - 406 27]
      IL_06c0: ldloc.s      d

      // [407 17 - 407 23]
      IL_06c2: ldloc.s      c
      IL_06c4: stloc.s      d

      // [408 17 - 408 23]
      IL_06c6: ldloc.s      b
      IL_06c8: stloc.s      c

      // [409 17 - 409 88]
      IL_06ca: ldloc.s      b
      IL_06cc: ldloc.s      a
      IL_06ce: ldloc.s      f
      IL_06d0: add          
      IL_06d1: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_06d6: ldc.i4.s     19 // 0x13
      IL_06d8: conv.i       
      IL_06d9: ldc.i4.4     
      IL_06da: mul          
      IL_06db: add          
      IL_06dc: ldind.u4     
      IL_06dd: add          
      IL_06de: ldloc.s      blockPtr
      IL_06e0: ldloc.s      g
      IL_06e2: conv.i       
      IL_06e3: ldc.i4.4     
      IL_06e4: mul          
      IL_06e5: add          
      IL_06e6: ldind.u4     
      IL_06e7: add          
      IL_06e8: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_06ed: ldc.i4.s     19 // 0x13
      IL_06ef: conv.i       
      IL_06f0: ldc.i4.4     
      IL_06f1: mul          
      IL_06f2: add          
      IL_06f3: ldind.i4     
      IL_06f4: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_06f9: add          
      IL_06fa: stloc.s      b

      // [410 17 - 410 27]
      IL_06fc: stloc.s      a

      // [413 17 - 413 40]
      IL_06fe: ldloc.s      d
      IL_0700: ldloc.s      b
      IL_0702: and          
      IL_0703: ldloc.s      d
      IL_0705: not          
      IL_0706: ldloc.s      c
      IL_0708: and          
      IL_0709: or           
      IL_070a: stloc.s      f

      // [414 17 - 414 39]
      IL_070c: ldc.i4.5     
      IL_070d: stloc.s      g

      // [415 17 - 415 27]
      IL_070f: ldloc.s      d

      // [416 17 - 416 23]
      IL_0711: ldloc.s      c
      IL_0713: stloc.s      d

      // [417 17 - 417 23]
      IL_0715: ldloc.s      b
      IL_0717: stloc.s      c

      // [418 17 - 418 88]
      IL_0719: ldloc.s      b
      IL_071b: ldloc.s      a
      IL_071d: ldloc.s      f
      IL_071f: add          
      IL_0720: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0725: ldc.i4.s     20 // 0x14
      IL_0727: conv.i       
      IL_0728: ldc.i4.4     
      IL_0729: mul          
      IL_072a: add          
      IL_072b: ldind.u4     
      IL_072c: add          
      IL_072d: ldloc.s      blockPtr
      IL_072f: ldloc.s      g
      IL_0731: conv.i       
      IL_0732: ldc.i4.4     
      IL_0733: mul          
      IL_0734: add          
      IL_0735: ldind.u4     
      IL_0736: add          
      IL_0737: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_073c: ldc.i4.s     20 // 0x14
      IL_073e: conv.i       
      IL_073f: ldc.i4.4     
      IL_0740: mul          
      IL_0741: add          
      IL_0742: ldind.i4     
      IL_0743: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0748: add          
      IL_0749: stloc.s      b

      // [419 17 - 419 27]
      IL_074b: stloc.s      a

      // [422 17 - 422 40]
      IL_074d: ldloc.s      d
      IL_074f: ldloc.s      b
      IL_0751: and          
      IL_0752: ldloc.s      d
      IL_0754: not          
      IL_0755: ldloc.s      c
      IL_0757: and          
      IL_0758: or           
      IL_0759: stloc.s      f

      // [423 17 - 423 39]
      IL_075b: ldc.i4.s     10 // 0x0a
      IL_075d: stloc.s      g

      // [424 17 - 424 27]
      IL_075f: ldloc.s      d

      // [425 17 - 425 23]
      IL_0761: ldloc.s      c
      IL_0763: stloc.s      d

      // [426 17 - 426 23]
      IL_0765: ldloc.s      b
      IL_0767: stloc.s      c

      // [427 17 - 427 88]
      IL_0769: ldloc.s      b
      IL_076b: ldloc.s      a
      IL_076d: ldloc.s      f
      IL_076f: add          
      IL_0770: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0775: ldc.i4.s     21 // 0x15
      IL_0777: conv.i       
      IL_0778: ldc.i4.4     
      IL_0779: mul          
      IL_077a: add          
      IL_077b: ldind.u4     
      IL_077c: add          
      IL_077d: ldloc.s      blockPtr
      IL_077f: ldloc.s      g
      IL_0781: conv.i       
      IL_0782: ldc.i4.4     
      IL_0783: mul          
      IL_0784: add          
      IL_0785: ldind.u4     
      IL_0786: add          
      IL_0787: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_078c: ldc.i4.s     21 // 0x15
      IL_078e: conv.i       
      IL_078f: ldc.i4.4     
      IL_0790: mul          
      IL_0791: add          
      IL_0792: ldind.i4     
      IL_0793: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0798: add          
      IL_0799: stloc.s      b

      // [428 17 - 428 27]
      IL_079b: stloc.s      a

      // [431 17 - 431 40]
      IL_079d: ldloc.s      d
      IL_079f: ldloc.s      b
      IL_07a1: and          
      IL_07a2: ldloc.s      d
      IL_07a4: not          
      IL_07a5: ldloc.s      c
      IL_07a7: and          
      IL_07a8: or           
      IL_07a9: stloc.s      f

      // [432 17 - 432 39]
      IL_07ab: ldc.i4.s     15 // 0x0f
      IL_07ad: stloc.s      g

      // [433 17 - 433 27]
      IL_07af: ldloc.s      d

      // [434 17 - 434 23]
      IL_07b1: ldloc.s      c
      IL_07b3: stloc.s      d

      // [435 17 - 435 23]
      IL_07b5: ldloc.s      b
      IL_07b7: stloc.s      c

      // [436 17 - 436 88]
      IL_07b9: ldloc.s      b
      IL_07bb: ldloc.s      a
      IL_07bd: ldloc.s      f
      IL_07bf: add          
      IL_07c0: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_07c5: ldc.i4.s     22 // 0x16
      IL_07c7: conv.i       
      IL_07c8: ldc.i4.4     
      IL_07c9: mul          
      IL_07ca: add          
      IL_07cb: ldind.u4     
      IL_07cc: add          
      IL_07cd: ldloc.s      blockPtr
      IL_07cf: ldloc.s      g
      IL_07d1: conv.i       
      IL_07d2: ldc.i4.4     
      IL_07d3: mul          
      IL_07d4: add          
      IL_07d5: ldind.u4     
      IL_07d6: add          
      IL_07d7: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_07dc: ldc.i4.s     22 // 0x16
      IL_07de: conv.i       
      IL_07df: ldc.i4.4     
      IL_07e0: mul          
      IL_07e1: add          
      IL_07e2: ldind.i4     
      IL_07e3: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_07e8: add          
      IL_07e9: stloc.s      b

      // [437 17 - 437 27]
      IL_07eb: stloc.s      a

      // [440 17 - 440 40]
      IL_07ed: ldloc.s      d
      IL_07ef: ldloc.s      b
      IL_07f1: and          
      IL_07f2: ldloc.s      d
      IL_07f4: not          
      IL_07f5: ldloc.s      c
      IL_07f7: and          
      IL_07f8: or           
      IL_07f9: stloc.s      f

      // [441 17 - 441 39]
      IL_07fb: ldc.i4.4     
      IL_07fc: stloc.s      g

      // [442 17 - 442 27]
      IL_07fe: ldloc.s      d

      // [443 17 - 443 23]
      IL_0800: ldloc.s      c
      IL_0802: stloc.s      d

      // [444 17 - 444 23]
      IL_0804: ldloc.s      b
      IL_0806: stloc.s      c

      // [445 17 - 445 88]
      IL_0808: ldloc.s      b
      IL_080a: ldloc.s      a
      IL_080c: ldloc.s      f
      IL_080e: add          
      IL_080f: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0814: ldc.i4.s     23 // 0x17
      IL_0816: conv.i       
      IL_0817: ldc.i4.4     
      IL_0818: mul          
      IL_0819: add          
      IL_081a: ldind.u4     
      IL_081b: add          
      IL_081c: ldloc.s      blockPtr
      IL_081e: ldloc.s      g
      IL_0820: conv.i       
      IL_0821: ldc.i4.4     
      IL_0822: mul          
      IL_0823: add          
      IL_0824: ldind.u4     
      IL_0825: add          
      IL_0826: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_082b: ldc.i4.s     23 // 0x17
      IL_082d: conv.i       
      IL_082e: ldc.i4.4     
      IL_082f: mul          
      IL_0830: add          
      IL_0831: ldind.i4     
      IL_0832: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0837: add          
      IL_0838: stloc.s      b

      // [446 17 - 446 27]
      IL_083a: stloc.s      a

      // [449 17 - 449 40]
      IL_083c: ldloc.s      d
      IL_083e: ldloc.s      b
      IL_0840: and          
      IL_0841: ldloc.s      d
      IL_0843: not          
      IL_0844: ldloc.s      c
      IL_0846: and          
      IL_0847: or           
      IL_0848: stloc.s      f

      // [450 17 - 450 39]
      IL_084a: ldc.i4.s     9 // 0x09
      IL_084c: stloc.s      g

      // [451 17 - 451 27]
      IL_084e: ldloc.s      d

      // [452 17 - 452 23]
      IL_0850: ldloc.s      c
      IL_0852: stloc.s      d

      // [453 17 - 453 23]
      IL_0854: ldloc.s      b
      IL_0856: stloc.s      c

      // [454 17 - 454 88]
      IL_0858: ldloc.s      b
      IL_085a: ldloc.s      a
      IL_085c: ldloc.s      f
      IL_085e: add          
      IL_085f: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0864: ldc.i4.s     24 // 0x18
      IL_0866: conv.i       
      IL_0867: ldc.i4.4     
      IL_0868: mul          
      IL_0869: add          
      IL_086a: ldind.u4     
      IL_086b: add          
      IL_086c: ldloc.s      blockPtr
      IL_086e: ldloc.s      g
      IL_0870: conv.i       
      IL_0871: ldc.i4.4     
      IL_0872: mul          
      IL_0873: add          
      IL_0874: ldind.u4     
      IL_0875: add          
      IL_0876: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_087b: ldc.i4.s     24 // 0x18
      IL_087d: conv.i       
      IL_087e: ldc.i4.4     
      IL_087f: mul          
      IL_0880: add          
      IL_0881: ldind.i4     
      IL_0882: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0887: add          
      IL_0888: stloc.s      b

      // [455 17 - 455 27]
      IL_088a: stloc.s      a

      // [458 17 - 458 40]
      IL_088c: ldloc.s      d
      IL_088e: ldloc.s      b
      IL_0890: and          
      IL_0891: ldloc.s      d
      IL_0893: not          
      IL_0894: ldloc.s      c
      IL_0896: and          
      IL_0897: or           
      IL_0898: stloc.s      f

      // [459 17 - 459 39]
      IL_089a: ldc.i4.s     14 // 0x0e
      IL_089c: stloc.s      g

      // [460 17 - 460 27]
      IL_089e: ldloc.s      d

      // [461 17 - 461 23]
      IL_08a0: ldloc.s      c
      IL_08a2: stloc.s      d

      // [462 17 - 462 23]
      IL_08a4: ldloc.s      b
      IL_08a6: stloc.s      c

      // [463 17 - 463 88]
      IL_08a8: ldloc.s      b
      IL_08aa: ldloc.s      a
      IL_08ac: ldloc.s      f
      IL_08ae: add          
      IL_08af: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_08b4: ldc.i4.s     25 // 0x19
      IL_08b6: conv.i       
      IL_08b7: ldc.i4.4     
      IL_08b8: mul          
      IL_08b9: add          
      IL_08ba: ldind.u4     
      IL_08bb: add          
      IL_08bc: ldloc.s      blockPtr
      IL_08be: ldloc.s      g
      IL_08c0: conv.i       
      IL_08c1: ldc.i4.4     
      IL_08c2: mul          
      IL_08c3: add          
      IL_08c4: ldind.u4     
      IL_08c5: add          
      IL_08c6: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_08cb: ldc.i4.s     25 // 0x19
      IL_08cd: conv.i       
      IL_08ce: ldc.i4.4     
      IL_08cf: mul          
      IL_08d0: add          
      IL_08d1: ldind.i4     
      IL_08d2: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_08d7: add          
      IL_08d8: stloc.s      b

      // [464 17 - 464 27]
      IL_08da: stloc.s      a

      // [467 17 - 467 40]
      IL_08dc: ldloc.s      d
      IL_08de: ldloc.s      b
      IL_08e0: and          
      IL_08e1: ldloc.s      d
      IL_08e3: not          
      IL_08e4: ldloc.s      c
      IL_08e6: and          
      IL_08e7: or           
      IL_08e8: stloc.s      f

      // [468 17 - 468 39]
      IL_08ea: ldc.i4.3     
      IL_08eb: stloc.s      g

      // [469 17 - 469 27]
      IL_08ed: ldloc.s      d

      // [470 17 - 470 23]
      IL_08ef: ldloc.s      c
      IL_08f1: stloc.s      d

      // [471 17 - 471 23]
      IL_08f3: ldloc.s      b
      IL_08f5: stloc.s      c

      // [472 17 - 472 88]
      IL_08f7: ldloc.s      b
      IL_08f9: ldloc.s      a
      IL_08fb: ldloc.s      f
      IL_08fd: add          
      IL_08fe: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0903: ldc.i4.s     26 // 0x1a
      IL_0905: conv.i       
      IL_0906: ldc.i4.4     
      IL_0907: mul          
      IL_0908: add          
      IL_0909: ldind.u4     
      IL_090a: add          
      IL_090b: ldloc.s      blockPtr
      IL_090d: ldloc.s      g
      IL_090f: conv.i       
      IL_0910: ldc.i4.4     
      IL_0911: mul          
      IL_0912: add          
      IL_0913: ldind.u4     
      IL_0914: add          
      IL_0915: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_091a: ldc.i4.s     26 // 0x1a
      IL_091c: conv.i       
      IL_091d: ldc.i4.4     
      IL_091e: mul          
      IL_091f: add          
      IL_0920: ldind.i4     
      IL_0921: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0926: add          
      IL_0927: stloc.s      b

      // [473 17 - 473 27]
      IL_0929: stloc.s      a

      // [476 17 - 476 40]
      IL_092b: ldloc.s      d
      IL_092d: ldloc.s      b
      IL_092f: and          
      IL_0930: ldloc.s      d
      IL_0932: not          
      IL_0933: ldloc.s      c
      IL_0935: and          
      IL_0936: or           
      IL_0937: stloc.s      f

      // [477 17 - 477 39]
      IL_0939: ldc.i4.8     
      IL_093a: stloc.s      g

      // [478 17 - 478 27]
      IL_093c: ldloc.s      d

      // [479 17 - 479 23]
      IL_093e: ldloc.s      c
      IL_0940: stloc.s      d

      // [480 17 - 480 23]
      IL_0942: ldloc.s      b
      IL_0944: stloc.s      c

      // [481 17 - 481 88]
      IL_0946: ldloc.s      b
      IL_0948: ldloc.s      a
      IL_094a: ldloc.s      f
      IL_094c: add          
      IL_094d: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0952: ldc.i4.s     27 // 0x1b
      IL_0954: conv.i       
      IL_0955: ldc.i4.4     
      IL_0956: mul          
      IL_0957: add          
      IL_0958: ldind.u4     
      IL_0959: add          
      IL_095a: ldloc.s      blockPtr
      IL_095c: ldloc.s      g
      IL_095e: conv.i       
      IL_095f: ldc.i4.4     
      IL_0960: mul          
      IL_0961: add          
      IL_0962: ldind.u4     
      IL_0963: add          
      IL_0964: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0969: ldc.i4.s     27 // 0x1b
      IL_096b: conv.i       
      IL_096c: ldc.i4.4     
      IL_096d: mul          
      IL_096e: add          
      IL_096f: ldind.i4     
      IL_0970: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0975: add          
      IL_0976: stloc.s      b

      // [482 17 - 482 27]
      IL_0978: stloc.s      a

      // [485 17 - 485 40]
      IL_097a: ldloc.s      d
      IL_097c: ldloc.s      b
      IL_097e: and          
      IL_097f: ldloc.s      d
      IL_0981: not          
      IL_0982: ldloc.s      c
      IL_0984: and          
      IL_0985: or           
      IL_0986: stloc.s      f

      // [486 17 - 486 39]
      IL_0988: ldc.i4.s     13 // 0x0d
      IL_098a: stloc.s      g

      // [487 17 - 487 27]
      IL_098c: ldloc.s      d

      // [488 17 - 488 23]
      IL_098e: ldloc.s      c
      IL_0990: stloc.s      d

      // [489 17 - 489 23]
      IL_0992: ldloc.s      b
      IL_0994: stloc.s      c

      // [490 17 - 490 88]
      IL_0996: ldloc.s      b
      IL_0998: ldloc.s      a
      IL_099a: ldloc.s      f
      IL_099c: add          
      IL_099d: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_09a2: ldc.i4.s     28 // 0x1c
      IL_09a4: conv.i       
      IL_09a5: ldc.i4.4     
      IL_09a6: mul          
      IL_09a7: add          
      IL_09a8: ldind.u4     
      IL_09a9: add          
      IL_09aa: ldloc.s      blockPtr
      IL_09ac: ldloc.s      g
      IL_09ae: conv.i       
      IL_09af: ldc.i4.4     
      IL_09b0: mul          
      IL_09b1: add          
      IL_09b2: ldind.u4     
      IL_09b3: add          
      IL_09b4: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_09b9: ldc.i4.s     28 // 0x1c
      IL_09bb: conv.i       
      IL_09bc: ldc.i4.4     
      IL_09bd: mul          
      IL_09be: add          
      IL_09bf: ldind.i4     
      IL_09c0: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_09c5: add          
      IL_09c6: stloc.s      b

      // [491 17 - 491 27]
      IL_09c8: stloc.s      a

      // [494 17 - 494 40]
      IL_09ca: ldloc.s      d
      IL_09cc: ldloc.s      b
      IL_09ce: and          
      IL_09cf: ldloc.s      d
      IL_09d1: not          
      IL_09d2: ldloc.s      c
      IL_09d4: and          
      IL_09d5: or           
      IL_09d6: stloc.s      f

      // [495 17 - 495 39]
      IL_09d8: ldc.i4.2     
      IL_09d9: stloc.s      g

      // [496 17 - 496 27]
      IL_09db: ldloc.s      d

      // [497 17 - 497 23]
      IL_09dd: ldloc.s      c
      IL_09df: stloc.s      d

      // [498 17 - 498 23]
      IL_09e1: ldloc.s      b
      IL_09e3: stloc.s      c

      // [499 17 - 499 88]
      IL_09e5: ldloc.s      b
      IL_09e7: ldloc.s      a
      IL_09e9: ldloc.s      f
      IL_09eb: add          
      IL_09ec: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_09f1: ldc.i4.s     29 // 0x1d
      IL_09f3: conv.i       
      IL_09f4: ldc.i4.4     
      IL_09f5: mul          
      IL_09f6: add          
      IL_09f7: ldind.u4     
      IL_09f8: add          
      IL_09f9: ldloc.s      blockPtr
      IL_09fb: ldloc.s      g
      IL_09fd: conv.i       
      IL_09fe: ldc.i4.4     
      IL_09ff: mul          
      IL_0a00: add          
      IL_0a01: ldind.u4     
      IL_0a02: add          
      IL_0a03: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0a08: ldc.i4.s     29 // 0x1d
      IL_0a0a: conv.i       
      IL_0a0b: ldc.i4.4     
      IL_0a0c: mul          
      IL_0a0d: add          
      IL_0a0e: ldind.i4     
      IL_0a0f: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0a14: add          
      IL_0a15: stloc.s      b

      // [500 17 - 500 27]
      IL_0a17: stloc.s      a

      // [503 17 - 503 40]
      IL_0a19: ldloc.s      d
      IL_0a1b: ldloc.s      b
      IL_0a1d: and          
      IL_0a1e: ldloc.s      d
      IL_0a20: not          
      IL_0a21: ldloc.s      c
      IL_0a23: and          
      IL_0a24: or           
      IL_0a25: stloc.s      f

      // [504 17 - 504 39]
      IL_0a27: ldc.i4.7     
      IL_0a28: stloc.s      g

      // [505 17 - 505 27]
      IL_0a2a: ldloc.s      d

      // [506 17 - 506 23]
      IL_0a2c: ldloc.s      c
      IL_0a2e: stloc.s      d

      // [507 17 - 507 23]
      IL_0a30: ldloc.s      b
      IL_0a32: stloc.s      c

      // [508 17 - 508 88]
      IL_0a34: ldloc.s      b
      IL_0a36: ldloc.s      a
      IL_0a38: ldloc.s      f
      IL_0a3a: add          
      IL_0a3b: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0a40: ldc.i4.s     30 // 0x1e
      IL_0a42: conv.i       
      IL_0a43: ldc.i4.4     
      IL_0a44: mul          
      IL_0a45: add          
      IL_0a46: ldind.u4     
      IL_0a47: add          
      IL_0a48: ldloc.s      blockPtr
      IL_0a4a: ldloc.s      g
      IL_0a4c: conv.i       
      IL_0a4d: ldc.i4.4     
      IL_0a4e: mul          
      IL_0a4f: add          
      IL_0a50: ldind.u4     
      IL_0a51: add          
      IL_0a52: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0a57: ldc.i4.s     30 // 0x1e
      IL_0a59: conv.i       
      IL_0a5a: ldc.i4.4     
      IL_0a5b: mul          
      IL_0a5c: add          
      IL_0a5d: ldind.i4     
      IL_0a5e: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0a63: add          
      IL_0a64: stloc.s      b

      // [509 17 - 509 27]
      IL_0a66: stloc.s      a

      // [512 17 - 512 40]
      IL_0a68: ldloc.s      d
      IL_0a6a: ldloc.s      b
      IL_0a6c: and          
      IL_0a6d: ldloc.s      d
      IL_0a6f: not          
      IL_0a70: ldloc.s      c
      IL_0a72: and          
      IL_0a73: or           
      IL_0a74: stloc.s      f

      // [513 17 - 513 39]
      IL_0a76: ldc.i4.s     12 // 0x0c
      IL_0a78: stloc.s      g

      // [514 17 - 514 27]
      IL_0a7a: ldloc.s      d

      // [515 17 - 515 23]
      IL_0a7c: ldloc.s      c
      IL_0a7e: stloc.s      d

      // [516 17 - 516 23]
      IL_0a80: ldloc.s      b
      IL_0a82: stloc.s      c

      // [517 17 - 517 88]
      IL_0a84: ldloc.s      b
      IL_0a86: ldloc.s      a
      IL_0a88: ldloc.s      f
      IL_0a8a: add          
      IL_0a8b: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0a90: ldc.i4.s     31 // 0x1f
      IL_0a92: conv.i       
      IL_0a93: ldc.i4.4     
      IL_0a94: mul          
      IL_0a95: add          
      IL_0a96: ldind.u4     
      IL_0a97: add          
      IL_0a98: ldloc.s      blockPtr
      IL_0a9a: ldloc.s      g
      IL_0a9c: conv.i       
      IL_0a9d: ldc.i4.4     
      IL_0a9e: mul          
      IL_0a9f: add          
      IL_0aa0: ldind.u4     
      IL_0aa1: add          
      IL_0aa2: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0aa7: ldc.i4.s     31 // 0x1f
      IL_0aa9: conv.i       
      IL_0aaa: ldc.i4.4     
      IL_0aab: mul          
      IL_0aac: add          
      IL_0aad: ldind.i4     
      IL_0aae: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0ab3: add          
      IL_0ab4: stloc.s      b

      // [518 17 - 518 27]
      IL_0ab6: stloc.s      a

      // [521 17 - 521 31]
      IL_0ab8: ldloc.s      b
      IL_0aba: ldloc.s      c
      IL_0abc: xor          
      IL_0abd: ldloc.s      d
      IL_0abf: xor          
      IL_0ac0: stloc.s      f

      // [522 17 - 522 39]
      IL_0ac2: ldc.i4.5     
      IL_0ac3: stloc.s      g

      // [523 17 - 523 27]
      IL_0ac5: ldloc.s      d

      // [524 17 - 524 23]
      IL_0ac7: ldloc.s      c
      IL_0ac9: stloc.s      d

      // [525 17 - 525 23]
      IL_0acb: ldloc.s      b
      IL_0acd: stloc.s      c

      // [526 17 - 526 88]
      IL_0acf: ldloc.s      b
      IL_0ad1: ldloc.s      a
      IL_0ad3: ldloc.s      f
      IL_0ad5: add          
      IL_0ad6: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0adb: ldc.i4.s     32 // 0x20
      IL_0add: conv.i       
      IL_0ade: ldc.i4.4     
      IL_0adf: mul          
      IL_0ae0: add          
      IL_0ae1: ldind.u4     
      IL_0ae2: add          
      IL_0ae3: ldloc.s      blockPtr
      IL_0ae5: ldloc.s      g
      IL_0ae7: conv.i       
      IL_0ae8: ldc.i4.4     
      IL_0ae9: mul          
      IL_0aea: add          
      IL_0aeb: ldind.u4     
      IL_0aec: add          
      IL_0aed: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0af2: ldc.i4.s     32 // 0x20
      IL_0af4: conv.i       
      IL_0af5: ldc.i4.4     
      IL_0af6: mul          
      IL_0af7: add          
      IL_0af8: ldind.i4     
      IL_0af9: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0afe: add          
      IL_0aff: stloc.s      b

      // [527 17 - 527 27]
      IL_0b01: stloc.s      a

      // [530 17 - 530 31]
      IL_0b03: ldloc.s      b
      IL_0b05: ldloc.s      c
      IL_0b07: xor          
      IL_0b08: ldloc.s      d
      IL_0b0a: xor          
      IL_0b0b: stloc.s      f

      // [531 17 - 531 39]
      IL_0b0d: ldc.i4.8     
      IL_0b0e: stloc.s      g

      // [532 17 - 532 27]
      IL_0b10: ldloc.s      d

      // [533 17 - 533 23]
      IL_0b12: ldloc.s      c
      IL_0b14: stloc.s      d

      // [534 17 - 534 23]
      IL_0b16: ldloc.s      b
      IL_0b18: stloc.s      c

      // [535 17 - 535 88]
      IL_0b1a: ldloc.s      b
      IL_0b1c: ldloc.s      a
      IL_0b1e: ldloc.s      f
      IL_0b20: add          
      IL_0b21: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0b26: ldc.i4.s     33 // 0x21
      IL_0b28: conv.i       
      IL_0b29: ldc.i4.4     
      IL_0b2a: mul          
      IL_0b2b: add          
      IL_0b2c: ldind.u4     
      IL_0b2d: add          
      IL_0b2e: ldloc.s      blockPtr
      IL_0b30: ldloc.s      g
      IL_0b32: conv.i       
      IL_0b33: ldc.i4.4     
      IL_0b34: mul          
      IL_0b35: add          
      IL_0b36: ldind.u4     
      IL_0b37: add          
      IL_0b38: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0b3d: ldc.i4.s     33 // 0x21
      IL_0b3f: conv.i       
      IL_0b40: ldc.i4.4     
      IL_0b41: mul          
      IL_0b42: add          
      IL_0b43: ldind.i4     
      IL_0b44: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0b49: add          
      IL_0b4a: stloc.s      b

      // [536 17 - 536 27]
      IL_0b4c: stloc.s      a

      // [539 17 - 539 31]
      IL_0b4e: ldloc.s      b
      IL_0b50: ldloc.s      c
      IL_0b52: xor          
      IL_0b53: ldloc.s      d
      IL_0b55: xor          
      IL_0b56: stloc.s      f

      // [540 17 - 540 39]
      IL_0b58: ldc.i4.s     11 // 0x0b
      IL_0b5a: stloc.s      g

      // [541 17 - 541 27]
      IL_0b5c: ldloc.s      d

      // [542 17 - 542 23]
      IL_0b5e: ldloc.s      c
      IL_0b60: stloc.s      d

      // [543 17 - 543 23]
      IL_0b62: ldloc.s      b
      IL_0b64: stloc.s      c

      // [544 17 - 544 88]
      IL_0b66: ldloc.s      b
      IL_0b68: ldloc.s      a
      IL_0b6a: ldloc.s      f
      IL_0b6c: add          
      IL_0b6d: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0b72: ldc.i4.s     34 // 0x22
      IL_0b74: conv.i       
      IL_0b75: ldc.i4.4     
      IL_0b76: mul          
      IL_0b77: add          
      IL_0b78: ldind.u4     
      IL_0b79: add          
      IL_0b7a: ldloc.s      blockPtr
      IL_0b7c: ldloc.s      g
      IL_0b7e: conv.i       
      IL_0b7f: ldc.i4.4     
      IL_0b80: mul          
      IL_0b81: add          
      IL_0b82: ldind.u4     
      IL_0b83: add          
      IL_0b84: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0b89: ldc.i4.s     34 // 0x22
      IL_0b8b: conv.i       
      IL_0b8c: ldc.i4.4     
      IL_0b8d: mul          
      IL_0b8e: add          
      IL_0b8f: ldind.i4     
      IL_0b90: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0b95: add          
      IL_0b96: stloc.s      b

      // [545 17 - 545 27]
      IL_0b98: stloc.s      a

      // [548 17 - 548 31]
      IL_0b9a: ldloc.s      b
      IL_0b9c: ldloc.s      c
      IL_0b9e: xor          
      IL_0b9f: ldloc.s      d
      IL_0ba1: xor          
      IL_0ba2: stloc.s      f

      // [549 17 - 549 39]
      IL_0ba4: ldc.i4.s     14 // 0x0e
      IL_0ba6: stloc.s      g

      // [550 17 - 550 27]
      IL_0ba8: ldloc.s      d

      // [551 17 - 551 23]
      IL_0baa: ldloc.s      c
      IL_0bac: stloc.s      d

      // [552 17 - 552 23]
      IL_0bae: ldloc.s      b
      IL_0bb0: stloc.s      c

      // [553 17 - 553 88]
      IL_0bb2: ldloc.s      b
      IL_0bb4: ldloc.s      a
      IL_0bb6: ldloc.s      f
      IL_0bb8: add          
      IL_0bb9: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0bbe: ldc.i4.s     35 // 0x23
      IL_0bc0: conv.i       
      IL_0bc1: ldc.i4.4     
      IL_0bc2: mul          
      IL_0bc3: add          
      IL_0bc4: ldind.u4     
      IL_0bc5: add          
      IL_0bc6: ldloc.s      blockPtr
      IL_0bc8: ldloc.s      g
      IL_0bca: conv.i       
      IL_0bcb: ldc.i4.4     
      IL_0bcc: mul          
      IL_0bcd: add          
      IL_0bce: ldind.u4     
      IL_0bcf: add          
      IL_0bd0: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0bd5: ldc.i4.s     35 // 0x23
      IL_0bd7: conv.i       
      IL_0bd8: ldc.i4.4     
      IL_0bd9: mul          
      IL_0bda: add          
      IL_0bdb: ldind.i4     
      IL_0bdc: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0be1: add          
      IL_0be2: stloc.s      b

      // [554 17 - 554 27]
      IL_0be4: stloc.s      a

      // [557 17 - 557 31]
      IL_0be6: ldloc.s      b
      IL_0be8: ldloc.s      c
      IL_0bea: xor          
      IL_0beb: ldloc.s      d
      IL_0bed: xor          
      IL_0bee: stloc.s      f

      // [558 17 - 558 39]
      IL_0bf0: ldc.i4.1     
      IL_0bf1: stloc.s      g

      // [559 17 - 559 27]
      IL_0bf3: ldloc.s      d

      // [560 17 - 560 23]
      IL_0bf5: ldloc.s      c
      IL_0bf7: stloc.s      d

      // [561 17 - 561 23]
      IL_0bf9: ldloc.s      b
      IL_0bfb: stloc.s      c

      // [562 17 - 562 88]
      IL_0bfd: ldloc.s      b
      IL_0bff: ldloc.s      a
      IL_0c01: ldloc.s      f
      IL_0c03: add          
      IL_0c04: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0c09: ldc.i4.s     36 // 0x24
      IL_0c0b: conv.i       
      IL_0c0c: ldc.i4.4     
      IL_0c0d: mul          
      IL_0c0e: add          
      IL_0c0f: ldind.u4     
      IL_0c10: add          
      IL_0c11: ldloc.s      blockPtr
      IL_0c13: ldloc.s      g
      IL_0c15: conv.i       
      IL_0c16: ldc.i4.4     
      IL_0c17: mul          
      IL_0c18: add          
      IL_0c19: ldind.u4     
      IL_0c1a: add          
      IL_0c1b: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0c20: ldc.i4.s     36 // 0x24
      IL_0c22: conv.i       
      IL_0c23: ldc.i4.4     
      IL_0c24: mul          
      IL_0c25: add          
      IL_0c26: ldind.i4     
      IL_0c27: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0c2c: add          
      IL_0c2d: stloc.s      b

      // [563 17 - 563 27]
      IL_0c2f: stloc.s      a

      // [566 17 - 566 31]
      IL_0c31: ldloc.s      b
      IL_0c33: ldloc.s      c
      IL_0c35: xor          
      IL_0c36: ldloc.s      d
      IL_0c38: xor          
      IL_0c39: stloc.s      f

      // [567 17 - 567 39]
      IL_0c3b: ldc.i4.4     
      IL_0c3c: stloc.s      g

      // [568 17 - 568 27]
      IL_0c3e: ldloc.s      d

      // [569 17 - 569 23]
      IL_0c40: ldloc.s      c
      IL_0c42: stloc.s      d

      // [570 17 - 570 23]
      IL_0c44: ldloc.s      b
      IL_0c46: stloc.s      c

      // [571 17 - 571 88]
      IL_0c48: ldloc.s      b
      IL_0c4a: ldloc.s      a
      IL_0c4c: ldloc.s      f
      IL_0c4e: add          
      IL_0c4f: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0c54: ldc.i4.s     37 // 0x25
      IL_0c56: conv.i       
      IL_0c57: ldc.i4.4     
      IL_0c58: mul          
      IL_0c59: add          
      IL_0c5a: ldind.u4     
      IL_0c5b: add          
      IL_0c5c: ldloc.s      blockPtr
      IL_0c5e: ldloc.s      g
      IL_0c60: conv.i       
      IL_0c61: ldc.i4.4     
      IL_0c62: mul          
      IL_0c63: add          
      IL_0c64: ldind.u4     
      IL_0c65: add          
      IL_0c66: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0c6b: ldc.i4.s     37 // 0x25
      IL_0c6d: conv.i       
      IL_0c6e: ldc.i4.4     
      IL_0c6f: mul          
      IL_0c70: add          
      IL_0c71: ldind.i4     
      IL_0c72: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0c77: add          
      IL_0c78: stloc.s      b

      // [572 17 - 572 27]
      IL_0c7a: stloc.s      a

      // [575 17 - 575 31]
      IL_0c7c: ldloc.s      b
      IL_0c7e: ldloc.s      c
      IL_0c80: xor          
      IL_0c81: ldloc.s      d
      IL_0c83: xor          
      IL_0c84: stloc.s      f

      // [576 17 - 576 39]
      IL_0c86: ldc.i4.7     
      IL_0c87: stloc.s      g

      // [577 17 - 577 27]
      IL_0c89: ldloc.s      d

      // [578 17 - 578 23]
      IL_0c8b: ldloc.s      c
      IL_0c8d: stloc.s      d

      // [579 17 - 579 23]
      IL_0c8f: ldloc.s      b
      IL_0c91: stloc.s      c

      // [580 17 - 580 88]
      IL_0c93: ldloc.s      b
      IL_0c95: ldloc.s      a
      IL_0c97: ldloc.s      f
      IL_0c99: add          
      IL_0c9a: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0c9f: ldc.i4.s     38 // 0x26
      IL_0ca1: conv.i       
      IL_0ca2: ldc.i4.4     
      IL_0ca3: mul          
      IL_0ca4: add          
      IL_0ca5: ldind.u4     
      IL_0ca6: add          
      IL_0ca7: ldloc.s      blockPtr
      IL_0ca9: ldloc.s      g
      IL_0cab: conv.i       
      IL_0cac: ldc.i4.4     
      IL_0cad: mul          
      IL_0cae: add          
      IL_0caf: ldind.u4     
      IL_0cb0: add          
      IL_0cb1: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0cb6: ldc.i4.s     38 // 0x26
      IL_0cb8: conv.i       
      IL_0cb9: ldc.i4.4     
      IL_0cba: mul          
      IL_0cbb: add          
      IL_0cbc: ldind.i4     
      IL_0cbd: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0cc2: add          
      IL_0cc3: stloc.s      b

      // [581 17 - 581 27]
      IL_0cc5: stloc.s      a

      // [584 17 - 584 31]
      IL_0cc7: ldloc.s      b
      IL_0cc9: ldloc.s      c
      IL_0ccb: xor          
      IL_0ccc: ldloc.s      d
      IL_0cce: xor          
      IL_0ccf: stloc.s      f

      // [585 17 - 585 39]
      IL_0cd1: ldc.i4.s     10 // 0x0a
      IL_0cd3: stloc.s      g

      // [586 17 - 586 27]
      IL_0cd5: ldloc.s      d

      // [587 17 - 587 23]
      IL_0cd7: ldloc.s      c
      IL_0cd9: stloc.s      d

      // [588 17 - 588 23]
      IL_0cdb: ldloc.s      b
      IL_0cdd: stloc.s      c

      // [589 17 - 589 88]
      IL_0cdf: ldloc.s      b
      IL_0ce1: ldloc.s      a
      IL_0ce3: ldloc.s      f
      IL_0ce5: add          
      IL_0ce6: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0ceb: ldc.i4.s     39 // 0x27
      IL_0ced: conv.i       
      IL_0cee: ldc.i4.4     
      IL_0cef: mul          
      IL_0cf0: add          
      IL_0cf1: ldind.u4     
      IL_0cf2: add          
      IL_0cf3: ldloc.s      blockPtr
      IL_0cf5: ldloc.s      g
      IL_0cf7: conv.i       
      IL_0cf8: ldc.i4.4     
      IL_0cf9: mul          
      IL_0cfa: add          
      IL_0cfb: ldind.u4     
      IL_0cfc: add          
      IL_0cfd: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0d02: ldc.i4.s     39 // 0x27
      IL_0d04: conv.i       
      IL_0d05: ldc.i4.4     
      IL_0d06: mul          
      IL_0d07: add          
      IL_0d08: ldind.i4     
      IL_0d09: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0d0e: add          
      IL_0d0f: stloc.s      b

      // [590 17 - 590 27]
      IL_0d11: stloc.s      a

      // [593 17 - 593 31]
      IL_0d13: ldloc.s      b
      IL_0d15: ldloc.s      c
      IL_0d17: xor          
      IL_0d18: ldloc.s      d
      IL_0d1a: xor          
      IL_0d1b: stloc.s      f

      // [594 17 - 594 39]
      IL_0d1d: ldc.i4.s     13 // 0x0d
      IL_0d1f: stloc.s      g

      // [595 17 - 595 27]
      IL_0d21: ldloc.s      d

      // [596 17 - 596 23]
      IL_0d23: ldloc.s      c
      IL_0d25: stloc.s      d

      // [597 17 - 597 23]
      IL_0d27: ldloc.s      b
      IL_0d29: stloc.s      c

      // [598 17 - 598 88]
      IL_0d2b: ldloc.s      b
      IL_0d2d: ldloc.s      a
      IL_0d2f: ldloc.s      f
      IL_0d31: add          
      IL_0d32: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0d37: ldc.i4.s     40 // 0x28
      IL_0d39: conv.i       
      IL_0d3a: ldc.i4.4     
      IL_0d3b: mul          
      IL_0d3c: add          
      IL_0d3d: ldind.u4     
      IL_0d3e: add          
      IL_0d3f: ldloc.s      blockPtr
      IL_0d41: ldloc.s      g
      IL_0d43: conv.i       
      IL_0d44: ldc.i4.4     
      IL_0d45: mul          
      IL_0d46: add          
      IL_0d47: ldind.u4     
      IL_0d48: add          
      IL_0d49: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0d4e: ldc.i4.s     40 // 0x28
      IL_0d50: conv.i       
      IL_0d51: ldc.i4.4     
      IL_0d52: mul          
      IL_0d53: add          
      IL_0d54: ldind.i4     
      IL_0d55: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0d5a: add          
      IL_0d5b: stloc.s      b

      // [599 17 - 599 27]
      IL_0d5d: stloc.s      a

      // [602 17 - 602 31]
      IL_0d5f: ldloc.s      b
      IL_0d61: ldloc.s      c
      IL_0d63: xor          
      IL_0d64: ldloc.s      d
      IL_0d66: xor          
      IL_0d67: stloc.s      f

      // [603 17 - 603 39]
      IL_0d69: ldc.i4.0     
      IL_0d6a: stloc.s      g

      // [604 17 - 604 27]
      IL_0d6c: ldloc.s      d

      // [605 17 - 605 23]
      IL_0d6e: ldloc.s      c
      IL_0d70: stloc.s      d

      // [606 17 - 606 23]
      IL_0d72: ldloc.s      b
      IL_0d74: stloc.s      c

      // [607 17 - 607 88]
      IL_0d76: ldloc.s      b
      IL_0d78: ldloc.s      a
      IL_0d7a: ldloc.s      f
      IL_0d7c: add          
      IL_0d7d: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0d82: ldc.i4.s     41 // 0x29
      IL_0d84: conv.i       
      IL_0d85: ldc.i4.4     
      IL_0d86: mul          
      IL_0d87: add          
      IL_0d88: ldind.u4     
      IL_0d89: add          
      IL_0d8a: ldloc.s      blockPtr
      IL_0d8c: ldloc.s      g
      IL_0d8e: conv.i       
      IL_0d8f: ldc.i4.4     
      IL_0d90: mul          
      IL_0d91: add          
      IL_0d92: ldind.u4     
      IL_0d93: add          
      IL_0d94: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0d99: ldc.i4.s     41 // 0x29
      IL_0d9b: conv.i       
      IL_0d9c: ldc.i4.4     
      IL_0d9d: mul          
      IL_0d9e: add          
      IL_0d9f: ldind.i4     
      IL_0da0: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0da5: add          
      IL_0da6: stloc.s      b

      // [608 17 - 608 27]
      IL_0da8: stloc.s      a

      // [611 17 - 611 31]
      IL_0daa: ldloc.s      b
      IL_0dac: ldloc.s      c
      IL_0dae: xor          
      IL_0daf: ldloc.s      d
      IL_0db1: xor          
      IL_0db2: stloc.s      f

      // [612 17 - 612 39]
      IL_0db4: ldc.i4.3     
      IL_0db5: stloc.s      g

      // [613 17 - 613 27]
      IL_0db7: ldloc.s      d

      // [614 17 - 614 23]
      IL_0db9: ldloc.s      c
      IL_0dbb: stloc.s      d

      // [615 17 - 615 23]
      IL_0dbd: ldloc.s      b
      IL_0dbf: stloc.s      c

      // [616 17 - 616 88]
      IL_0dc1: ldloc.s      b
      IL_0dc3: ldloc.s      a
      IL_0dc5: ldloc.s      f
      IL_0dc7: add          
      IL_0dc8: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0dcd: ldc.i4.s     42 // 0x2a
      IL_0dcf: conv.i       
      IL_0dd0: ldc.i4.4     
      IL_0dd1: mul          
      IL_0dd2: add          
      IL_0dd3: ldind.u4     
      IL_0dd4: add          
      IL_0dd5: ldloc.s      blockPtr
      IL_0dd7: ldloc.s      g
      IL_0dd9: conv.i       
      IL_0dda: ldc.i4.4     
      IL_0ddb: mul          
      IL_0ddc: add          
      IL_0ddd: ldind.u4     
      IL_0dde: add          
      IL_0ddf: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0de4: ldc.i4.s     42 // 0x2a
      IL_0de6: conv.i       
      IL_0de7: ldc.i4.4     
      IL_0de8: mul          
      IL_0de9: add          
      IL_0dea: ldind.i4     
      IL_0deb: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0df0: add          
      IL_0df1: stloc.s      b

      // [617 17 - 617 27]
      IL_0df3: stloc.s      a

      // [620 17 - 620 31]
      IL_0df5: ldloc.s      b
      IL_0df7: ldloc.s      c
      IL_0df9: xor          
      IL_0dfa: ldloc.s      d
      IL_0dfc: xor          
      IL_0dfd: stloc.s      f

      // [621 17 - 621 39]
      IL_0dff: ldc.i4.6     
      IL_0e00: stloc.s      g

      // [622 17 - 622 27]
      IL_0e02: ldloc.s      d

      // [623 17 - 623 23]
      IL_0e04: ldloc.s      c
      IL_0e06: stloc.s      d

      // [624 17 - 624 23]
      IL_0e08: ldloc.s      b
      IL_0e0a: stloc.s      c

      // [625 17 - 625 88]
      IL_0e0c: ldloc.s      b
      IL_0e0e: ldloc.s      a
      IL_0e10: ldloc.s      f
      IL_0e12: add          
      IL_0e13: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0e18: ldc.i4.s     43 // 0x2b
      IL_0e1a: conv.i       
      IL_0e1b: ldc.i4.4     
      IL_0e1c: mul          
      IL_0e1d: add          
      IL_0e1e: ldind.u4     
      IL_0e1f: add          
      IL_0e20: ldloc.s      blockPtr
      IL_0e22: ldloc.s      g
      IL_0e24: conv.i       
      IL_0e25: ldc.i4.4     
      IL_0e26: mul          
      IL_0e27: add          
      IL_0e28: ldind.u4     
      IL_0e29: add          
      IL_0e2a: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0e2f: ldc.i4.s     43 // 0x2b
      IL_0e31: conv.i       
      IL_0e32: ldc.i4.4     
      IL_0e33: mul          
      IL_0e34: add          
      IL_0e35: ldind.i4     
      IL_0e36: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0e3b: add          
      IL_0e3c: stloc.s      b

      // [626 17 - 626 27]
      IL_0e3e: stloc.s      a

      // [629 17 - 629 31]
      IL_0e40: ldloc.s      b
      IL_0e42: ldloc.s      c
      IL_0e44: xor          
      IL_0e45: ldloc.s      d
      IL_0e47: xor          
      IL_0e48: stloc.s      f

      // [630 17 - 630 39]
      IL_0e4a: ldc.i4.s     9 // 0x09
      IL_0e4c: stloc.s      g

      // [631 17 - 631 27]
      IL_0e4e: ldloc.s      d

      // [632 17 - 632 23]
      IL_0e50: ldloc.s      c
      IL_0e52: stloc.s      d

      // [633 17 - 633 23]
      IL_0e54: ldloc.s      b
      IL_0e56: stloc.s      c

      // [634 17 - 634 88]
      IL_0e58: ldloc.s      b
      IL_0e5a: ldloc.s      a
      IL_0e5c: ldloc.s      f
      IL_0e5e: add          
      IL_0e5f: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0e64: ldc.i4.s     44 // 0x2c
      IL_0e66: conv.i       
      IL_0e67: ldc.i4.4     
      IL_0e68: mul          
      IL_0e69: add          
      IL_0e6a: ldind.u4     
      IL_0e6b: add          
      IL_0e6c: ldloc.s      blockPtr
      IL_0e6e: ldloc.s      g
      IL_0e70: conv.i       
      IL_0e71: ldc.i4.4     
      IL_0e72: mul          
      IL_0e73: add          
      IL_0e74: ldind.u4     
      IL_0e75: add          
      IL_0e76: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0e7b: ldc.i4.s     44 // 0x2c
      IL_0e7d: conv.i       
      IL_0e7e: ldc.i4.4     
      IL_0e7f: mul          
      IL_0e80: add          
      IL_0e81: ldind.i4     
      IL_0e82: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0e87: add          
      IL_0e88: stloc.s      b

      // [635 17 - 635 27]
      IL_0e8a: stloc.s      a

      // [638 17 - 638 31]
      IL_0e8c: ldloc.s      b
      IL_0e8e: ldloc.s      c
      IL_0e90: xor          
      IL_0e91: ldloc.s      d
      IL_0e93: xor          
      IL_0e94: stloc.s      f

      // [639 17 - 639 39]
      IL_0e96: ldc.i4.s     12 // 0x0c
      IL_0e98: stloc.s      g

      // [640 17 - 640 27]
      IL_0e9a: ldloc.s      d

      // [641 17 - 641 23]
      IL_0e9c: ldloc.s      c
      IL_0e9e: stloc.s      d

      // [642 17 - 642 23]
      IL_0ea0: ldloc.s      b
      IL_0ea2: stloc.s      c

      // [643 17 - 643 88]
      IL_0ea4: ldloc.s      b
      IL_0ea6: ldloc.s      a
      IL_0ea8: ldloc.s      f
      IL_0eaa: add          
      IL_0eab: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0eb0: ldc.i4.s     45 // 0x2d
      IL_0eb2: conv.i       
      IL_0eb3: ldc.i4.4     
      IL_0eb4: mul          
      IL_0eb5: add          
      IL_0eb6: ldind.u4     
      IL_0eb7: add          
      IL_0eb8: ldloc.s      blockPtr
      IL_0eba: ldloc.s      g
      IL_0ebc: conv.i       
      IL_0ebd: ldc.i4.4     
      IL_0ebe: mul          
      IL_0ebf: add          
      IL_0ec0: ldind.u4     
      IL_0ec1: add          
      IL_0ec2: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0ec7: ldc.i4.s     45 // 0x2d
      IL_0ec9: conv.i       
      IL_0eca: ldc.i4.4     
      IL_0ecb: mul          
      IL_0ecc: add          
      IL_0ecd: ldind.i4     
      IL_0ece: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0ed3: add          
      IL_0ed4: stloc.s      b

      // [644 17 - 644 27]
      IL_0ed6: stloc.s      a

      // [647 17 - 647 31]
      IL_0ed8: ldloc.s      b
      IL_0eda: ldloc.s      c
      IL_0edc: xor          
      IL_0edd: ldloc.s      d
      IL_0edf: xor          
      IL_0ee0: stloc.s      f

      // [648 17 - 648 39]
      IL_0ee2: ldc.i4.s     15 // 0x0f
      IL_0ee4: stloc.s      g

      // [649 17 - 649 27]
      IL_0ee6: ldloc.s      d

      // [650 17 - 650 23]
      IL_0ee8: ldloc.s      c
      IL_0eea: stloc.s      d

      // [651 17 - 651 23]
      IL_0eec: ldloc.s      b
      IL_0eee: stloc.s      c

      // [652 17 - 652 88]
      IL_0ef0: ldloc.s      b
      IL_0ef2: ldloc.s      a
      IL_0ef4: ldloc.s      f
      IL_0ef6: add          
      IL_0ef7: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0efc: ldc.i4.s     46 // 0x2e
      IL_0efe: conv.i       
      IL_0eff: ldc.i4.4     
      IL_0f00: mul          
      IL_0f01: add          
      IL_0f02: ldind.u4     
      IL_0f03: add          
      IL_0f04: ldloc.s      blockPtr
      IL_0f06: ldloc.s      g
      IL_0f08: conv.i       
      IL_0f09: ldc.i4.4     
      IL_0f0a: mul          
      IL_0f0b: add          
      IL_0f0c: ldind.u4     
      IL_0f0d: add          
      IL_0f0e: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0f13: ldc.i4.s     46 // 0x2e
      IL_0f15: conv.i       
      IL_0f16: ldc.i4.4     
      IL_0f17: mul          
      IL_0f18: add          
      IL_0f19: ldind.i4     
      IL_0f1a: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0f1f: add          
      IL_0f20: stloc.s      b

      // [653 17 - 653 27]
      IL_0f22: stloc.s      a

      // [656 17 - 656 31]
      IL_0f24: ldloc.s      b
      IL_0f26: ldloc.s      c
      IL_0f28: xor          
      IL_0f29: ldloc.s      d
      IL_0f2b: xor          
      IL_0f2c: stloc.s      f

      // [657 17 - 657 39]
      IL_0f2e: ldc.i4.2     
      IL_0f2f: stloc.s      g

      // [658 17 - 658 27]
      IL_0f31: ldloc.s      d

      // [659 17 - 659 23]
      IL_0f33: ldloc.s      c
      IL_0f35: stloc.s      d

      // [660 17 - 660 23]
      IL_0f37: ldloc.s      b
      IL_0f39: stloc.s      c

      // [661 17 - 661 88]
      IL_0f3b: ldloc.s      b
      IL_0f3d: ldloc.s      a
      IL_0f3f: ldloc.s      f
      IL_0f41: add          
      IL_0f42: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0f47: ldc.i4.s     47 // 0x2f
      IL_0f49: conv.i       
      IL_0f4a: ldc.i4.4     
      IL_0f4b: mul          
      IL_0f4c: add          
      IL_0f4d: ldind.u4     
      IL_0f4e: add          
      IL_0f4f: ldloc.s      blockPtr
      IL_0f51: ldloc.s      g
      IL_0f53: conv.i       
      IL_0f54: ldc.i4.4     
      IL_0f55: mul          
      IL_0f56: add          
      IL_0f57: ldind.u4     
      IL_0f58: add          
      IL_0f59: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0f5e: ldc.i4.s     47 // 0x2f
      IL_0f60: conv.i       
      IL_0f61: ldc.i4.4     
      IL_0f62: mul          
      IL_0f63: add          
      IL_0f64: ldind.i4     
      IL_0f65: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0f6a: add          
      IL_0f6b: stloc.s      b

      // [662 17 - 662 27]
      IL_0f6d: stloc.s      a

      // [665 17 - 665 34]
      IL_0f6f: ldloc.s      c
      IL_0f71: ldloc.s      b
      IL_0f73: ldloc.s      d
      IL_0f75: not          
      IL_0f76: or           
      IL_0f77: xor          
      IL_0f78: stloc.s      f

      // [666 17 - 666 35]
      IL_0f7a: ldc.i4.0     
      IL_0f7b: stloc.s      g

      // [667 17 - 667 27]
      IL_0f7d: ldloc.s      d

      // [668 17 - 668 23]
      IL_0f7f: ldloc.s      c
      IL_0f81: stloc.s      d

      // [669 17 - 669 23]
      IL_0f83: ldloc.s      b
      IL_0f85: stloc.s      c

      // [670 17 - 670 88]
      IL_0f87: ldloc.s      b
      IL_0f89: ldloc.s      a
      IL_0f8b: ldloc.s      f
      IL_0f8d: add          
      IL_0f8e: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0f93: ldc.i4.s     48 // 0x30
      IL_0f95: conv.i       
      IL_0f96: ldc.i4.4     
      IL_0f97: mul          
      IL_0f98: add          
      IL_0f99: ldind.u4     
      IL_0f9a: add          
      IL_0f9b: ldloc.s      blockPtr
      IL_0f9d: ldloc.s      g
      IL_0f9f: conv.i       
      IL_0fa0: ldc.i4.4     
      IL_0fa1: mul          
      IL_0fa2: add          
      IL_0fa3: ldind.u4     
      IL_0fa4: add          
      IL_0fa5: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0faa: ldc.i4.s     48 // 0x30
      IL_0fac: conv.i       
      IL_0fad: ldc.i4.4     
      IL_0fae: mul          
      IL_0faf: add          
      IL_0fb0: ldind.i4     
      IL_0fb1: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_0fb6: add          
      IL_0fb7: stloc.s      b

      // [671 17 - 671 27]
      IL_0fb9: stloc.s      a

      // [674 17 - 674 34]
      IL_0fbb: ldloc.s      c
      IL_0fbd: ldloc.s      b
      IL_0fbf: ldloc.s      d
      IL_0fc1: not          
      IL_0fc2: or           
      IL_0fc3: xor          
      IL_0fc4: stloc.s      f

      // [675 17 - 675 35]
      IL_0fc6: ldc.i4.7     
      IL_0fc7: stloc.s      g

      // [676 17 - 676 27]
      IL_0fc9: ldloc.s      d

      // [677 17 - 677 23]
      IL_0fcb: ldloc.s      c
      IL_0fcd: stloc.s      d

      // [678 17 - 678 23]
      IL_0fcf: ldloc.s      b
      IL_0fd1: stloc.s      c

      // [679 17 - 679 88]
      IL_0fd3: ldloc.s      b
      IL_0fd5: ldloc.s      a
      IL_0fd7: ldloc.s      f
      IL_0fd9: add          
      IL_0fda: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_0fdf: ldc.i4.s     49 // 0x31
      IL_0fe1: conv.i       
      IL_0fe2: ldc.i4.4     
      IL_0fe3: mul          
      IL_0fe4: add          
      IL_0fe5: ldind.u4     
      IL_0fe6: add          
      IL_0fe7: ldloc.s      blockPtr
      IL_0fe9: ldloc.s      g
      IL_0feb: conv.i       
      IL_0fec: ldc.i4.4     
      IL_0fed: mul          
      IL_0fee: add          
      IL_0fef: ldind.u4     
      IL_0ff0: add          
      IL_0ff1: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_0ff6: ldc.i4.s     49 // 0x31
      IL_0ff8: conv.i       
      IL_0ff9: ldc.i4.4     
      IL_0ffa: mul          
      IL_0ffb: add          
      IL_0ffc: ldind.i4     
      IL_0ffd: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_1002: add          
      IL_1003: stloc.s      b

      // [680 17 - 680 27]
      IL_1005: stloc.s      a

      // [683 17 - 683 34]
      IL_1007: ldloc.s      c
      IL_1009: ldloc.s      b
      IL_100b: ldloc.s      d
      IL_100d: not          
      IL_100e: or           
      IL_100f: xor          
      IL_1010: stloc.s      f

      // [684 17 - 684 35]
      IL_1012: ldc.i4.s     14 // 0x0e
      IL_1014: stloc.s      g

      // [685 17 - 685 27]
      IL_1016: ldloc.s      d

      // [686 17 - 686 23]
      IL_1018: ldloc.s      c
      IL_101a: stloc.s      d

      // [687 17 - 687 23]
      IL_101c: ldloc.s      b
      IL_101e: stloc.s      c

      // [688 17 - 688 88]
      IL_1020: ldloc.s      b
      IL_1022: ldloc.s      a
      IL_1024: ldloc.s      f
      IL_1026: add          
      IL_1027: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_102c: ldc.i4.s     50 // 0x32
      IL_102e: conv.i       
      IL_102f: ldc.i4.4     
      IL_1030: mul          
      IL_1031: add          
      IL_1032: ldind.u4     
      IL_1033: add          
      IL_1034: ldloc.s      blockPtr
      IL_1036: ldloc.s      g
      IL_1038: conv.i       
      IL_1039: ldc.i4.4     
      IL_103a: mul          
      IL_103b: add          
      IL_103c: ldind.u4     
      IL_103d: add          
      IL_103e: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_1043: ldc.i4.s     50 // 0x32
      IL_1045: conv.i       
      IL_1046: ldc.i4.4     
      IL_1047: mul          
      IL_1048: add          
      IL_1049: ldind.i4     
      IL_104a: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_104f: add          
      IL_1050: stloc.s      b

      // [689 17 - 689 27]
      IL_1052: stloc.s      a

      // [692 17 - 692 34]
      IL_1054: ldloc.s      c
      IL_1056: ldloc.s      b
      IL_1058: ldloc.s      d
      IL_105a: not          
      IL_105b: or           
      IL_105c: xor          
      IL_105d: stloc.s      f

      // [693 17 - 693 35]
      IL_105f: ldc.i4.5     
      IL_1060: stloc.s      g

      // [694 17 - 694 27]
      IL_1062: ldloc.s      d

      // [695 17 - 695 23]
      IL_1064: ldloc.s      c
      IL_1066: stloc.s      d

      // [696 17 - 696 23]
      IL_1068: ldloc.s      b
      IL_106a: stloc.s      c

      // [697 17 - 697 88]
      IL_106c: ldloc.s      b
      IL_106e: ldloc.s      a
      IL_1070: ldloc.s      f
      IL_1072: add          
      IL_1073: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_1078: ldc.i4.s     51 // 0x33
      IL_107a: conv.i       
      IL_107b: ldc.i4.4     
      IL_107c: mul          
      IL_107d: add          
      IL_107e: ldind.u4     
      IL_107f: add          
      IL_1080: ldloc.s      blockPtr
      IL_1082: ldloc.s      g
      IL_1084: conv.i       
      IL_1085: ldc.i4.4     
      IL_1086: mul          
      IL_1087: add          
      IL_1088: ldind.u4     
      IL_1089: add          
      IL_108a: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_108f: ldc.i4.s     51 // 0x33
      IL_1091: conv.i       
      IL_1092: ldc.i4.4     
      IL_1093: mul          
      IL_1094: add          
      IL_1095: ldind.i4     
      IL_1096: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_109b: add          
      IL_109c: stloc.s      b

      // [698 17 - 698 27]
      IL_109e: stloc.s      a

      // [701 17 - 701 34]
      IL_10a0: ldloc.s      c
      IL_10a2: ldloc.s      b
      IL_10a4: ldloc.s      d
      IL_10a6: not          
      IL_10a7: or           
      IL_10a8: xor          
      IL_10a9: stloc.s      f

      // [702 17 - 702 35]
      IL_10ab: ldc.i4.s     12 // 0x0c
      IL_10ad: stloc.s      g

      // [703 17 - 703 27]
      IL_10af: ldloc.s      d

      // [704 17 - 704 23]
      IL_10b1: ldloc.s      c
      IL_10b3: stloc.s      d

      // [705 17 - 705 23]
      IL_10b5: ldloc.s      b
      IL_10b7: stloc.s      c

      // [706 17 - 706 88]
      IL_10b9: ldloc.s      b
      IL_10bb: ldloc.s      a
      IL_10bd: ldloc.s      f
      IL_10bf: add          
      IL_10c0: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_10c5: ldc.i4.s     52 // 0x34
      IL_10c7: conv.i       
      IL_10c8: ldc.i4.4     
      IL_10c9: mul          
      IL_10ca: add          
      IL_10cb: ldind.u4     
      IL_10cc: add          
      IL_10cd: ldloc.s      blockPtr
      IL_10cf: ldloc.s      g
      IL_10d1: conv.i       
      IL_10d2: ldc.i4.4     
      IL_10d3: mul          
      IL_10d4: add          
      IL_10d5: ldind.u4     
      IL_10d6: add          
      IL_10d7: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_10dc: ldc.i4.s     52 // 0x34
      IL_10de: conv.i       
      IL_10df: ldc.i4.4     
      IL_10e0: mul          
      IL_10e1: add          
      IL_10e2: ldind.i4     
      IL_10e3: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_10e8: add          
      IL_10e9: stloc.s      b

      // [707 17 - 707 27]
      IL_10eb: stloc.s      a

      // [710 17 - 710 34]
      IL_10ed: ldloc.s      c
      IL_10ef: ldloc.s      b
      IL_10f1: ldloc.s      d
      IL_10f3: not          
      IL_10f4: or           
      IL_10f5: xor          
      IL_10f6: stloc.s      f

      // [711 17 - 711 35]
      IL_10f8: ldc.i4.3     
      IL_10f9: stloc.s      g

      // [712 17 - 712 27]
      IL_10fb: ldloc.s      d

      // [713 17 - 713 23]
      IL_10fd: ldloc.s      c
      IL_10ff: stloc.s      d

      // [714 17 - 714 23]
      IL_1101: ldloc.s      b
      IL_1103: stloc.s      c

      // [715 17 - 715 88]
      IL_1105: ldloc.s      b
      IL_1107: ldloc.s      a
      IL_1109: ldloc.s      f
      IL_110b: add          
      IL_110c: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_1111: ldc.i4.s     53 // 0x35
      IL_1113: conv.i       
      IL_1114: ldc.i4.4     
      IL_1115: mul          
      IL_1116: add          
      IL_1117: ldind.u4     
      IL_1118: add          
      IL_1119: ldloc.s      blockPtr
      IL_111b: ldloc.s      g
      IL_111d: conv.i       
      IL_111e: ldc.i4.4     
      IL_111f: mul          
      IL_1120: add          
      IL_1121: ldind.u4     
      IL_1122: add          
      IL_1123: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_1128: ldc.i4.s     53 // 0x35
      IL_112a: conv.i       
      IL_112b: ldc.i4.4     
      IL_112c: mul          
      IL_112d: add          
      IL_112e: ldind.i4     
      IL_112f: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_1134: add          
      IL_1135: stloc.s      b

      // [716 17 - 716 27]
      IL_1137: stloc.s      a

      // [719 17 - 719 34]
      IL_1139: ldloc.s      c
      IL_113b: ldloc.s      b
      IL_113d: ldloc.s      d
      IL_113f: not          
      IL_1140: or           
      IL_1141: xor          
      IL_1142: stloc.s      f

      // [720 17 - 720 35]
      IL_1144: ldc.i4.s     10 // 0x0a
      IL_1146: stloc.s      g

      // [721 17 - 721 27]
      IL_1148: ldloc.s      d

      // [722 17 - 722 23]
      IL_114a: ldloc.s      c
      IL_114c: stloc.s      d

      // [723 17 - 723 23]
      IL_114e: ldloc.s      b
      IL_1150: stloc.s      c

      // [724 17 - 724 88]
      IL_1152: ldloc.s      b
      IL_1154: ldloc.s      a
      IL_1156: ldloc.s      f
      IL_1158: add          
      IL_1159: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_115e: ldc.i4.s     54 // 0x36
      IL_1160: conv.i       
      IL_1161: ldc.i4.4     
      IL_1162: mul          
      IL_1163: add          
      IL_1164: ldind.u4     
      IL_1165: add          
      IL_1166: ldloc.s      blockPtr
      IL_1168: ldloc.s      g
      IL_116a: conv.i       
      IL_116b: ldc.i4.4     
      IL_116c: mul          
      IL_116d: add          
      IL_116e: ldind.u4     
      IL_116f: add          
      IL_1170: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_1175: ldc.i4.s     54 // 0x36
      IL_1177: conv.i       
      IL_1178: ldc.i4.4     
      IL_1179: mul          
      IL_117a: add          
      IL_117b: ldind.i4     
      IL_117c: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_1181: add          
      IL_1182: stloc.s      b

      // [725 17 - 725 27]
      IL_1184: stloc.s      a

      // [728 17 - 728 34]
      IL_1186: ldloc.s      c
      IL_1188: ldloc.s      b
      IL_118a: ldloc.s      d
      IL_118c: not          
      IL_118d: or           
      IL_118e: xor          
      IL_118f: stloc.s      f

      // [729 17 - 729 35]
      IL_1191: ldc.i4.1     
      IL_1192: stloc.s      g

      // [730 17 - 730 27]
      IL_1194: ldloc.s      d

      // [731 17 - 731 23]
      IL_1196: ldloc.s      c
      IL_1198: stloc.s      d

      // [732 17 - 732 23]
      IL_119a: ldloc.s      b
      IL_119c: stloc.s      c

      // [733 17 - 733 88]
      IL_119e: ldloc.s      b
      IL_11a0: ldloc.s      a
      IL_11a2: ldloc.s      f
      IL_11a4: add          
      IL_11a5: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_11aa: ldc.i4.s     55 // 0x37
      IL_11ac: conv.i       
      IL_11ad: ldc.i4.4     
      IL_11ae: mul          
      IL_11af: add          
      IL_11b0: ldind.u4     
      IL_11b1: add          
      IL_11b2: ldloc.s      blockPtr
      IL_11b4: ldloc.s      g
      IL_11b6: conv.i       
      IL_11b7: ldc.i4.4     
      IL_11b8: mul          
      IL_11b9: add          
      IL_11ba: ldind.u4     
      IL_11bb: add          
      IL_11bc: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_11c1: ldc.i4.s     55 // 0x37
      IL_11c3: conv.i       
      IL_11c4: ldc.i4.4     
      IL_11c5: mul          
      IL_11c6: add          
      IL_11c7: ldind.i4     
      IL_11c8: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_11cd: add          
      IL_11ce: stloc.s      b

      // [734 17 - 734 27]
      IL_11d0: stloc.s      a

      // [737 17 - 737 34]
      IL_11d2: ldloc.s      c
      IL_11d4: ldloc.s      b
      IL_11d6: ldloc.s      d
      IL_11d8: not          
      IL_11d9: or           
      IL_11da: xor          
      IL_11db: stloc.s      f

      // [738 17 - 738 35]
      IL_11dd: ldc.i4.8     
      IL_11de: stloc.s      g

      // [739 17 - 739 27]
      IL_11e0: ldloc.s      d

      // [740 17 - 740 23]
      IL_11e2: ldloc.s      c
      IL_11e4: stloc.s      d

      // [741 17 - 741 23]
      IL_11e6: ldloc.s      b
      IL_11e8: stloc.s      c

      // [742 17 - 742 88]
      IL_11ea: ldloc.s      b
      IL_11ec: ldloc.s      a
      IL_11ee: ldloc.s      f
      IL_11f0: add          
      IL_11f1: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_11f6: ldc.i4.s     56 // 0x38
      IL_11f8: conv.i       
      IL_11f9: ldc.i4.4     
      IL_11fa: mul          
      IL_11fb: add          
      IL_11fc: ldind.u4     
      IL_11fd: add          
      IL_11fe: ldloc.s      blockPtr
      IL_1200: ldloc.s      g
      IL_1202: conv.i       
      IL_1203: ldc.i4.4     
      IL_1204: mul          
      IL_1205: add          
      IL_1206: ldind.u4     
      IL_1207: add          
      IL_1208: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_120d: ldc.i4.s     56 // 0x38
      IL_120f: conv.i       
      IL_1210: ldc.i4.4     
      IL_1211: mul          
      IL_1212: add          
      IL_1213: ldind.i4     
      IL_1214: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_1219: add          
      IL_121a: stloc.s      b

      // [743 17 - 743 27]
      IL_121c: stloc.s      a

      // [746 17 - 746 34]
      IL_121e: ldloc.s      c
      IL_1220: ldloc.s      b
      IL_1222: ldloc.s      d
      IL_1224: not          
      IL_1225: or           
      IL_1226: xor          
      IL_1227: stloc.s      f

      // [747 17 - 747 35]
      IL_1229: ldc.i4.s     15 // 0x0f
      IL_122b: stloc.s      g

      // [748 17 - 748 27]
      IL_122d: ldloc.s      d

      // [749 17 - 749 23]
      IL_122f: ldloc.s      c
      IL_1231: stloc.s      d

      // [750 17 - 750 23]
      IL_1233: ldloc.s      b
      IL_1235: stloc.s      c

      // [751 17 - 751 88]
      IL_1237: ldloc.s      b
      IL_1239: ldloc.s      a
      IL_123b: ldloc.s      f
      IL_123d: add          
      IL_123e: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_1243: ldc.i4.s     57 // 0x39
      IL_1245: conv.i       
      IL_1246: ldc.i4.4     
      IL_1247: mul          
      IL_1248: add          
      IL_1249: ldind.u4     
      IL_124a: add          
      IL_124b: ldloc.s      blockPtr
      IL_124d: ldloc.s      g
      IL_124f: conv.i       
      IL_1250: ldc.i4.4     
      IL_1251: mul          
      IL_1252: add          
      IL_1253: ldind.u4     
      IL_1254: add          
      IL_1255: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_125a: ldc.i4.s     57 // 0x39
      IL_125c: conv.i       
      IL_125d: ldc.i4.4     
      IL_125e: mul          
      IL_125f: add          
      IL_1260: ldind.i4     
      IL_1261: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_1266: add          
      IL_1267: stloc.s      b

      // [752 17 - 752 27]
      IL_1269: stloc.s      a

      // [755 17 - 755 34]
      IL_126b: ldloc.s      c
      IL_126d: ldloc.s      b
      IL_126f: ldloc.s      d
      IL_1271: not          
      IL_1272: or           
      IL_1273: xor          
      IL_1274: stloc.s      f

      // [756 17 - 756 35]
      IL_1276: ldc.i4.6     
      IL_1277: stloc.s      g

      // [757 17 - 757 27]
      IL_1279: ldloc.s      d

      // [758 17 - 758 23]
      IL_127b: ldloc.s      c
      IL_127d: stloc.s      d

      // [759 17 - 759 23]
      IL_127f: ldloc.s      b
      IL_1281: stloc.s      c

      // [760 17 - 760 88]
      IL_1283: ldloc.s      b
      IL_1285: ldloc.s      a
      IL_1287: ldloc.s      f
      IL_1289: add          
      IL_128a: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_128f: ldc.i4.s     58 // 0x3a
      IL_1291: conv.i       
      IL_1292: ldc.i4.4     
      IL_1293: mul          
      IL_1294: add          
      IL_1295: ldind.u4     
      IL_1296: add          
      IL_1297: ldloc.s      blockPtr
      IL_1299: ldloc.s      g
      IL_129b: conv.i       
      IL_129c: ldc.i4.4     
      IL_129d: mul          
      IL_129e: add          
      IL_129f: ldind.u4     
      IL_12a0: add          
      IL_12a1: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_12a6: ldc.i4.s     58 // 0x3a
      IL_12a8: conv.i       
      IL_12a9: ldc.i4.4     
      IL_12aa: mul          
      IL_12ab: add          
      IL_12ac: ldind.i4     
      IL_12ad: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_12b2: add          
      IL_12b3: stloc.s      b

      // [761 17 - 761 27]
      IL_12b5: stloc.s      a

      // [764 17 - 764 34]
      IL_12b7: ldloc.s      c
      IL_12b9: ldloc.s      b
      IL_12bb: ldloc.s      d
      IL_12bd: not          
      IL_12be: or           
      IL_12bf: xor          
      IL_12c0: stloc.s      f

      // [765 17 - 765 35]
      IL_12c2: ldc.i4.s     13 // 0x0d
      IL_12c4: stloc.s      g

      // [766 17 - 766 27]
      IL_12c6: ldloc.s      d

      // [767 17 - 767 23]
      IL_12c8: ldloc.s      c
      IL_12ca: stloc.s      d

      // [768 17 - 768 23]
      IL_12cc: ldloc.s      b
      IL_12ce: stloc.s      c

      // [769 17 - 769 88]
      IL_12d0: ldloc.s      b
      IL_12d2: ldloc.s      a
      IL_12d4: ldloc.s      f
      IL_12d6: add          
      IL_12d7: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_12dc: ldc.i4.s     59 // 0x3b
      IL_12de: conv.i       
      IL_12df: ldc.i4.4     
      IL_12e0: mul          
      IL_12e1: add          
      IL_12e2: ldind.u4     
      IL_12e3: add          
      IL_12e4: ldloc.s      blockPtr
      IL_12e6: ldloc.s      g
      IL_12e8: conv.i       
      IL_12e9: ldc.i4.4     
      IL_12ea: mul          
      IL_12eb: add          
      IL_12ec: ldind.u4     
      IL_12ed: add          
      IL_12ee: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_12f3: ldc.i4.s     59 // 0x3b
      IL_12f5: conv.i       
      IL_12f6: ldc.i4.4     
      IL_12f7: mul          
      IL_12f8: add          
      IL_12f9: ldind.i4     
      IL_12fa: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_12ff: add          
      IL_1300: stloc.s      b

      // [770 17 - 770 27]
      IL_1302: stloc.s      a

      // [773 17 - 773 34]
      IL_1304: ldloc.s      c
      IL_1306: ldloc.s      b
      IL_1308: ldloc.s      d
      IL_130a: not          
      IL_130b: or           
      IL_130c: xor          
      IL_130d: stloc.s      f

      // [774 17 - 774 35]
      IL_130f: ldc.i4.4     
      IL_1310: stloc.s      g

      // [775 17 - 775 27]
      IL_1312: ldloc.s      d

      // [776 17 - 776 23]
      IL_1314: ldloc.s      c
      IL_1316: stloc.s      d

      // [777 17 - 777 23]
      IL_1318: ldloc.s      b
      IL_131a: stloc.s      c

      // [778 17 - 778 88]
      IL_131c: ldloc.s      b
      IL_131e: ldloc.s      a
      IL_1320: ldloc.s      f
      IL_1322: add          
      IL_1323: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_1328: ldc.i4.s     60 // 0x3c
      IL_132a: conv.i       
      IL_132b: ldc.i4.4     
      IL_132c: mul          
      IL_132d: add          
      IL_132e: ldind.u4     
      IL_132f: add          
      IL_1330: ldloc.s      blockPtr
      IL_1332: ldloc.s      g
      IL_1334: conv.i       
      IL_1335: ldc.i4.4     
      IL_1336: mul          
      IL_1337: add          
      IL_1338: ldind.u4     
      IL_1339: add          
      IL_133a: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_133f: ldc.i4.s     60 // 0x3c
      IL_1341: conv.i       
      IL_1342: ldc.i4.4     
      IL_1343: mul          
      IL_1344: add          
      IL_1345: ldind.i4     
      IL_1346: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_134b: add          
      IL_134c: stloc.s      b

      // [779 17 - 779 27]
      IL_134e: stloc.s      a

      // [782 17 - 782 34]
      IL_1350: ldloc.s      c
      IL_1352: ldloc.s      b
      IL_1354: ldloc.s      d
      IL_1356: not          
      IL_1357: or           
      IL_1358: xor          
      IL_1359: stloc.s      f

      // [783 17 - 783 35]
      IL_135b: ldc.i4.s     11 // 0x0b
      IL_135d: stloc.s      g

      // [784 17 - 784 27]
      IL_135f: ldloc.s      d

      // [785 17 - 785 23]
      IL_1361: ldloc.s      c
      IL_1363: stloc.s      d

      // [786 17 - 786 23]
      IL_1365: ldloc.s      b
      IL_1367: stloc.s      c

      // [787 17 - 787 88]
      IL_1369: ldloc.s      b
      IL_136b: ldloc.s      a
      IL_136d: ldloc.s      f
      IL_136f: add          
      IL_1370: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_1375: ldc.i4.s     61 // 0x3d
      IL_1377: conv.i       
      IL_1378: ldc.i4.4     
      IL_1379: mul          
      IL_137a: add          
      IL_137b: ldind.u4     
      IL_137c: add          
      IL_137d: ldloc.s      blockPtr
      IL_137f: ldloc.s      g
      IL_1381: conv.i       
      IL_1382: ldc.i4.4     
      IL_1383: mul          
      IL_1384: add          
      IL_1385: ldind.u4     
      IL_1386: add          
      IL_1387: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_138c: ldc.i4.s     61 // 0x3d
      IL_138e: conv.i       
      IL_138f: ldc.i4.4     
      IL_1390: mul          
      IL_1391: add          
      IL_1392: ldind.i4     
      IL_1393: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_1398: add          
      IL_1399: stloc.s      b

      // [788 17 - 788 27]
      IL_139b: stloc.s      a

      // [791 17 - 791 34]
      IL_139d: ldloc.s      c
      IL_139f: ldloc.s      b
      IL_13a1: ldloc.s      d
      IL_13a3: not          
      IL_13a4: or           
      IL_13a5: xor          
      IL_13a6: stloc.s      f

      // [792 17 - 792 35]
      IL_13a8: ldc.i4.2     
      IL_13a9: stloc.s      g

      // [793 17 - 793 27]
      IL_13ab: ldloc.s      d

      // [794 17 - 794 23]
      IL_13ad: ldloc.s      c
      IL_13af: stloc.s      d

      // [795 17 - 795 23]
      IL_13b1: ldloc.s      b
      IL_13b3: stloc.s      c

      // [796 17 - 796 88]
      IL_13b5: ldloc.s      b
      IL_13b7: ldloc.s      a
      IL_13b9: ldloc.s      f
      IL_13bb: add          
      IL_13bc: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_13c1: ldc.i4.s     62 // 0x3e
      IL_13c3: conv.i       
      IL_13c4: ldc.i4.4     
      IL_13c5: mul          
      IL_13c6: add          
      IL_13c7: ldind.u4     
      IL_13c8: add          
      IL_13c9: ldloc.s      blockPtr
      IL_13cb: ldloc.s      g
      IL_13cd: conv.i       
      IL_13ce: ldc.i4.4     
      IL_13cf: mul          
      IL_13d0: add          
      IL_13d1: ldind.u4     
      IL_13d2: add          
      IL_13d3: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_13d8: ldc.i4.s     62 // 0x3e
      IL_13da: conv.i       
      IL_13db: ldc.i4.4     
      IL_13dc: mul          
      IL_13dd: add          
      IL_13de: ldind.i4     
      IL_13df: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_13e4: add          
      IL_13e5: stloc.s      b

      // [797 17 - 797 27]
      IL_13e7: stloc.s      a

      // [800 17 - 800 34]
      IL_13e9: ldloc.s      c
      IL_13eb: ldloc.s      b
      IL_13ed: ldloc.s      d
      IL_13ef: not          
      IL_13f0: or           
      IL_13f1: xor          
      IL_13f2: stloc.s      f

      // [801 17 - 801 35]
      IL_13f4: ldc.i4.s     9 // 0x09
      IL_13f6: stloc.s      g

      // [802 17 - 802 27]
      IL_13f8: ldloc.s      d

      // [803 17 - 803 23]
      IL_13fa: ldloc.s      c
      IL_13fc: stloc.s      d

      // [804 17 - 804 23]
      IL_13fe: ldloc.s      b
      IL_1400: stloc.s      c

      // [805 17 - 805 88]
      IL_1402: ldloc.s      b
      IL_1404: ldloc.s      a
      IL_1406: ldloc.s      f
      IL_1408: add          
      IL_1409: ldsfld       unsigned int32* Md5DotNet.Md5_3_Unmanaged::s_sinesPtr
      IL_140e: ldc.i4.s     63 // 0x3f
      IL_1410: conv.i       
      IL_1411: ldc.i4.4     
      IL_1412: mul          
      IL_1413: add          
      IL_1414: ldind.u4     
      IL_1415: add          
      IL_1416: ldloc.s      blockPtr
      IL_1418: ldloc.s      g
      IL_141a: conv.i       
      IL_141b: ldc.i4.4     
      IL_141c: mul          
      IL_141d: add          
      IL_141e: ldind.u4     
      IL_141f: add          
      IL_1420: ldsfld       int32* Md5DotNet.Md5_3_Unmanaged::s_shiftsPtr
      IL_1425: ldc.i4.s     63 // 0x3f
      IL_1427: conv.i       
      IL_1428: ldc.i4.4     
      IL_1429: mul          
      IL_142a: add          
      IL_142b: ldind.i4     
      IL_142c: call         unsigned int32 Md5DotNet.Md5_3_Unmanaged::LeftRotate(unsigned int32, int32)
      IL_1431: add          
      IL_1432: stloc.s      b

      // [806 17 - 806 27]
      IL_1434: stloc.s      a

      // [808 17 - 808 32]
      IL_1436: ldarg.2      // digest
      IL_1437: ldflda       unsigned int32 Md5DotNet.Md5Digest::A
      IL_143c: dup          
      IL_143d: ldind.u4     
      IL_143e: ldloc.s      a
      IL_1440: add          
      IL_1441: stind.i4     

      // [809 17 - 809 32]
      IL_1442: ldarg.2      // digest
      IL_1443: ldflda       unsigned int32 Md5DotNet.Md5Digest::B
      IL_1448: dup          
      IL_1449: ldind.u4     
      IL_144a: ldloc.s      b
      IL_144c: add          
      IL_144d: stind.i4     

      // [810 17 - 810 32]
      IL_144e: ldarg.2      // digest
      IL_144f: ldflda       unsigned int32 Md5DotNet.Md5Digest::C
      IL_1454: dup          
      IL_1455: ldind.u4     
      IL_1456: ldloc.s      c
      IL_1458: add          
      IL_1459: stind.i4     

      // [811 17 - 811 32]
      IL_145a: ldarg.2      // digest
      IL_145b: ldflda       unsigned int32 Md5DotNet.Md5Digest::D
      IL_1460: dup          
      IL_1461: ldind.u4     
      IL_1462: ldloc.s      d
      IL_1464: add          
      IL_1465: stind.i4     

      // [178 64 - 178 76]
      IL_1466: ldloc.2      // blockIndex
      IL_1467: ldc.i4.1     
      IL_1468: add          
      IL_1469: stloc.2      // blockIndex

      // [178 38 - 178 62]
      IL_146a: ldloc.2      // blockIndex
      IL_146b: ldloc.0      // blocksCount
      IL_146c: blt          IL_0052
    // end of loop

    // [813 9 - 813 10]
    IL_1471: ret          

  } // end of method Md5_3_Unmanaged::GetDigest

  .method private hidebysig static unsigned int32 
    LeftRotate(
      unsigned int32 'value', 
      int32 rotation
    ) cil managed 
  {
    .maxstack 8

    // [819 13 - 819 69]
    IL_0000: ldarg.0      // 'value'
    IL_0001: ldarg.1      // rotation
    IL_0002: ldc.i4.s     31 // 0x1f
    IL_0004: and          
    IL_0005: shl          
    IL_0006: ldarg.0      // 'value'
    IL_0007: ldc.i4.s     32 // 0x20
    IL_0009: ldarg.1      // rotation
    IL_000a: sub          
    IL_000b: ldc.i4.s     31 // 0x1f
    IL_000d: and          
    IL_000e: shr.un       
    IL_000f: or           
    IL_0010: ret          

  } // end of method Md5_3_Unmanaged::LeftRotate
} // end of class Md5DotNet.Md5_3_Unmanaged
