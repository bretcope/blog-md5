// Type: Md5DotNet.Md5_5_InlineRotate 
// Assembly: Md5DotNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 92E8A231-9212-453A-AB87-DB38B4F5E3D4
// Location: C:\code\blog\md5\Md5DotNet\Md5DotNet\bin\Release\Md5DotNet.exe
// Sequence point data from C:\code\blog\md5\Md5DotNet\Md5DotNet\bin\Release\Md5DotNet.pdb

.class private abstract sealed auto ansi beforefieldinit 
  Md5DotNet.Md5_5_InlineRotate
    extends [mscorlib]System.Object
{

  .method public hidebysig static unsigned int8[] 
    GetBytes(
      unsigned int8[] input
    ) cil managed 
  {
    .maxstack 3
    .locals init (
      [0] valuetype Md5DotNet.Md5Digest digest,
      [1] unsigned int8& pinned inputPtr,
      [2] unsigned int8[] V_2
    )

    // [10 20 - 10 42]
    IL_0000: ldarg.0      // input
    IL_0001: dup          
    IL_0002: stloc.2      // V_2
    IL_0003: brfalse.s    IL_000a
    IL_0005: ldloc.2      // V_2
    IL_0006: ldlen        
    IL_0007: conv.i4      
    IL_0008: brtrue.s     IL_000f
    IL_000a: ldc.i4.0     
    IL_000b: conv.u       
    IL_000c: stloc.1      // inputPtr
    IL_000d: br.s         IL_0017
    IL_000f: ldloc.2      // V_2
    IL_0010: ldc.i4.0     
    IL_0011: ldelema      [mscorlib]System.Byte
    IL_0016: stloc.1      // inputPtr

    // [12 17 - 12 60]
    IL_0017: ldloc.1      // inputPtr
    IL_0018: conv.i       
    IL_0019: ldarg.0      // input
    IL_001a: ldlen        
    IL_001b: conv.i4      
    IL_001c: ldloca.s     digest
    IL_001e: conv.u       
    IL_001f: call         void Md5DotNet.Md5_5_InlineRotate::GetDigest(unsigned int8*, int32, valuetype Md5DotNet.Md5Digest*)

    IL_0024: ldc.i4.0     
    IL_0025: conv.u       
    IL_0026: stloc.1      // inputPtr

    // [15 13 - 15 38]
    IL_0027: ldloca.s     digest
    IL_0029: call         instance unsigned int8[] Md5DotNet.Md5Digest::GetBytes()
    IL_002e: ret          

  } // end of method Md5_5_InlineRotate::GetBytes

  .method public hidebysig static void 
    GetDigest(
      unsigned int8* input, 
      int32 length, 
      valuetype Md5DotNet.Md5Digest* digest
    ) cil managed 
  {
    .maxstack 5
    .locals init (
      [0] int32 blocksCount,
      [1] valuetype Md5DotNet.Block paddingBlockData,
      [2] int32 blockIndex,
      [3] int32 offset,
      [4] int32 blockEnd,
      [5] unsigned int32* blockPtr,
      [6] unsigned int32 a,
      [7] unsigned int32 b,
      [8] unsigned int32 c,
      [9] unsigned int32 d,
      [10] unsigned int32 f,
      [11] unsigned int32 'value',
      [12] int32 bytesRemaining,
      [13] unsigned int8* paddingPtr
    )

    // [21 13 - 21 64]
    IL_0000: ldarg.1      // length
    IL_0001: ldc.i4.8     
    IL_0002: add          
    IL_0003: ldc.i4.s     64 // 0x40
    IL_0005: div          
    IL_0006: ldc.i4.1     
    IL_0007: add          
    IL_0008: stloc.0      // blocksCount

    // [23 13 - 23 36]
    IL_0009: ldarg.2      // digest
    IL_000a: ldc.i4       1732584193 // 0x67452301
    IL_000f: stfld        unsigned int32 Md5DotNet.Md5Digest::A

    // [24 13 - 24 36]
    IL_0014: ldarg.2      // digest
    IL_0015: ldc.i4       -271733879 // 0xefcdab89
    IL_001a: stfld        unsigned int32 Md5DotNet.Md5Digest::B

    // [25 13 - 25 36]
    IL_001f: ldarg.2      // digest
    IL_0020: ldc.i4       -1732584194 // 0x98badcfe
    IL_0025: stfld        unsigned int32 Md5DotNet.Md5Digest::C

    // [26 13 - 26 36]
    IL_002a: ldarg.2      // digest
    IL_002b: ldc.i4       271733878 // 0x10325476
    IL_0030: stfld        unsigned int32 Md5DotNet.Md5Digest::D

    // [28 13 - 28 51]
    IL_0035: ldloca.s     paddingBlockData
    IL_0037: initobj      Md5DotNet.Block

    // [30 18 - 30 36]
    IL_003d: ldc.i4.0     
    IL_003e: stloc.2      // blockIndex

    IL_003f: br           IL_108e
    // start of loop, entry point: IL_108e

      // [32 17 - 32 57]
      IL_0044: ldloc.2      // blockIndex
      IL_0045: ldc.i4.s     64 // 0x40
      IL_0047: mul          
      IL_0048: stloc.3      // offset

      // [33 17 - 33 55]
      IL_0049: ldloc.3      // offset
      IL_004a: ldc.i4.s     64 // 0x40
      IL_004c: add          
      IL_004d: stloc.s      blockEnd

      // [37 17 - 37 39]
      IL_004f: ldloc.s      blockEnd
      IL_0051: ldarg.1      // length
      IL_0052: ble.s        IL_00b8

      // [39 21 - 39 42]
      IL_0054: ldloc.3      // offset
      IL_0055: ldarg.1      // length
      IL_0056: blt.s        IL_0079

      // [41 25 - 41 46]
      IL_0058: ldloc.3      // offset
      IL_0059: ldarg.1      // length
      IL_005a: bne.un.s     IL_0067

      // [44 29 - 44 62]
      IL_005c: ldloca.s     paddingBlockData
      IL_005e: conv.u       
      IL_005f: ldc.i4       128 // 0x00000080
      IL_0064: stind.i1     

      // [45 25 - 45 26]
      IL_0065: br.s         IL_006f

      // [49 29 - 49 63]
      IL_0067: ldloca.s     paddingBlockData
      IL_0069: initobj      Md5DotNet.Block

      // [52 25 - 52 68]
      IL_006f: ldloca.s     paddingBlockData
      IL_0071: ldarg.1      // length
      IL_0072: call         instance void Md5DotNet.Block::SetOriginalLength(int32)

      // [53 21 - 53 22]
      IL_0077: br.s         IL_00b1

      // [56 25 - 56 82]
      IL_0079: ldc.i4.s     64 // 0x40
      IL_007b: ldloc.s      blockEnd
      IL_007d: ldarg.1      // length
      IL_007e: sub          
      IL_007f: sub          
      IL_0080: stloc.s      bytesRemaining

      // [57 25 - 57 67]
      IL_0082: ldloca.s     paddingBlockData
      IL_0084: conv.u       
      IL_0085: stloc.s      paddingPtr

      // [58 25 - 58 93]
      IL_0087: ldarg.0      // input
      IL_0088: ldloc.3      // offset
      IL_0089: add          
      IL_008a: conv.u       
      IL_008b: ldloc.s      paddingPtr
      IL_008d: ldloc.s      bytesRemaining
      IL_008f: call         void Md5DotNet.Common::UnsafeMemoryCopy(unsigned int8*, unsigned int8*, int32)

      // [61 25 - 61 59]
      IL_0094: ldloc.s      paddingPtr
      IL_0096: ldloc.s      bytesRemaining
      IL_0098: add          
      IL_0099: ldc.i4       128 // 0x00000080
      IL_009e: stind.i1     

      // [64 25 - 64 71]
      IL_009f: ldc.i4.s     64 // 0x40
      IL_00a1: ldloc.s      bytesRemaining
      IL_00a3: ldc.i4.1     
      IL_00a4: add          
      IL_00a5: sub          
      IL_00a6: ldc.i4.8     
      IL_00a7: blt.s        IL_00b1

      // [65 29 - 65 72]
      IL_00a9: ldloca.s     paddingBlockData
      IL_00ab: ldarg.1      // length
      IL_00ac: call         instance void Md5DotNet.Block::SetOriginalLength(int32)

      // [69 21 - 69 57]
      IL_00b1: ldloca.s     paddingBlockData
      IL_00b3: conv.u       
      IL_00b4: stloc.s      blockPtr

      // [70 17 - 70 18]
      IL_00b6: br.s         IL_00be

      // [73 21 - 73 54]
      IL_00b8: ldarg.0      // input
      IL_00b9: ldloc.3      // offset
      IL_00ba: add          
      IL_00bb: conv.u       
      IL_00bc: stloc.s      blockPtr

      // [76 17 - 76 35]
      IL_00be: ldarg.2      // digest
      IL_00bf: ldfld        unsigned int32 Md5DotNet.Md5Digest::A
      IL_00c4: stloc.s      a

      // [77 17 - 77 35]
      IL_00c6: ldarg.2      // digest
      IL_00c7: ldfld        unsigned int32 Md5DotNet.Md5Digest::B
      IL_00cc: stloc.s      b

      // [78 17 - 78 35]
      IL_00ce: ldarg.2      // digest
      IL_00cf: ldfld        unsigned int32 Md5DotNet.Md5Digest::C
      IL_00d4: stloc.s      c

      // [79 17 - 79 35]
      IL_00d6: ldarg.2      // digest
      IL_00d7: ldfld        unsigned int32 Md5DotNet.Md5Digest::D
      IL_00dc: stloc.s      d

      // [84 17 - 84 40]
      IL_00de: ldloc.s      b
      IL_00e0: ldloc.s      c
      IL_00e2: and          
      IL_00e3: ldloc.s      b
      IL_00e5: not          
      IL_00e6: ldloc.s      d
      IL_00e8: and          
      IL_00e9: or           
      IL_00ea: stloc.s      f

      // [85 17 - 85 27]
      IL_00ec: ldloc.s      d

      // [86 17 - 86 23]
      IL_00ee: ldloc.s      c
      IL_00f0: stloc.s      d

      // [87 17 - 87 23]
      IL_00f2: ldloc.s      b
      IL_00f4: stloc.s      c

      // [88 17 - 88 58]
      IL_00f6: ldloc.s      a
      IL_00f8: ldloc.s      f
      IL_00fa: add          
      IL_00fb: ldc.i4       -680876936 // 0xd76aa478
      IL_0100: add          
      IL_0101: ldloc.s      blockPtr
      IL_0103: ldind.u4     
      IL_0104: add          
      IL_0105: stloc.s      'value'

      // [89 17 - 89 57]
      IL_0107: ldloc.s      b
      IL_0109: ldloc.s      'value'
      IL_010b: ldc.i4.7     
      IL_010c: shl          
      IL_010d: ldloc.s      'value'
      IL_010f: ldc.i4.s     25 // 0x19
      IL_0111: shr.un       
      IL_0112: or           
      IL_0113: add          
      IL_0114: stloc.s      b

      // [90 17 - 90 27]
      IL_0116: stloc.s      a

      // [93 17 - 93 40]
      IL_0118: ldloc.s      b
      IL_011a: ldloc.s      c
      IL_011c: and          
      IL_011d: ldloc.s      b
      IL_011f: not          
      IL_0120: ldloc.s      d
      IL_0122: and          
      IL_0123: or           
      IL_0124: stloc.s      f

      // [94 17 - 94 27]
      IL_0126: ldloc.s      d

      // [95 17 - 95 23]
      IL_0128: ldloc.s      c
      IL_012a: stloc.s      d

      // [96 17 - 96 23]
      IL_012c: ldloc.s      b
      IL_012e: stloc.s      c

      // [97 17 - 97 58]
      IL_0130: ldloc.s      a
      IL_0132: ldloc.s      f
      IL_0134: add          
      IL_0135: ldc.i4       -389564586 // 0xe8c7b756
      IL_013a: add          
      IL_013b: ldloc.s      blockPtr
      IL_013d: ldc.i4.4     
      IL_013e: add          
      IL_013f: ldind.u4     
      IL_0140: add          
      IL_0141: stloc.s      'value'

      // [98 17 - 98 59]
      IL_0143: ldloc.s      b
      IL_0145: ldloc.s      'value'
      IL_0147: ldc.i4.s     12 // 0x0c
      IL_0149: shl          
      IL_014a: ldloc.s      'value'
      IL_014c: ldc.i4.s     20 // 0x14
      IL_014e: shr.un       
      IL_014f: or           
      IL_0150: add          
      IL_0151: stloc.s      b

      // [99 17 - 99 27]
      IL_0153: stloc.s      a

      // [102 17 - 102 40]
      IL_0155: ldloc.s      b
      IL_0157: ldloc.s      c
      IL_0159: and          
      IL_015a: ldloc.s      b
      IL_015c: not          
      IL_015d: ldloc.s      d
      IL_015f: and          
      IL_0160: or           
      IL_0161: stloc.s      f

      // [103 17 - 103 27]
      IL_0163: ldloc.s      d

      // [104 17 - 104 23]
      IL_0165: ldloc.s      c
      IL_0167: stloc.s      d

      // [105 17 - 105 23]
      IL_0169: ldloc.s      b
      IL_016b: stloc.s      c

      // [106 17 - 106 58]
      IL_016d: ldloc.s      a
      IL_016f: ldloc.s      f
      IL_0171: add          
      IL_0172: ldc.i4       606105819 // 0x242070db
      IL_0177: add          
      IL_0178: ldloc.s      blockPtr
      IL_017a: ldc.i4.2     
      IL_017b: conv.i       
      IL_017c: ldc.i4.4     
      IL_017d: mul          
      IL_017e: add          
      IL_017f: ldind.u4     
      IL_0180: add          
      IL_0181: stloc.s      'value'

      // [107 17 - 107 59]
      IL_0183: ldloc.s      b
      IL_0185: ldloc.s      'value'
      IL_0187: ldc.i4.s     17 // 0x11
      IL_0189: shl          
      IL_018a: ldloc.s      'value'
      IL_018c: ldc.i4.s     15 // 0x0f
      IL_018e: shr.un       
      IL_018f: or           
      IL_0190: add          
      IL_0191: stloc.s      b

      // [108 17 - 108 27]
      IL_0193: stloc.s      a

      // [111 17 - 111 40]
      IL_0195: ldloc.s      b
      IL_0197: ldloc.s      c
      IL_0199: and          
      IL_019a: ldloc.s      b
      IL_019c: not          
      IL_019d: ldloc.s      d
      IL_019f: and          
      IL_01a0: or           
      IL_01a1: stloc.s      f

      // [112 17 - 112 27]
      IL_01a3: ldloc.s      d

      // [113 17 - 113 23]
      IL_01a5: ldloc.s      c
      IL_01a7: stloc.s      d

      // [114 17 - 114 23]
      IL_01a9: ldloc.s      b
      IL_01ab: stloc.s      c

      // [115 17 - 115 58]
      IL_01ad: ldloc.s      a
      IL_01af: ldloc.s      f
      IL_01b1: add          
      IL_01b2: ldc.i4       -1044525330 // 0xc1bdceee
      IL_01b7: add          
      IL_01b8: ldloc.s      blockPtr
      IL_01ba: ldc.i4.3     
      IL_01bb: conv.i       
      IL_01bc: ldc.i4.4     
      IL_01bd: mul          
      IL_01be: add          
      IL_01bf: ldind.u4     
      IL_01c0: add          
      IL_01c1: stloc.s      'value'

      // [116 17 - 116 59]
      IL_01c3: ldloc.s      b
      IL_01c5: ldloc.s      'value'
      IL_01c7: ldc.i4.s     22 // 0x16
      IL_01c9: shl          
      IL_01ca: ldloc.s      'value'
      IL_01cc: ldc.i4.s     10 // 0x0a
      IL_01ce: shr.un       
      IL_01cf: or           
      IL_01d0: add          
      IL_01d1: stloc.s      b

      // [117 17 - 117 27]
      IL_01d3: stloc.s      a

      // [120 17 - 120 40]
      IL_01d5: ldloc.s      b
      IL_01d7: ldloc.s      c
      IL_01d9: and          
      IL_01da: ldloc.s      b
      IL_01dc: not          
      IL_01dd: ldloc.s      d
      IL_01df: and          
      IL_01e0: or           
      IL_01e1: stloc.s      f

      // [121 17 - 121 27]
      IL_01e3: ldloc.s      d

      // [122 17 - 122 23]
      IL_01e5: ldloc.s      c
      IL_01e7: stloc.s      d

      // [123 17 - 123 23]
      IL_01e9: ldloc.s      b
      IL_01eb: stloc.s      c

      // [124 17 - 124 58]
      IL_01ed: ldloc.s      a
      IL_01ef: ldloc.s      f
      IL_01f1: add          
      IL_01f2: ldc.i4       -176418897 // 0xf57c0faf
      IL_01f7: add          
      IL_01f8: ldloc.s      blockPtr
      IL_01fa: ldc.i4.4     
      IL_01fb: conv.i       
      IL_01fc: ldc.i4.4     
      IL_01fd: mul          
      IL_01fe: add          
      IL_01ff: ldind.u4     
      IL_0200: add          
      IL_0201: stloc.s      'value'

      // [125 17 - 125 57]
      IL_0203: ldloc.s      b
      IL_0205: ldloc.s      'value'
      IL_0207: ldc.i4.7     
      IL_0208: shl          
      IL_0209: ldloc.s      'value'
      IL_020b: ldc.i4.s     25 // 0x19
      IL_020d: shr.un       
      IL_020e: or           
      IL_020f: add          
      IL_0210: stloc.s      b

      // [126 17 - 126 27]
      IL_0212: stloc.s      a

      // [129 17 - 129 40]
      IL_0214: ldloc.s      b
      IL_0216: ldloc.s      c
      IL_0218: and          
      IL_0219: ldloc.s      b
      IL_021b: not          
      IL_021c: ldloc.s      d
      IL_021e: and          
      IL_021f: or           
      IL_0220: stloc.s      f

      // [130 17 - 130 27]
      IL_0222: ldloc.s      d

      // [131 17 - 131 23]
      IL_0224: ldloc.s      c
      IL_0226: stloc.s      d

      // [132 17 - 132 23]
      IL_0228: ldloc.s      b
      IL_022a: stloc.s      c

      // [133 17 - 133 58]
      IL_022c: ldloc.s      a
      IL_022e: ldloc.s      f
      IL_0230: add          
      IL_0231: ldc.i4       1200080426 // 0x4787c62a
      IL_0236: add          
      IL_0237: ldloc.s      blockPtr
      IL_0239: ldc.i4.5     
      IL_023a: conv.i       
      IL_023b: ldc.i4.4     
      IL_023c: mul          
      IL_023d: add          
      IL_023e: ldind.u4     
      IL_023f: add          
      IL_0240: stloc.s      'value'

      // [134 17 - 134 59]
      IL_0242: ldloc.s      b
      IL_0244: ldloc.s      'value'
      IL_0246: ldc.i4.s     12 // 0x0c
      IL_0248: shl          
      IL_0249: ldloc.s      'value'
      IL_024b: ldc.i4.s     20 // 0x14
      IL_024d: shr.un       
      IL_024e: or           
      IL_024f: add          
      IL_0250: stloc.s      b

      // [135 17 - 135 27]
      IL_0252: stloc.s      a

      // [138 17 - 138 40]
      IL_0254: ldloc.s      b
      IL_0256: ldloc.s      c
      IL_0258: and          
      IL_0259: ldloc.s      b
      IL_025b: not          
      IL_025c: ldloc.s      d
      IL_025e: and          
      IL_025f: or           
      IL_0260: stloc.s      f

      // [139 17 - 139 27]
      IL_0262: ldloc.s      d

      // [140 17 - 140 23]
      IL_0264: ldloc.s      c
      IL_0266: stloc.s      d

      // [141 17 - 141 23]
      IL_0268: ldloc.s      b
      IL_026a: stloc.s      c

      // [142 17 - 142 58]
      IL_026c: ldloc.s      a
      IL_026e: ldloc.s      f
      IL_0270: add          
      IL_0271: ldc.i4       -1473231341 // 0xa8304613
      IL_0276: add          
      IL_0277: ldloc.s      blockPtr
      IL_0279: ldc.i4.6     
      IL_027a: conv.i       
      IL_027b: ldc.i4.4     
      IL_027c: mul          
      IL_027d: add          
      IL_027e: ldind.u4     
      IL_027f: add          
      IL_0280: stloc.s      'value'

      // [143 17 - 143 59]
      IL_0282: ldloc.s      b
      IL_0284: ldloc.s      'value'
      IL_0286: ldc.i4.s     17 // 0x11
      IL_0288: shl          
      IL_0289: ldloc.s      'value'
      IL_028b: ldc.i4.s     15 // 0x0f
      IL_028d: shr.un       
      IL_028e: or           
      IL_028f: add          
      IL_0290: stloc.s      b

      // [144 17 - 144 27]
      IL_0292: stloc.s      a

      // [147 17 - 147 40]
      IL_0294: ldloc.s      b
      IL_0296: ldloc.s      c
      IL_0298: and          
      IL_0299: ldloc.s      b
      IL_029b: not          
      IL_029c: ldloc.s      d
      IL_029e: and          
      IL_029f: or           
      IL_02a0: stloc.s      f

      // [148 17 - 148 27]
      IL_02a2: ldloc.s      d

      // [149 17 - 149 23]
      IL_02a4: ldloc.s      c
      IL_02a6: stloc.s      d

      // [150 17 - 150 23]
      IL_02a8: ldloc.s      b
      IL_02aa: stloc.s      c

      // [151 17 - 151 58]
      IL_02ac: ldloc.s      a
      IL_02ae: ldloc.s      f
      IL_02b0: add          
      IL_02b1: ldc.i4       -45705983 // 0xfd469501
      IL_02b6: add          
      IL_02b7: ldloc.s      blockPtr
      IL_02b9: ldc.i4.7     
      IL_02ba: conv.i       
      IL_02bb: ldc.i4.4     
      IL_02bc: mul          
      IL_02bd: add          
      IL_02be: ldind.u4     
      IL_02bf: add          
      IL_02c0: stloc.s      'value'

      // [152 17 - 152 59]
      IL_02c2: ldloc.s      b
      IL_02c4: ldloc.s      'value'
      IL_02c6: ldc.i4.s     22 // 0x16
      IL_02c8: shl          
      IL_02c9: ldloc.s      'value'
      IL_02cb: ldc.i4.s     10 // 0x0a
      IL_02cd: shr.un       
      IL_02ce: or           
      IL_02cf: add          
      IL_02d0: stloc.s      b

      // [153 17 - 153 27]
      IL_02d2: stloc.s      a

      // [156 17 - 156 40]
      IL_02d4: ldloc.s      b
      IL_02d6: ldloc.s      c
      IL_02d8: and          
      IL_02d9: ldloc.s      b
      IL_02db: not          
      IL_02dc: ldloc.s      d
      IL_02de: and          
      IL_02df: or           
      IL_02e0: stloc.s      f

      // [157 17 - 157 27]
      IL_02e2: ldloc.s      d

      // [158 17 - 158 23]
      IL_02e4: ldloc.s      c
      IL_02e6: stloc.s      d

      // [159 17 - 159 23]
      IL_02e8: ldloc.s      b
      IL_02ea: stloc.s      c

      // [160 17 - 160 58]
      IL_02ec: ldloc.s      a
      IL_02ee: ldloc.s      f
      IL_02f0: add          
      IL_02f1: ldc.i4       1770035416 // 0x698098d8
      IL_02f6: add          
      IL_02f7: ldloc.s      blockPtr
      IL_02f9: ldc.i4.8     
      IL_02fa: conv.i       
      IL_02fb: ldc.i4.4     
      IL_02fc: mul          
      IL_02fd: add          
      IL_02fe: ldind.u4     
      IL_02ff: add          
      IL_0300: stloc.s      'value'

      // [161 17 - 161 57]
      IL_0302: ldloc.s      b
      IL_0304: ldloc.s      'value'
      IL_0306: ldc.i4.7     
      IL_0307: shl          
      IL_0308: ldloc.s      'value'
      IL_030a: ldc.i4.s     25 // 0x19
      IL_030c: shr.un       
      IL_030d: or           
      IL_030e: add          
      IL_030f: stloc.s      b

      // [162 17 - 162 27]
      IL_0311: stloc.s      a

      // [165 17 - 165 40]
      IL_0313: ldloc.s      b
      IL_0315: ldloc.s      c
      IL_0317: and          
      IL_0318: ldloc.s      b
      IL_031a: not          
      IL_031b: ldloc.s      d
      IL_031d: and          
      IL_031e: or           
      IL_031f: stloc.s      f

      // [166 17 - 166 27]
      IL_0321: ldloc.s      d

      // [167 17 - 167 23]
      IL_0323: ldloc.s      c
      IL_0325: stloc.s      d

      // [168 17 - 168 23]
      IL_0327: ldloc.s      b
      IL_0329: stloc.s      c

      // [169 17 - 169 58]
      IL_032b: ldloc.s      a
      IL_032d: ldloc.s      f
      IL_032f: add          
      IL_0330: ldc.i4       -1958414417 // 0x8b44f7af
      IL_0335: add          
      IL_0336: ldloc.s      blockPtr
      IL_0338: ldc.i4.s     9 // 0x09
      IL_033a: conv.i       
      IL_033b: ldc.i4.4     
      IL_033c: mul          
      IL_033d: add          
      IL_033e: ldind.u4     
      IL_033f: add          
      IL_0340: stloc.s      'value'

      // [170 17 - 170 59]
      IL_0342: ldloc.s      b
      IL_0344: ldloc.s      'value'
      IL_0346: ldc.i4.s     12 // 0x0c
      IL_0348: shl          
      IL_0349: ldloc.s      'value'
      IL_034b: ldc.i4.s     20 // 0x14
      IL_034d: shr.un       
      IL_034e: or           
      IL_034f: add          
      IL_0350: stloc.s      b

      // [171 17 - 171 27]
      IL_0352: stloc.s      a

      // [174 17 - 174 40]
      IL_0354: ldloc.s      b
      IL_0356: ldloc.s      c
      IL_0358: and          
      IL_0359: ldloc.s      b
      IL_035b: not          
      IL_035c: ldloc.s      d
      IL_035e: and          
      IL_035f: or           
      IL_0360: stloc.s      f

      // [175 17 - 175 27]
      IL_0362: ldloc.s      d

      // [176 17 - 176 23]
      IL_0364: ldloc.s      c
      IL_0366: stloc.s      d

      // [177 17 - 177 23]
      IL_0368: ldloc.s      b
      IL_036a: stloc.s      c

      // [178 17 - 178 59]
      IL_036c: ldloc.s      a
      IL_036e: ldloc.s      f
      IL_0370: add          
      IL_0371: ldc.i4       -42063 // 0xffff5bb1
      IL_0376: add          
      IL_0377: ldloc.s      blockPtr
      IL_0379: ldc.i4.s     10 // 0x0a
      IL_037b: conv.i       
      IL_037c: ldc.i4.4     
      IL_037d: mul          
      IL_037e: add          
      IL_037f: ldind.u4     
      IL_0380: add          
      IL_0381: stloc.s      'value'

      // [179 17 - 179 59]
      IL_0383: ldloc.s      b
      IL_0385: ldloc.s      'value'
      IL_0387: ldc.i4.s     17 // 0x11
      IL_0389: shl          
      IL_038a: ldloc.s      'value'
      IL_038c: ldc.i4.s     15 // 0x0f
      IL_038e: shr.un       
      IL_038f: or           
      IL_0390: add          
      IL_0391: stloc.s      b

      // [180 17 - 180 27]
      IL_0393: stloc.s      a

      // [183 17 - 183 40]
      IL_0395: ldloc.s      b
      IL_0397: ldloc.s      c
      IL_0399: and          
      IL_039a: ldloc.s      b
      IL_039c: not          
      IL_039d: ldloc.s      d
      IL_039f: and          
      IL_03a0: or           
      IL_03a1: stloc.s      f

      // [184 17 - 184 27]
      IL_03a3: ldloc.s      d

      // [185 17 - 185 23]
      IL_03a5: ldloc.s      c
      IL_03a7: stloc.s      d

      // [186 17 - 186 23]
      IL_03a9: ldloc.s      b
      IL_03ab: stloc.s      c

      // [187 17 - 187 59]
      IL_03ad: ldloc.s      a
      IL_03af: ldloc.s      f
      IL_03b1: add          
      IL_03b2: ldc.i4       -1990404162 // 0x895cd7be
      IL_03b7: add          
      IL_03b8: ldloc.s      blockPtr
      IL_03ba: ldc.i4.s     11 // 0x0b
      IL_03bc: conv.i       
      IL_03bd: ldc.i4.4     
      IL_03be: mul          
      IL_03bf: add          
      IL_03c0: ldind.u4     
      IL_03c1: add          
      IL_03c2: stloc.s      'value'

      // [188 17 - 188 59]
      IL_03c4: ldloc.s      b
      IL_03c6: ldloc.s      'value'
      IL_03c8: ldc.i4.s     22 // 0x16
      IL_03ca: shl          
      IL_03cb: ldloc.s      'value'
      IL_03cd: ldc.i4.s     10 // 0x0a
      IL_03cf: shr.un       
      IL_03d0: or           
      IL_03d1: add          
      IL_03d2: stloc.s      b

      // [189 17 - 189 27]
      IL_03d4: stloc.s      a

      // [192 17 - 192 40]
      IL_03d6: ldloc.s      b
      IL_03d8: ldloc.s      c
      IL_03da: and          
      IL_03db: ldloc.s      b
      IL_03dd: not          
      IL_03de: ldloc.s      d
      IL_03e0: and          
      IL_03e1: or           
      IL_03e2: stloc.s      f

      // [193 17 - 193 27]
      IL_03e4: ldloc.s      d

      // [194 17 - 194 23]
      IL_03e6: ldloc.s      c
      IL_03e8: stloc.s      d

      // [195 17 - 195 23]
      IL_03ea: ldloc.s      b
      IL_03ec: stloc.s      c

      // [196 17 - 196 59]
      IL_03ee: ldloc.s      a
      IL_03f0: ldloc.s      f
      IL_03f2: add          
      IL_03f3: ldc.i4       1804603682 // 0x6b901122
      IL_03f8: add          
      IL_03f9: ldloc.s      blockPtr
      IL_03fb: ldc.i4.s     12 // 0x0c
      IL_03fd: conv.i       
      IL_03fe: ldc.i4.4     
      IL_03ff: mul          
      IL_0400: add          
      IL_0401: ldind.u4     
      IL_0402: add          
      IL_0403: stloc.s      'value'

      // [197 17 - 197 57]
      IL_0405: ldloc.s      b
      IL_0407: ldloc.s      'value'
      IL_0409: ldc.i4.7     
      IL_040a: shl          
      IL_040b: ldloc.s      'value'
      IL_040d: ldc.i4.s     25 // 0x19
      IL_040f: shr.un       
      IL_0410: or           
      IL_0411: add          
      IL_0412: stloc.s      b

      // [198 17 - 198 27]
      IL_0414: stloc.s      a

      // [201 17 - 201 40]
      IL_0416: ldloc.s      b
      IL_0418: ldloc.s      c
      IL_041a: and          
      IL_041b: ldloc.s      b
      IL_041d: not          
      IL_041e: ldloc.s      d
      IL_0420: and          
      IL_0421: or           
      IL_0422: stloc.s      f

      // [202 17 - 202 27]
      IL_0424: ldloc.s      d

      // [203 17 - 203 23]
      IL_0426: ldloc.s      c
      IL_0428: stloc.s      d

      // [204 17 - 204 23]
      IL_042a: ldloc.s      b
      IL_042c: stloc.s      c

      // [205 17 - 205 59]
      IL_042e: ldloc.s      a
      IL_0430: ldloc.s      f
      IL_0432: add          
      IL_0433: ldc.i4       -40341101 // 0xfd987193
      IL_0438: add          
      IL_0439: ldloc.s      blockPtr
      IL_043b: ldc.i4.s     13 // 0x0d
      IL_043d: conv.i       
      IL_043e: ldc.i4.4     
      IL_043f: mul          
      IL_0440: add          
      IL_0441: ldind.u4     
      IL_0442: add          
      IL_0443: stloc.s      'value'

      // [206 17 - 206 59]
      IL_0445: ldloc.s      b
      IL_0447: ldloc.s      'value'
      IL_0449: ldc.i4.s     12 // 0x0c
      IL_044b: shl          
      IL_044c: ldloc.s      'value'
      IL_044e: ldc.i4.s     20 // 0x14
      IL_0450: shr.un       
      IL_0451: or           
      IL_0452: add          
      IL_0453: stloc.s      b

      // [207 17 - 207 27]
      IL_0455: stloc.s      a

      // [210 17 - 210 40]
      IL_0457: ldloc.s      b
      IL_0459: ldloc.s      c
      IL_045b: and          
      IL_045c: ldloc.s      b
      IL_045e: not          
      IL_045f: ldloc.s      d
      IL_0461: and          
      IL_0462: or           
      IL_0463: stloc.s      f

      // [211 17 - 211 27]
      IL_0465: ldloc.s      d

      // [212 17 - 212 23]
      IL_0467: ldloc.s      c
      IL_0469: stloc.s      d

      // [213 17 - 213 23]
      IL_046b: ldloc.s      b
      IL_046d: stloc.s      c

      // [214 17 - 214 59]
      IL_046f: ldloc.s      a
      IL_0471: ldloc.s      f
      IL_0473: add          
      IL_0474: ldc.i4       -1502002290 // 0xa679438e
      IL_0479: add          
      IL_047a: ldloc.s      blockPtr
      IL_047c: ldc.i4.s     14 // 0x0e
      IL_047e: conv.i       
      IL_047f: ldc.i4.4     
      IL_0480: mul          
      IL_0481: add          
      IL_0482: ldind.u4     
      IL_0483: add          
      IL_0484: stloc.s      'value'

      // [215 17 - 215 59]
      IL_0486: ldloc.s      b
      IL_0488: ldloc.s      'value'
      IL_048a: ldc.i4.s     17 // 0x11
      IL_048c: shl          
      IL_048d: ldloc.s      'value'
      IL_048f: ldc.i4.s     15 // 0x0f
      IL_0491: shr.un       
      IL_0492: or           
      IL_0493: add          
      IL_0494: stloc.s      b

      // [216 17 - 216 27]
      IL_0496: stloc.s      a

      // [219 17 - 219 40]
      IL_0498: ldloc.s      b
      IL_049a: ldloc.s      c
      IL_049c: and          
      IL_049d: ldloc.s      b
      IL_049f: not          
      IL_04a0: ldloc.s      d
      IL_04a2: and          
      IL_04a3: or           
      IL_04a4: stloc.s      f

      // [220 17 - 220 27]
      IL_04a6: ldloc.s      d

      // [221 17 - 221 23]
      IL_04a8: ldloc.s      c
      IL_04aa: stloc.s      d

      // [222 17 - 222 23]
      IL_04ac: ldloc.s      b
      IL_04ae: stloc.s      c

      // [223 17 - 223 59]
      IL_04b0: ldloc.s      a
      IL_04b2: ldloc.s      f
      IL_04b4: add          
      IL_04b5: ldc.i4       1236535329 // 0x49b40821
      IL_04ba: add          
      IL_04bb: ldloc.s      blockPtr
      IL_04bd: ldc.i4.s     15 // 0x0f
      IL_04bf: conv.i       
      IL_04c0: ldc.i4.4     
      IL_04c1: mul          
      IL_04c2: add          
      IL_04c3: ldind.u4     
      IL_04c4: add          
      IL_04c5: stloc.s      'value'

      // [224 17 - 224 59]
      IL_04c7: ldloc.s      b
      IL_04c9: ldloc.s      'value'
      IL_04cb: ldc.i4.s     22 // 0x16
      IL_04cd: shl          
      IL_04ce: ldloc.s      'value'
      IL_04d0: ldc.i4.s     10 // 0x0a
      IL_04d2: shr.un       
      IL_04d3: or           
      IL_04d4: add          
      IL_04d5: stloc.s      b

      // [225 17 - 225 27]
      IL_04d7: stloc.s      a

      // [228 17 - 228 40]
      IL_04d9: ldloc.s      d
      IL_04db: ldloc.s      b
      IL_04dd: and          
      IL_04de: ldloc.s      d
      IL_04e0: not          
      IL_04e1: ldloc.s      c
      IL_04e3: and          
      IL_04e4: or           
      IL_04e5: stloc.s      f

      // [229 17 - 229 27]
      IL_04e7: ldloc.s      d

      // [230 17 - 230 23]
      IL_04e9: ldloc.s      c
      IL_04eb: stloc.s      d

      // [231 17 - 231 23]
      IL_04ed: ldloc.s      b
      IL_04ef: stloc.s      c

      // [232 17 - 232 75]
      IL_04f1: ldloc.s      a
      IL_04f3: ldloc.s      f
      IL_04f5: add          
      IL_04f6: ldc.i4       -165796510 // 0xf61e2562
      IL_04fb: add          
      IL_04fc: ldloc.s      blockPtr
      IL_04fe: ldc.i4.4     
      IL_04ff: add          
      IL_0500: ldind.u4     
      IL_0501: add          
      IL_0502: stloc.s      'value'

      // [233 17 - 233 57]
      IL_0504: ldloc.s      b
      IL_0506: ldloc.s      'value'
      IL_0508: ldc.i4.5     
      IL_0509: shl          
      IL_050a: ldloc.s      'value'
      IL_050c: ldc.i4.s     27 // 0x1b
      IL_050e: shr.un       
      IL_050f: or           
      IL_0510: add          
      IL_0511: stloc.s      b

      // [234 17 - 234 27]
      IL_0513: stloc.s      a

      // [237 17 - 237 40]
      IL_0515: ldloc.s      d
      IL_0517: ldloc.s      b
      IL_0519: and          
      IL_051a: ldloc.s      d
      IL_051c: not          
      IL_051d: ldloc.s      c
      IL_051f: and          
      IL_0520: or           
      IL_0521: stloc.s      f

      // [238 17 - 238 27]
      IL_0523: ldloc.s      d

      // [239 17 - 239 23]
      IL_0525: ldloc.s      c
      IL_0527: stloc.s      d

      // [240 17 - 240 23]
      IL_0529: ldloc.s      b
      IL_052b: stloc.s      c

      // [241 17 - 241 75]
      IL_052d: ldloc.s      a
      IL_052f: ldloc.s      f
      IL_0531: add          
      IL_0532: ldc.i4       -1069501632 // 0xc040b340
      IL_0537: add          
      IL_0538: ldloc.s      blockPtr
      IL_053a: ldc.i4.6     
      IL_053b: conv.i       
      IL_053c: ldc.i4.4     
      IL_053d: mul          
      IL_053e: add          
      IL_053f: ldind.u4     
      IL_0540: add          
      IL_0541: stloc.s      'value'

      // [242 17 - 242 57]
      IL_0543: ldloc.s      b
      IL_0545: ldloc.s      'value'
      IL_0547: ldc.i4.s     9 // 0x09
      IL_0549: shl          
      IL_054a: ldloc.s      'value'
      IL_054c: ldc.i4.s     23 // 0x17
      IL_054e: shr.un       
      IL_054f: or           
      IL_0550: add          
      IL_0551: stloc.s      b

      // [243 17 - 243 27]
      IL_0553: stloc.s      a

      // [246 17 - 246 40]
      IL_0555: ldloc.s      d
      IL_0557: ldloc.s      b
      IL_0559: and          
      IL_055a: ldloc.s      d
      IL_055c: not          
      IL_055d: ldloc.s      c
      IL_055f: and          
      IL_0560: or           
      IL_0561: stloc.s      f

      // [247 17 - 247 27]
      IL_0563: ldloc.s      d

      // [248 17 - 248 23]
      IL_0565: ldloc.s      c
      IL_0567: stloc.s      d

      // [249 17 - 249 23]
      IL_0569: ldloc.s      b
      IL_056b: stloc.s      c

      // [250 17 - 250 75]
      IL_056d: ldloc.s      a
      IL_056f: ldloc.s      f
      IL_0571: add          
      IL_0572: ldc.i4       643717713 // 0x265e5a51
      IL_0577: add          
      IL_0578: ldloc.s      blockPtr
      IL_057a: ldc.i4.s     11 // 0x0b
      IL_057c: conv.i       
      IL_057d: ldc.i4.4     
      IL_057e: mul          
      IL_057f: add          
      IL_0580: ldind.u4     
      IL_0581: add          
      IL_0582: stloc.s      'value'

      // [251 17 - 251 59]
      IL_0584: ldloc.s      b
      IL_0586: ldloc.s      'value'
      IL_0588: ldc.i4.s     14 // 0x0e
      IL_058a: shl          
      IL_058b: ldloc.s      'value'
      IL_058d: ldc.i4.s     18 // 0x12
      IL_058f: shr.un       
      IL_0590: or           
      IL_0591: add          
      IL_0592: stloc.s      b

      // [252 17 - 252 27]
      IL_0594: stloc.s      a

      // [255 17 - 255 40]
      IL_0596: ldloc.s      d
      IL_0598: ldloc.s      b
      IL_059a: and          
      IL_059b: ldloc.s      d
      IL_059d: not          
      IL_059e: ldloc.s      c
      IL_05a0: and          
      IL_05a1: or           
      IL_05a2: stloc.s      f

      // [256 17 - 256 27]
      IL_05a4: ldloc.s      d

      // [257 17 - 257 23]
      IL_05a6: ldloc.s      c
      IL_05a8: stloc.s      d

      // [258 17 - 258 23]
      IL_05aa: ldloc.s      b
      IL_05ac: stloc.s      c

      // [259 17 - 259 75]
      IL_05ae: ldloc.s      a
      IL_05b0: ldloc.s      f
      IL_05b2: add          
      IL_05b3: ldc.i4       -373897302 // 0xe9b6c7aa
      IL_05b8: add          
      IL_05b9: ldloc.s      blockPtr
      IL_05bb: ldind.u4     
      IL_05bc: add          
      IL_05bd: stloc.s      'value'

      // [260 17 - 260 59]
      IL_05bf: ldloc.s      b
      IL_05c1: ldloc.s      'value'
      IL_05c3: ldc.i4.s     20 // 0x14
      IL_05c5: shl          
      IL_05c6: ldloc.s      'value'
      IL_05c8: ldc.i4.s     12 // 0x0c
      IL_05ca: shr.un       
      IL_05cb: or           
      IL_05cc: add          
      IL_05cd: stloc.s      b

      // [261 17 - 261 27]
      IL_05cf: stloc.s      a

      // [264 17 - 264 40]
      IL_05d1: ldloc.s      d
      IL_05d3: ldloc.s      b
      IL_05d5: and          
      IL_05d6: ldloc.s      d
      IL_05d8: not          
      IL_05d9: ldloc.s      c
      IL_05db: and          
      IL_05dc: or           
      IL_05dd: stloc.s      f

      // [265 17 - 265 27]
      IL_05df: ldloc.s      d

      // [266 17 - 266 23]
      IL_05e1: ldloc.s      c
      IL_05e3: stloc.s      d

      // [267 17 - 267 23]
      IL_05e5: ldloc.s      b
      IL_05e7: stloc.s      c

      // [268 17 - 268 75]
      IL_05e9: ldloc.s      a
      IL_05eb: ldloc.s      f
      IL_05ed: add          
      IL_05ee: ldc.i4       -701558691 // 0xd62f105d
      IL_05f3: add          
      IL_05f4: ldloc.s      blockPtr
      IL_05f6: ldc.i4.5     
      IL_05f7: conv.i       
      IL_05f8: ldc.i4.4     
      IL_05f9: mul          
      IL_05fa: add          
      IL_05fb: ldind.u4     
      IL_05fc: add          
      IL_05fd: stloc.s      'value'

      // [269 17 - 269 57]
      IL_05ff: ldloc.s      b
      IL_0601: ldloc.s      'value'
      IL_0603: ldc.i4.5     
      IL_0604: shl          
      IL_0605: ldloc.s      'value'
      IL_0607: ldc.i4.s     27 // 0x1b
      IL_0609: shr.un       
      IL_060a: or           
      IL_060b: add          
      IL_060c: stloc.s      b

      // [270 17 - 270 27]
      IL_060e: stloc.s      a

      // [273 17 - 273 40]
      IL_0610: ldloc.s      d
      IL_0612: ldloc.s      b
      IL_0614: and          
      IL_0615: ldloc.s      d
      IL_0617: not          
      IL_0618: ldloc.s      c
      IL_061a: and          
      IL_061b: or           
      IL_061c: stloc.s      f

      // [274 17 - 274 27]
      IL_061e: ldloc.s      d

      // [275 17 - 275 23]
      IL_0620: ldloc.s      c
      IL_0622: stloc.s      d

      // [276 17 - 276 23]
      IL_0624: ldloc.s      b
      IL_0626: stloc.s      c

      // [277 17 - 277 74]
      IL_0628: ldloc.s      a
      IL_062a: ldloc.s      f
      IL_062c: add          
      IL_062d: ldc.i4       38016083 // 0x02441453
      IL_0632: add          
      IL_0633: ldloc.s      blockPtr
      IL_0635: ldc.i4.s     10 // 0x0a
      IL_0637: conv.i       
      IL_0638: ldc.i4.4     
      IL_0639: mul          
      IL_063a: add          
      IL_063b: ldind.u4     
      IL_063c: add          
      IL_063d: stloc.s      'value'

      // [278 17 - 278 57]
      IL_063f: ldloc.s      b
      IL_0641: ldloc.s      'value'
      IL_0643: ldc.i4.s     9 // 0x09
      IL_0645: shl          
      IL_0646: ldloc.s      'value'
      IL_0648: ldc.i4.s     23 // 0x17
      IL_064a: shr.un       
      IL_064b: or           
      IL_064c: add          
      IL_064d: stloc.s      b

      // [279 17 - 279 27]
      IL_064f: stloc.s      a

      // [282 17 - 282 40]
      IL_0651: ldloc.s      d
      IL_0653: ldloc.s      b
      IL_0655: and          
      IL_0656: ldloc.s      d
      IL_0658: not          
      IL_0659: ldloc.s      c
      IL_065b: and          
      IL_065c: or           
      IL_065d: stloc.s      f

      // [283 17 - 283 27]
      IL_065f: ldloc.s      d

      // [284 17 - 284 23]
      IL_0661: ldloc.s      c
      IL_0663: stloc.s      d

      // [285 17 - 285 23]
      IL_0665: ldloc.s      b
      IL_0667: stloc.s      c

      // [286 17 - 286 75]
      IL_0669: ldloc.s      a
      IL_066b: ldloc.s      f
      IL_066d: add          
      IL_066e: ldc.i4       -660478335 // 0xd8a1e681
      IL_0673: add          
      IL_0674: ldloc.s      blockPtr
      IL_0676: ldc.i4.s     15 // 0x0f
      IL_0678: conv.i       
      IL_0679: ldc.i4.4     
      IL_067a: mul          
      IL_067b: add          
      IL_067c: ldind.u4     
      IL_067d: add          
      IL_067e: stloc.s      'value'

      // [287 17 - 287 59]
      IL_0680: ldloc.s      b
      IL_0682: ldloc.s      'value'
      IL_0684: ldc.i4.s     14 // 0x0e
      IL_0686: shl          
      IL_0687: ldloc.s      'value'
      IL_0689: ldc.i4.s     18 // 0x12
      IL_068b: shr.un       
      IL_068c: or           
      IL_068d: add          
      IL_068e: stloc.s      b

      // [288 17 - 288 27]
      IL_0690: stloc.s      a

      // [291 17 - 291 40]
      IL_0692: ldloc.s      d
      IL_0694: ldloc.s      b
      IL_0696: and          
      IL_0697: ldloc.s      d
      IL_0699: not          
      IL_069a: ldloc.s      c
      IL_069c: and          
      IL_069d: or           
      IL_069e: stloc.s      f

      // [292 17 - 292 27]
      IL_06a0: ldloc.s      d

      // [293 17 - 293 23]
      IL_06a2: ldloc.s      c
      IL_06a4: stloc.s      d

      // [294 17 - 294 23]
      IL_06a6: ldloc.s      b
      IL_06a8: stloc.s      c

      // [295 17 - 295 75]
      IL_06aa: ldloc.s      a
      IL_06ac: ldloc.s      f
      IL_06ae: add          
      IL_06af: ldc.i4       -405537848 // 0xe7d3fbc8
      IL_06b4: add          
      IL_06b5: ldloc.s      blockPtr
      IL_06b7: ldc.i4.4     
      IL_06b8: conv.i       
      IL_06b9: ldc.i4.4     
      IL_06ba: mul          
      IL_06bb: add          
      IL_06bc: ldind.u4     
      IL_06bd: add          
      IL_06be: stloc.s      'value'

      // [296 17 - 296 59]
      IL_06c0: ldloc.s      b
      IL_06c2: ldloc.s      'value'
      IL_06c4: ldc.i4.s     20 // 0x14
      IL_06c6: shl          
      IL_06c7: ldloc.s      'value'
      IL_06c9: ldc.i4.s     12 // 0x0c
      IL_06cb: shr.un       
      IL_06cc: or           
      IL_06cd: add          
      IL_06ce: stloc.s      b

      // [297 17 - 297 27]
      IL_06d0: stloc.s      a

      // [300 17 - 300 40]
      IL_06d2: ldloc.s      d
      IL_06d4: ldloc.s      b
      IL_06d6: and          
      IL_06d7: ldloc.s      d
      IL_06d9: not          
      IL_06da: ldloc.s      c
      IL_06dc: and          
      IL_06dd: or           
      IL_06de: stloc.s      f

      // [301 17 - 301 27]
      IL_06e0: ldloc.s      d

      // [302 17 - 302 23]
      IL_06e2: ldloc.s      c
      IL_06e4: stloc.s      d

      // [303 17 - 303 23]
      IL_06e6: ldloc.s      b
      IL_06e8: stloc.s      c

      // [304 17 - 304 75]
      IL_06ea: ldloc.s      a
      IL_06ec: ldloc.s      f
      IL_06ee: add          
      IL_06ef: ldc.i4       568446438 // 0x21e1cde6
      IL_06f4: add          
      IL_06f5: ldloc.s      blockPtr
      IL_06f7: ldc.i4.s     9 // 0x09
      IL_06f9: conv.i       
      IL_06fa: ldc.i4.4     
      IL_06fb: mul          
      IL_06fc: add          
      IL_06fd: ldind.u4     
      IL_06fe: add          
      IL_06ff: stloc.s      'value'

      // [305 17 - 305 57]
      IL_0701: ldloc.s      b
      IL_0703: ldloc.s      'value'
      IL_0705: ldc.i4.5     
      IL_0706: shl          
      IL_0707: ldloc.s      'value'
      IL_0709: ldc.i4.s     27 // 0x1b
      IL_070b: shr.un       
      IL_070c: or           
      IL_070d: add          
      IL_070e: stloc.s      b

      // [306 17 - 306 27]
      IL_0710: stloc.s      a

      // [309 17 - 309 40]
      IL_0712: ldloc.s      d
      IL_0714: ldloc.s      b
      IL_0716: and          
      IL_0717: ldloc.s      d
      IL_0719: not          
      IL_071a: ldloc.s      c
      IL_071c: and          
      IL_071d: or           
      IL_071e: stloc.s      f

      // [310 17 - 310 27]
      IL_0720: ldloc.s      d

      // [311 17 - 311 23]
      IL_0722: ldloc.s      c
      IL_0724: stloc.s      d

      // [312 17 - 312 23]
      IL_0726: ldloc.s      b
      IL_0728: stloc.s      c

      // [313 17 - 313 75]
      IL_072a: ldloc.s      a
      IL_072c: ldloc.s      f
      IL_072e: add          
      IL_072f: ldc.i4       -1019803690 // 0xc33707d6
      IL_0734: add          
      IL_0735: ldloc.s      blockPtr
      IL_0737: ldc.i4.s     14 // 0x0e
      IL_0739: conv.i       
      IL_073a: ldc.i4.4     
      IL_073b: mul          
      IL_073c: add          
      IL_073d: ldind.u4     
      IL_073e: add          
      IL_073f: stloc.s      'value'

      // [314 17 - 314 57]
      IL_0741: ldloc.s      b
      IL_0743: ldloc.s      'value'
      IL_0745: ldc.i4.s     9 // 0x09
      IL_0747: shl          
      IL_0748: ldloc.s      'value'
      IL_074a: ldc.i4.s     23 // 0x17
      IL_074c: shr.un       
      IL_074d: or           
      IL_074e: add          
      IL_074f: stloc.s      b

      // [315 17 - 315 27]
      IL_0751: stloc.s      a

      // [318 17 - 318 40]
      IL_0753: ldloc.s      d
      IL_0755: ldloc.s      b
      IL_0757: and          
      IL_0758: ldloc.s      d
      IL_075a: not          
      IL_075b: ldloc.s      c
      IL_075d: and          
      IL_075e: or           
      IL_075f: stloc.s      f

      // [319 17 - 319 27]
      IL_0761: ldloc.s      d

      // [320 17 - 320 23]
      IL_0763: ldloc.s      c
      IL_0765: stloc.s      d

      // [321 17 - 321 23]
      IL_0767: ldloc.s      b
      IL_0769: stloc.s      c

      // [322 17 - 322 75]
      IL_076b: ldloc.s      a
      IL_076d: ldloc.s      f
      IL_076f: add          
      IL_0770: ldc.i4       -187363961 // 0xf4d50d87
      IL_0775: add          
      IL_0776: ldloc.s      blockPtr
      IL_0778: ldc.i4.3     
      IL_0779: conv.i       
      IL_077a: ldc.i4.4     
      IL_077b: mul          
      IL_077c: add          
      IL_077d: ldind.u4     
      IL_077e: add          
      IL_077f: stloc.s      'value'

      // [323 17 - 323 59]
      IL_0781: ldloc.s      b
      IL_0783: ldloc.s      'value'
      IL_0785: ldc.i4.s     14 // 0x0e
      IL_0787: shl          
      IL_0788: ldloc.s      'value'
      IL_078a: ldc.i4.s     18 // 0x12
      IL_078c: shr.un       
      IL_078d: or           
      IL_078e: add          
      IL_078f: stloc.s      b

      // [324 17 - 324 27]
      IL_0791: stloc.s      a

      // [327 17 - 327 40]
      IL_0793: ldloc.s      d
      IL_0795: ldloc.s      b
      IL_0797: and          
      IL_0798: ldloc.s      d
      IL_079a: not          
      IL_079b: ldloc.s      c
      IL_079d: and          
      IL_079e: or           
      IL_079f: stloc.s      f

      // [328 17 - 328 27]
      IL_07a1: ldloc.s      d

      // [329 17 - 329 23]
      IL_07a3: ldloc.s      c
      IL_07a5: stloc.s      d

      // [330 17 - 330 23]
      IL_07a7: ldloc.s      b
      IL_07a9: stloc.s      c

      // [331 17 - 331 75]
      IL_07ab: ldloc.s      a
      IL_07ad: ldloc.s      f
      IL_07af: add          
      IL_07b0: ldc.i4       1163531501 // 0x455a14ed
      IL_07b5: add          
      IL_07b6: ldloc.s      blockPtr
      IL_07b8: ldc.i4.8     
      IL_07b9: conv.i       
      IL_07ba: ldc.i4.4     
      IL_07bb: mul          
      IL_07bc: add          
      IL_07bd: ldind.u4     
      IL_07be: add          
      IL_07bf: stloc.s      'value'

      // [332 17 - 332 59]
      IL_07c1: ldloc.s      b
      IL_07c3: ldloc.s      'value'
      IL_07c5: ldc.i4.s     20 // 0x14
      IL_07c7: shl          
      IL_07c8: ldloc.s      'value'
      IL_07ca: ldc.i4.s     12 // 0x0c
      IL_07cc: shr.un       
      IL_07cd: or           
      IL_07ce: add          
      IL_07cf: stloc.s      b

      // [333 17 - 333 27]
      IL_07d1: stloc.s      a

      // [336 17 - 336 40]
      IL_07d3: ldloc.s      d
      IL_07d5: ldloc.s      b
      IL_07d7: and          
      IL_07d8: ldloc.s      d
      IL_07da: not          
      IL_07db: ldloc.s      c
      IL_07dd: and          
      IL_07de: or           
      IL_07df: stloc.s      f

      // [337 17 - 337 27]
      IL_07e1: ldloc.s      d

      // [338 17 - 338 23]
      IL_07e3: ldloc.s      c
      IL_07e5: stloc.s      d

      // [339 17 - 339 23]
      IL_07e7: ldloc.s      b
      IL_07e9: stloc.s      c

      // [340 17 - 340 75]
      IL_07eb: ldloc.s      a
      IL_07ed: ldloc.s      f
      IL_07ef: add          
      IL_07f0: ldc.i4       -1444681467 // 0xa9e3e905
      IL_07f5: add          
      IL_07f6: ldloc.s      blockPtr
      IL_07f8: ldc.i4.s     13 // 0x0d
      IL_07fa: conv.i       
      IL_07fb: ldc.i4.4     
      IL_07fc: mul          
      IL_07fd: add          
      IL_07fe: ldind.u4     
      IL_07ff: add          
      IL_0800: stloc.s      'value'

      // [341 17 - 341 57]
      IL_0802: ldloc.s      b
      IL_0804: ldloc.s      'value'
      IL_0806: ldc.i4.5     
      IL_0807: shl          
      IL_0808: ldloc.s      'value'
      IL_080a: ldc.i4.s     27 // 0x1b
      IL_080c: shr.un       
      IL_080d: or           
      IL_080e: add          
      IL_080f: stloc.s      b

      // [342 17 - 342 27]
      IL_0811: stloc.s      a

      // [345 17 - 345 40]
      IL_0813: ldloc.s      d
      IL_0815: ldloc.s      b
      IL_0817: and          
      IL_0818: ldloc.s      d
      IL_081a: not          
      IL_081b: ldloc.s      c
      IL_081d: and          
      IL_081e: or           
      IL_081f: stloc.s      f

      // [346 17 - 346 27]
      IL_0821: ldloc.s      d

      // [347 17 - 347 23]
      IL_0823: ldloc.s      c
      IL_0825: stloc.s      d

      // [348 17 - 348 23]
      IL_0827: ldloc.s      b
      IL_0829: stloc.s      c

      // [349 17 - 349 75]
      IL_082b: ldloc.s      a
      IL_082d: ldloc.s      f
      IL_082f: add          
      IL_0830: ldc.i4       -51403784 // 0xfcefa3f8
      IL_0835: add          
      IL_0836: ldloc.s      blockPtr
      IL_0838: ldc.i4.2     
      IL_0839: conv.i       
      IL_083a: ldc.i4.4     
      IL_083b: mul          
      IL_083c: add          
      IL_083d: ldind.u4     
      IL_083e: add          
      IL_083f: stloc.s      'value'

      // [350 17 - 350 57]
      IL_0841: ldloc.s      b
      IL_0843: ldloc.s      'value'
      IL_0845: ldc.i4.s     9 // 0x09
      IL_0847: shl          
      IL_0848: ldloc.s      'value'
      IL_084a: ldc.i4.s     23 // 0x17
      IL_084c: shr.un       
      IL_084d: or           
      IL_084e: add          
      IL_084f: stloc.s      b

      // [351 17 - 351 27]
      IL_0851: stloc.s      a

      // [354 17 - 354 40]
      IL_0853: ldloc.s      d
      IL_0855: ldloc.s      b
      IL_0857: and          
      IL_0858: ldloc.s      d
      IL_085a: not          
      IL_085b: ldloc.s      c
      IL_085d: and          
      IL_085e: or           
      IL_085f: stloc.s      f

      // [355 17 - 355 27]
      IL_0861: ldloc.s      d

      // [356 17 - 356 23]
      IL_0863: ldloc.s      c
      IL_0865: stloc.s      d

      // [357 17 - 357 23]
      IL_0867: ldloc.s      b
      IL_0869: stloc.s      c

      // [358 17 - 358 75]
      IL_086b: ldloc.s      a
      IL_086d: ldloc.s      f
      IL_086f: add          
      IL_0870: ldc.i4       1735328473 // 0x676f02d9
      IL_0875: add          
      IL_0876: ldloc.s      blockPtr
      IL_0878: ldc.i4.7     
      IL_0879: conv.i       
      IL_087a: ldc.i4.4     
      IL_087b: mul          
      IL_087c: add          
      IL_087d: ldind.u4     
      IL_087e: add          
      IL_087f: stloc.s      'value'

      // [359 17 - 359 59]
      IL_0881: ldloc.s      b
      IL_0883: ldloc.s      'value'
      IL_0885: ldc.i4.s     14 // 0x0e
      IL_0887: shl          
      IL_0888: ldloc.s      'value'
      IL_088a: ldc.i4.s     18 // 0x12
      IL_088c: shr.un       
      IL_088d: or           
      IL_088e: add          
      IL_088f: stloc.s      b

      // [360 17 - 360 27]
      IL_0891: stloc.s      a

      // [363 17 - 363 40]
      IL_0893: ldloc.s      d
      IL_0895: ldloc.s      b
      IL_0897: and          
      IL_0898: ldloc.s      d
      IL_089a: not          
      IL_089b: ldloc.s      c
      IL_089d: and          
      IL_089e: or           
      IL_089f: stloc.s      f

      // [364 17 - 364 27]
      IL_08a1: ldloc.s      d

      // [365 17 - 365 23]
      IL_08a3: ldloc.s      c
      IL_08a5: stloc.s      d

      // [366 17 - 366 23]
      IL_08a7: ldloc.s      b
      IL_08a9: stloc.s      c

      // [367 17 - 367 75]
      IL_08ab: ldloc.s      a
      IL_08ad: ldloc.s      f
      IL_08af: add          
      IL_08b0: ldc.i4       -1926607734 // 0x8d2a4c8a
      IL_08b5: add          
      IL_08b6: ldloc.s      blockPtr
      IL_08b8: ldc.i4.s     12 // 0x0c
      IL_08ba: conv.i       
      IL_08bb: ldc.i4.4     
      IL_08bc: mul          
      IL_08bd: add          
      IL_08be: ldind.u4     
      IL_08bf: add          
      IL_08c0: stloc.s      'value'

      // [368 17 - 368 59]
      IL_08c2: ldloc.s      b
      IL_08c4: ldloc.s      'value'
      IL_08c6: ldc.i4.s     20 // 0x14
      IL_08c8: shl          
      IL_08c9: ldloc.s      'value'
      IL_08cb: ldc.i4.s     12 // 0x0c
      IL_08cd: shr.un       
      IL_08ce: or           
      IL_08cf: add          
      IL_08d0: stloc.s      b

      // [369 17 - 369 27]
      IL_08d2: stloc.s      a

      // [372 17 - 372 31]
      IL_08d4: ldloc.s      b
      IL_08d6: ldloc.s      c
      IL_08d8: xor          
      IL_08d9: ldloc.s      d
      IL_08db: xor          
      IL_08dc: stloc.s      f

      // [373 17 - 373 27]
      IL_08de: ldloc.s      d

      // [374 17 - 374 23]
      IL_08e0: ldloc.s      c
      IL_08e2: stloc.s      d

      // [375 17 - 375 23]
      IL_08e4: ldloc.s      b
      IL_08e6: stloc.s      c

      // [376 17 - 376 75]
      IL_08e8: ldloc.s      a
      IL_08ea: ldloc.s      f
      IL_08ec: add          
      IL_08ed: ldc.i4       -378558 // 0xfffa3942
      IL_08f2: add          
      IL_08f3: ldloc.s      blockPtr
      IL_08f5: ldc.i4.5     
      IL_08f6: conv.i       
      IL_08f7: ldc.i4.4     
      IL_08f8: mul          
      IL_08f9: add          
      IL_08fa: ldind.u4     
      IL_08fb: add          
      IL_08fc: stloc.s      'value'

      // [377 17 - 377 57]
      IL_08fe: ldloc.s      b
      IL_0900: ldloc.s      'value'
      IL_0902: ldc.i4.4     
      IL_0903: shl          
      IL_0904: ldloc.s      'value'
      IL_0906: ldc.i4.s     28 // 0x1c
      IL_0908: shr.un       
      IL_0909: or           
      IL_090a: add          
      IL_090b: stloc.s      b

      // [378 17 - 378 27]
      IL_090d: stloc.s      a

      // [381 17 - 381 31]
      IL_090f: ldloc.s      b
      IL_0911: ldloc.s      c
      IL_0913: xor          
      IL_0914: ldloc.s      d
      IL_0916: xor          
      IL_0917: stloc.s      f

      // [382 17 - 382 27]
      IL_0919: ldloc.s      d

      // [383 17 - 383 23]
      IL_091b: ldloc.s      c
      IL_091d: stloc.s      d

      // [384 17 - 384 23]
      IL_091f: ldloc.s      b
      IL_0921: stloc.s      c

      // [385 17 - 385 75]
      IL_0923: ldloc.s      a
      IL_0925: ldloc.s      f
      IL_0927: add          
      IL_0928: ldc.i4       -2022574463 // 0x8771f681
      IL_092d: add          
      IL_092e: ldloc.s      blockPtr
      IL_0930: ldc.i4.8     
      IL_0931: conv.i       
      IL_0932: ldc.i4.4     
      IL_0933: mul          
      IL_0934: add          
      IL_0935: ldind.u4     
      IL_0936: add          
      IL_0937: stloc.s      'value'

      // [386 17 - 386 59]
      IL_0939: ldloc.s      b
      IL_093b: ldloc.s      'value'
      IL_093d: ldc.i4.s     11 // 0x0b
      IL_093f: shl          
      IL_0940: ldloc.s      'value'
      IL_0942: ldc.i4.s     21 // 0x15
      IL_0944: shr.un       
      IL_0945: or           
      IL_0946: add          
      IL_0947: stloc.s      b

      // [387 17 - 387 27]
      IL_0949: stloc.s      a

      // [390 17 - 390 31]
      IL_094b: ldloc.s      b
      IL_094d: ldloc.s      c
      IL_094f: xor          
      IL_0950: ldloc.s      d
      IL_0952: xor          
      IL_0953: stloc.s      f

      // [391 17 - 391 27]
      IL_0955: ldloc.s      d

      // [392 17 - 392 23]
      IL_0957: ldloc.s      c
      IL_0959: stloc.s      d

      // [393 17 - 393 23]
      IL_095b: ldloc.s      b
      IL_095d: stloc.s      c

      // [394 17 - 394 75]
      IL_095f: ldloc.s      a
      IL_0961: ldloc.s      f
      IL_0963: add          
      IL_0964: ldc.i4       1839030562 // 0x6d9d6122
      IL_0969: add          
      IL_096a: ldloc.s      blockPtr
      IL_096c: ldc.i4.s     11 // 0x0b
      IL_096e: conv.i       
      IL_096f: ldc.i4.4     
      IL_0970: mul          
      IL_0971: add          
      IL_0972: ldind.u4     
      IL_0973: add          
      IL_0974: stloc.s      'value'

      // [395 17 - 395 59]
      IL_0976: ldloc.s      b
      IL_0978: ldloc.s      'value'
      IL_097a: ldc.i4.s     16 // 0x10
      IL_097c: shl          
      IL_097d: ldloc.s      'value'
      IL_097f: ldc.i4.s     16 // 0x10
      IL_0981: shr.un       
      IL_0982: or           
      IL_0983: add          
      IL_0984: stloc.s      b

      // [396 17 - 396 27]
      IL_0986: stloc.s      a

      // [399 17 - 399 31]
      IL_0988: ldloc.s      b
      IL_098a: ldloc.s      c
      IL_098c: xor          
      IL_098d: ldloc.s      d
      IL_098f: xor          
      IL_0990: stloc.s      f

      // [400 17 - 400 27]
      IL_0992: ldloc.s      d

      // [401 17 - 401 23]
      IL_0994: ldloc.s      c
      IL_0996: stloc.s      d

      // [402 17 - 402 23]
      IL_0998: ldloc.s      b
      IL_099a: stloc.s      c

      // [403 17 - 403 75]
      IL_099c: ldloc.s      a
      IL_099e: ldloc.s      f
      IL_09a0: add          
      IL_09a1: ldc.i4       -35309556 // 0xfde5380c
      IL_09a6: add          
      IL_09a7: ldloc.s      blockPtr
      IL_09a9: ldc.i4.s     14 // 0x0e
      IL_09ab: conv.i       
      IL_09ac: ldc.i4.4     
      IL_09ad: mul          
      IL_09ae: add          
      IL_09af: ldind.u4     
      IL_09b0: add          
      IL_09b1: stloc.s      'value'

      // [404 17 - 404 59]
      IL_09b3: ldloc.s      b
      IL_09b5: ldloc.s      'value'
      IL_09b7: ldc.i4.s     23 // 0x17
      IL_09b9: shl          
      IL_09ba: ldloc.s      'value'
      IL_09bc: ldc.i4.s     9 // 0x09
      IL_09be: shr.un       
      IL_09bf: or           
      IL_09c0: add          
      IL_09c1: stloc.s      b

      // [405 17 - 405 27]
      IL_09c3: stloc.s      a

      // [408 17 - 408 31]
      IL_09c5: ldloc.s      b
      IL_09c7: ldloc.s      c
      IL_09c9: xor          
      IL_09ca: ldloc.s      d
      IL_09cc: xor          
      IL_09cd: stloc.s      f

      // [409 17 - 409 27]
      IL_09cf: ldloc.s      d

      // [410 17 - 410 23]
      IL_09d1: ldloc.s      c
      IL_09d3: stloc.s      d

      // [411 17 - 411 23]
      IL_09d5: ldloc.s      b
      IL_09d7: stloc.s      c

      // [412 17 - 412 75]
      IL_09d9: ldloc.s      a
      IL_09db: ldloc.s      f
      IL_09dd: add          
      IL_09de: ldc.i4       -1530992060 // 0xa4beea44
      IL_09e3: add          
      IL_09e4: ldloc.s      blockPtr
      IL_09e6: ldc.i4.4     
      IL_09e7: add          
      IL_09e8: ldind.u4     
      IL_09e9: add          
      IL_09ea: stloc.s      'value'

      // [413 17 - 413 57]
      IL_09ec: ldloc.s      b
      IL_09ee: ldloc.s      'value'
      IL_09f0: ldc.i4.4     
      IL_09f1: shl          
      IL_09f2: ldloc.s      'value'
      IL_09f4: ldc.i4.s     28 // 0x1c
      IL_09f6: shr.un       
      IL_09f7: or           
      IL_09f8: add          
      IL_09f9: stloc.s      b

      // [414 17 - 414 27]
      IL_09fb: stloc.s      a

      // [417 17 - 417 31]
      IL_09fd: ldloc.s      b
      IL_09ff: ldloc.s      c
      IL_0a01: xor          
      IL_0a02: ldloc.s      d
      IL_0a04: xor          
      IL_0a05: stloc.s      f

      // [418 17 - 418 27]
      IL_0a07: ldloc.s      d

      // [419 17 - 419 23]
      IL_0a09: ldloc.s      c
      IL_0a0b: stloc.s      d

      // [420 17 - 420 23]
      IL_0a0d: ldloc.s      b
      IL_0a0f: stloc.s      c

      // [421 17 - 421 75]
      IL_0a11: ldloc.s      a
      IL_0a13: ldloc.s      f
      IL_0a15: add          
      IL_0a16: ldc.i4       1272893353 // 0x4bdecfa9
      IL_0a1b: add          
      IL_0a1c: ldloc.s      blockPtr
      IL_0a1e: ldc.i4.4     
      IL_0a1f: conv.i       
      IL_0a20: ldc.i4.4     
      IL_0a21: mul          
      IL_0a22: add          
      IL_0a23: ldind.u4     
      IL_0a24: add          
      IL_0a25: stloc.s      'value'

      // [422 17 - 422 59]
      IL_0a27: ldloc.s      b
      IL_0a29: ldloc.s      'value'
      IL_0a2b: ldc.i4.s     11 // 0x0b
      IL_0a2d: shl          
      IL_0a2e: ldloc.s      'value'
      IL_0a30: ldc.i4.s     21 // 0x15
      IL_0a32: shr.un       
      IL_0a33: or           
      IL_0a34: add          
      IL_0a35: stloc.s      b

      // [423 17 - 423 27]
      IL_0a37: stloc.s      a

      // [426 17 - 426 31]
      IL_0a39: ldloc.s      b
      IL_0a3b: ldloc.s      c
      IL_0a3d: xor          
      IL_0a3e: ldloc.s      d
      IL_0a40: xor          
      IL_0a41: stloc.s      f

      // [427 17 - 427 27]
      IL_0a43: ldloc.s      d

      // [428 17 - 428 23]
      IL_0a45: ldloc.s      c
      IL_0a47: stloc.s      d

      // [429 17 - 429 23]
      IL_0a49: ldloc.s      b
      IL_0a4b: stloc.s      c

      // [430 17 - 430 75]
      IL_0a4d: ldloc.s      a
      IL_0a4f: ldloc.s      f
      IL_0a51: add          
      IL_0a52: ldc.i4       -155497632 // 0xf6bb4b60
      IL_0a57: add          
      IL_0a58: ldloc.s      blockPtr
      IL_0a5a: ldc.i4.7     
      IL_0a5b: conv.i       
      IL_0a5c: ldc.i4.4     
      IL_0a5d: mul          
      IL_0a5e: add          
      IL_0a5f: ldind.u4     
      IL_0a60: add          
      IL_0a61: stloc.s      'value'

      // [431 17 - 431 59]
      IL_0a63: ldloc.s      b
      IL_0a65: ldloc.s      'value'
      IL_0a67: ldc.i4.s     16 // 0x10
      IL_0a69: shl          
      IL_0a6a: ldloc.s      'value'
      IL_0a6c: ldc.i4.s     16 // 0x10
      IL_0a6e: shr.un       
      IL_0a6f: or           
      IL_0a70: add          
      IL_0a71: stloc.s      b

      // [432 17 - 432 27]
      IL_0a73: stloc.s      a

      // [435 17 - 435 31]
      IL_0a75: ldloc.s      b
      IL_0a77: ldloc.s      c
      IL_0a79: xor          
      IL_0a7a: ldloc.s      d
      IL_0a7c: xor          
      IL_0a7d: stloc.s      f

      // [436 17 - 436 27]
      IL_0a7f: ldloc.s      d

      // [437 17 - 437 23]
      IL_0a81: ldloc.s      c
      IL_0a83: stloc.s      d

      // [438 17 - 438 23]
      IL_0a85: ldloc.s      b
      IL_0a87: stloc.s      c

      // [439 17 - 439 75]
      IL_0a89: ldloc.s      a
      IL_0a8b: ldloc.s      f
      IL_0a8d: add          
      IL_0a8e: ldc.i4       -1094730640 // 0xbebfbc70
      IL_0a93: add          
      IL_0a94: ldloc.s      blockPtr
      IL_0a96: ldc.i4.s     10 // 0x0a
      IL_0a98: conv.i       
      IL_0a99: ldc.i4.4     
      IL_0a9a: mul          
      IL_0a9b: add          
      IL_0a9c: ldind.u4     
      IL_0a9d: add          
      IL_0a9e: stloc.s      'value'

      // [440 17 - 440 59]
      IL_0aa0: ldloc.s      b
      IL_0aa2: ldloc.s      'value'
      IL_0aa4: ldc.i4.s     23 // 0x17
      IL_0aa6: shl          
      IL_0aa7: ldloc.s      'value'
      IL_0aa9: ldc.i4.s     9 // 0x09
      IL_0aab: shr.un       
      IL_0aac: or           
      IL_0aad: add          
      IL_0aae: stloc.s      b

      // [441 17 - 441 27]
      IL_0ab0: stloc.s      a

      // [444 17 - 444 31]
      IL_0ab2: ldloc.s      b
      IL_0ab4: ldloc.s      c
      IL_0ab6: xor          
      IL_0ab7: ldloc.s      d
      IL_0ab9: xor          
      IL_0aba: stloc.s      f

      // [445 17 - 445 27]
      IL_0abc: ldloc.s      d

      // [446 17 - 446 23]
      IL_0abe: ldloc.s      c
      IL_0ac0: stloc.s      d

      // [447 17 - 447 23]
      IL_0ac2: ldloc.s      b
      IL_0ac4: stloc.s      c

      // [448 17 - 448 75]
      IL_0ac6: ldloc.s      a
      IL_0ac8: ldloc.s      f
      IL_0aca: add          
      IL_0acb: ldc.i4       681279174 // 0x289b7ec6
      IL_0ad0: add          
      IL_0ad1: ldloc.s      blockPtr
      IL_0ad3: ldc.i4.s     13 // 0x0d
      IL_0ad5: conv.i       
      IL_0ad6: ldc.i4.4     
      IL_0ad7: mul          
      IL_0ad8: add          
      IL_0ad9: ldind.u4     
      IL_0ada: add          
      IL_0adb: stloc.s      'value'

      // [449 17 - 449 57]
      IL_0add: ldloc.s      b
      IL_0adf: ldloc.s      'value'
      IL_0ae1: ldc.i4.4     
      IL_0ae2: shl          
      IL_0ae3: ldloc.s      'value'
      IL_0ae5: ldc.i4.s     28 // 0x1c
      IL_0ae7: shr.un       
      IL_0ae8: or           
      IL_0ae9: add          
      IL_0aea: stloc.s      b

      // [450 17 - 450 27]
      IL_0aec: stloc.s      a

      // [453 17 - 453 31]
      IL_0aee: ldloc.s      b
      IL_0af0: ldloc.s      c
      IL_0af2: xor          
      IL_0af3: ldloc.s      d
      IL_0af5: xor          
      IL_0af6: stloc.s      f

      // [454 17 - 454 27]
      IL_0af8: ldloc.s      d

      // [455 17 - 455 23]
      IL_0afa: ldloc.s      c
      IL_0afc: stloc.s      d

      // [456 17 - 456 23]
      IL_0afe: ldloc.s      b
      IL_0b00: stloc.s      c

      // [457 17 - 457 75]
      IL_0b02: ldloc.s      a
      IL_0b04: ldloc.s      f
      IL_0b06: add          
      IL_0b07: ldc.i4       -358537222 // 0xeaa127fa
      IL_0b0c: add          
      IL_0b0d: ldloc.s      blockPtr
      IL_0b0f: ldind.u4     
      IL_0b10: add          
      IL_0b11: stloc.s      'value'

      // [458 17 - 458 59]
      IL_0b13: ldloc.s      b
      IL_0b15: ldloc.s      'value'
      IL_0b17: ldc.i4.s     11 // 0x0b
      IL_0b19: shl          
      IL_0b1a: ldloc.s      'value'
      IL_0b1c: ldc.i4.s     21 // 0x15
      IL_0b1e: shr.un       
      IL_0b1f: or           
      IL_0b20: add          
      IL_0b21: stloc.s      b

      // [459 17 - 459 27]
      IL_0b23: stloc.s      a

      // [462 17 - 462 31]
      IL_0b25: ldloc.s      b
      IL_0b27: ldloc.s      c
      IL_0b29: xor          
      IL_0b2a: ldloc.s      d
      IL_0b2c: xor          
      IL_0b2d: stloc.s      f

      // [463 17 - 463 27]
      IL_0b2f: ldloc.s      d

      // [464 17 - 464 23]
      IL_0b31: ldloc.s      c
      IL_0b33: stloc.s      d

      // [465 17 - 465 23]
      IL_0b35: ldloc.s      b
      IL_0b37: stloc.s      c

      // [466 17 - 466 75]
      IL_0b39: ldloc.s      a
      IL_0b3b: ldloc.s      f
      IL_0b3d: add          
      IL_0b3e: ldc.i4       -722521979 // 0xd4ef3085
      IL_0b43: add          
      IL_0b44: ldloc.s      blockPtr
      IL_0b46: ldc.i4.3     
      IL_0b47: conv.i       
      IL_0b48: ldc.i4.4     
      IL_0b49: mul          
      IL_0b4a: add          
      IL_0b4b: ldind.u4     
      IL_0b4c: add          
      IL_0b4d: stloc.s      'value'

      // [467 17 - 467 59]
      IL_0b4f: ldloc.s      b
      IL_0b51: ldloc.s      'value'
      IL_0b53: ldc.i4.s     16 // 0x10
      IL_0b55: shl          
      IL_0b56: ldloc.s      'value'
      IL_0b58: ldc.i4.s     16 // 0x10
      IL_0b5a: shr.un       
      IL_0b5b: or           
      IL_0b5c: add          
      IL_0b5d: stloc.s      b

      // [468 17 - 468 27]
      IL_0b5f: stloc.s      a

      // [471 17 - 471 31]
      IL_0b61: ldloc.s      b
      IL_0b63: ldloc.s      c
      IL_0b65: xor          
      IL_0b66: ldloc.s      d
      IL_0b68: xor          
      IL_0b69: stloc.s      f

      // [472 17 - 472 27]
      IL_0b6b: ldloc.s      d

      // [473 17 - 473 23]
      IL_0b6d: ldloc.s      c
      IL_0b6f: stloc.s      d

      // [474 17 - 474 23]
      IL_0b71: ldloc.s      b
      IL_0b73: stloc.s      c

      // [475 17 - 475 74]
      IL_0b75: ldloc.s      a
      IL_0b77: ldloc.s      f
      IL_0b79: add          
      IL_0b7a: ldc.i4       76029189 // 0x04881d05
      IL_0b7f: add          
      IL_0b80: ldloc.s      blockPtr
      IL_0b82: ldc.i4.6     
      IL_0b83: conv.i       
      IL_0b84: ldc.i4.4     
      IL_0b85: mul          
      IL_0b86: add          
      IL_0b87: ldind.u4     
      IL_0b88: add          
      IL_0b89: stloc.s      'value'

      // [476 17 - 476 59]
      IL_0b8b: ldloc.s      b
      IL_0b8d: ldloc.s      'value'
      IL_0b8f: ldc.i4.s     23 // 0x17
      IL_0b91: shl          
      IL_0b92: ldloc.s      'value'
      IL_0b94: ldc.i4.s     9 // 0x09
      IL_0b96: shr.un       
      IL_0b97: or           
      IL_0b98: add          
      IL_0b99: stloc.s      b

      // [477 17 - 477 27]
      IL_0b9b: stloc.s      a

      // [480 17 - 480 31]
      IL_0b9d: ldloc.s      b
      IL_0b9f: ldloc.s      c
      IL_0ba1: xor          
      IL_0ba2: ldloc.s      d
      IL_0ba4: xor          
      IL_0ba5: stloc.s      f

      // [481 17 - 481 27]
      IL_0ba7: ldloc.s      d

      // [482 17 - 482 23]
      IL_0ba9: ldloc.s      c
      IL_0bab: stloc.s      d

      // [483 17 - 483 23]
      IL_0bad: ldloc.s      b
      IL_0baf: stloc.s      c

      // [484 17 - 484 75]
      IL_0bb1: ldloc.s      a
      IL_0bb3: ldloc.s      f
      IL_0bb5: add          
      IL_0bb6: ldc.i4       -640364487 // 0xd9d4d039
      IL_0bbb: add          
      IL_0bbc: ldloc.s      blockPtr
      IL_0bbe: ldc.i4.s     9 // 0x09
      IL_0bc0: conv.i       
      IL_0bc1: ldc.i4.4     
      IL_0bc2: mul          
      IL_0bc3: add          
      IL_0bc4: ldind.u4     
      IL_0bc5: add          
      IL_0bc6: stloc.s      'value'

      // [485 17 - 485 57]
      IL_0bc8: ldloc.s      b
      IL_0bca: ldloc.s      'value'
      IL_0bcc: ldc.i4.4     
      IL_0bcd: shl          
      IL_0bce: ldloc.s      'value'
      IL_0bd0: ldc.i4.s     28 // 0x1c
      IL_0bd2: shr.un       
      IL_0bd3: or           
      IL_0bd4: add          
      IL_0bd5: stloc.s      b

      // [486 17 - 486 27]
      IL_0bd7: stloc.s      a

      // [489 17 - 489 31]
      IL_0bd9: ldloc.s      b
      IL_0bdb: ldloc.s      c
      IL_0bdd: xor          
      IL_0bde: ldloc.s      d
      IL_0be0: xor          
      IL_0be1: stloc.s      f

      // [490 17 - 490 27]
      IL_0be3: ldloc.s      d

      // [491 17 - 491 23]
      IL_0be5: ldloc.s      c
      IL_0be7: stloc.s      d

      // [492 17 - 492 23]
      IL_0be9: ldloc.s      b
      IL_0beb: stloc.s      c

      // [493 17 - 493 75]
      IL_0bed: ldloc.s      a
      IL_0bef: ldloc.s      f
      IL_0bf1: add          
      IL_0bf2: ldc.i4       -421815835 // 0xe6db99e5
      IL_0bf7: add          
      IL_0bf8: ldloc.s      blockPtr
      IL_0bfa: ldc.i4.s     12 // 0x0c
      IL_0bfc: conv.i       
      IL_0bfd: ldc.i4.4     
      IL_0bfe: mul          
      IL_0bff: add          
      IL_0c00: ldind.u4     
      IL_0c01: add          
      IL_0c02: stloc.s      'value'

      // [494 17 - 494 59]
      IL_0c04: ldloc.s      b
      IL_0c06: ldloc.s      'value'
      IL_0c08: ldc.i4.s     11 // 0x0b
      IL_0c0a: shl          
      IL_0c0b: ldloc.s      'value'
      IL_0c0d: ldc.i4.s     21 // 0x15
      IL_0c0f: shr.un       
      IL_0c10: or           
      IL_0c11: add          
      IL_0c12: stloc.s      b

      // [495 17 - 495 27]
      IL_0c14: stloc.s      a

      // [498 17 - 498 31]
      IL_0c16: ldloc.s      b
      IL_0c18: ldloc.s      c
      IL_0c1a: xor          
      IL_0c1b: ldloc.s      d
      IL_0c1d: xor          
      IL_0c1e: stloc.s      f

      // [499 17 - 499 27]
      IL_0c20: ldloc.s      d

      // [500 17 - 500 23]
      IL_0c22: ldloc.s      c
      IL_0c24: stloc.s      d

      // [501 17 - 501 23]
      IL_0c26: ldloc.s      b
      IL_0c28: stloc.s      c

      // [502 17 - 502 75]
      IL_0c2a: ldloc.s      a
      IL_0c2c: ldloc.s      f
      IL_0c2e: add          
      IL_0c2f: ldc.i4       530742520 // 0x1fa27cf8
      IL_0c34: add          
      IL_0c35: ldloc.s      blockPtr
      IL_0c37: ldc.i4.s     15 // 0x0f
      IL_0c39: conv.i       
      IL_0c3a: ldc.i4.4     
      IL_0c3b: mul          
      IL_0c3c: add          
      IL_0c3d: ldind.u4     
      IL_0c3e: add          
      IL_0c3f: stloc.s      'value'

      // [503 17 - 503 59]
      IL_0c41: ldloc.s      b
      IL_0c43: ldloc.s      'value'
      IL_0c45: ldc.i4.s     16 // 0x10
      IL_0c47: shl          
      IL_0c48: ldloc.s      'value'
      IL_0c4a: ldc.i4.s     16 // 0x10
      IL_0c4c: shr.un       
      IL_0c4d: or           
      IL_0c4e: add          
      IL_0c4f: stloc.s      b

      // [504 17 - 504 27]
      IL_0c51: stloc.s      a

      // [507 17 - 507 31]
      IL_0c53: ldloc.s      b
      IL_0c55: ldloc.s      c
      IL_0c57: xor          
      IL_0c58: ldloc.s      d
      IL_0c5a: xor          
      IL_0c5b: stloc.s      f

      // [508 17 - 508 27]
      IL_0c5d: ldloc.s      d

      // [509 17 - 509 23]
      IL_0c5f: ldloc.s      c
      IL_0c61: stloc.s      d

      // [510 17 - 510 23]
      IL_0c63: ldloc.s      b
      IL_0c65: stloc.s      c

      // [511 17 - 511 75]
      IL_0c67: ldloc.s      a
      IL_0c69: ldloc.s      f
      IL_0c6b: add          
      IL_0c6c: ldc.i4       -995338651 // 0xc4ac5665
      IL_0c71: add          
      IL_0c72: ldloc.s      blockPtr
      IL_0c74: ldc.i4.2     
      IL_0c75: conv.i       
      IL_0c76: ldc.i4.4     
      IL_0c77: mul          
      IL_0c78: add          
      IL_0c79: ldind.u4     
      IL_0c7a: add          
      IL_0c7b: stloc.s      'value'

      // [512 17 - 512 59]
      IL_0c7d: ldloc.s      b
      IL_0c7f: ldloc.s      'value'
      IL_0c81: ldc.i4.s     23 // 0x17
      IL_0c83: shl          
      IL_0c84: ldloc.s      'value'
      IL_0c86: ldc.i4.s     9 // 0x09
      IL_0c88: shr.un       
      IL_0c89: or           
      IL_0c8a: add          
      IL_0c8b: stloc.s      b

      // [513 17 - 513 27]
      IL_0c8d: stloc.s      a

      // [516 17 - 516 34]
      IL_0c8f: ldloc.s      c
      IL_0c91: ldloc.s      b
      IL_0c93: ldloc.s      d
      IL_0c95: not          
      IL_0c96: or           
      IL_0c97: xor          
      IL_0c98: stloc.s      f

      // [517 17 - 517 27]
      IL_0c9a: ldloc.s      d

      // [518 17 - 518 23]
      IL_0c9c: ldloc.s      c
      IL_0c9e: stloc.s      d

      // [519 17 - 519 23]
      IL_0ca0: ldloc.s      b
      IL_0ca2: stloc.s      c

      // [520 17 - 520 71]
      IL_0ca4: ldloc.s      a
      IL_0ca6: ldloc.s      f
      IL_0ca8: add          
      IL_0ca9: ldc.i4       -198630844 // 0xf4292244
      IL_0cae: add          
      IL_0caf: ldloc.s      blockPtr
      IL_0cb1: ldind.u4     
      IL_0cb2: add          
      IL_0cb3: stloc.s      'value'

      // [521 17 - 521 57]
      IL_0cb5: ldloc.s      b
      IL_0cb7: ldloc.s      'value'
      IL_0cb9: ldc.i4.6     
      IL_0cba: shl          
      IL_0cbb: ldloc.s      'value'
      IL_0cbd: ldc.i4.s     26 // 0x1a
      IL_0cbf: shr.un       
      IL_0cc0: or           
      IL_0cc1: add          
      IL_0cc2: stloc.s      b

      // [522 17 - 522 27]
      IL_0cc4: stloc.s      a

      // [525 17 - 525 34]
      IL_0cc6: ldloc.s      c
      IL_0cc8: ldloc.s      b
      IL_0cca: ldloc.s      d
      IL_0ccc: not          
      IL_0ccd: or           
      IL_0cce: xor          
      IL_0ccf: stloc.s      f

      // [526 17 - 526 27]
      IL_0cd1: ldloc.s      d

      // [527 17 - 527 23]
      IL_0cd3: ldloc.s      c
      IL_0cd5: stloc.s      d

      // [528 17 - 528 23]
      IL_0cd7: ldloc.s      b
      IL_0cd9: stloc.s      c

      // [529 17 - 529 71]
      IL_0cdb: ldloc.s      a
      IL_0cdd: ldloc.s      f
      IL_0cdf: add          
      IL_0ce0: ldc.i4       1126891415 // 0x432aff97
      IL_0ce5: add          
      IL_0ce6: ldloc.s      blockPtr
      IL_0ce8: ldc.i4.7     
      IL_0ce9: conv.i       
      IL_0cea: ldc.i4.4     
      IL_0ceb: mul          
      IL_0cec: add          
      IL_0ced: ldind.u4     
      IL_0cee: add          
      IL_0cef: stloc.s      'value'

      // [530 17 - 530 59]
      IL_0cf1: ldloc.s      b
      IL_0cf3: ldloc.s      'value'
      IL_0cf5: ldc.i4.s     10 // 0x0a
      IL_0cf7: shl          
      IL_0cf8: ldloc.s      'value'
      IL_0cfa: ldc.i4.s     22 // 0x16
      IL_0cfc: shr.un       
      IL_0cfd: or           
      IL_0cfe: add          
      IL_0cff: stloc.s      b

      // [531 17 - 531 27]
      IL_0d01: stloc.s      a

      // [534 17 - 534 34]
      IL_0d03: ldloc.s      c
      IL_0d05: ldloc.s      b
      IL_0d07: ldloc.s      d
      IL_0d09: not          
      IL_0d0a: or           
      IL_0d0b: xor          
      IL_0d0c: stloc.s      f

      // [535 17 - 535 27]
      IL_0d0e: ldloc.s      d

      // [536 17 - 536 23]
      IL_0d10: ldloc.s      c
      IL_0d12: stloc.s      d

      // [537 17 - 537 23]
      IL_0d14: ldloc.s      b
      IL_0d16: stloc.s      c

      // [538 17 - 538 71]
      IL_0d18: ldloc.s      a
      IL_0d1a: ldloc.s      f
      IL_0d1c: add          
      IL_0d1d: ldc.i4       -1416354905 // 0xab9423a7
      IL_0d22: add          
      IL_0d23: ldloc.s      blockPtr
      IL_0d25: ldc.i4.s     14 // 0x0e
      IL_0d27: conv.i       
      IL_0d28: ldc.i4.4     
      IL_0d29: mul          
      IL_0d2a: add          
      IL_0d2b: ldind.u4     
      IL_0d2c: add          
      IL_0d2d: stloc.s      'value'

      // [539 17 - 539 59]
      IL_0d2f: ldloc.s      b
      IL_0d31: ldloc.s      'value'
      IL_0d33: ldc.i4.s     15 // 0x0f
      IL_0d35: shl          
      IL_0d36: ldloc.s      'value'
      IL_0d38: ldc.i4.s     17 // 0x11
      IL_0d3a: shr.un       
      IL_0d3b: or           
      IL_0d3c: add          
      IL_0d3d: stloc.s      b

      // [540 17 - 540 27]
      IL_0d3f: stloc.s      a

      // [543 17 - 543 34]
      IL_0d41: ldloc.s      c
      IL_0d43: ldloc.s      b
      IL_0d45: ldloc.s      d
      IL_0d47: not          
      IL_0d48: or           
      IL_0d49: xor          
      IL_0d4a: stloc.s      f

      // [544 17 - 544 27]
      IL_0d4c: ldloc.s      d

      // [545 17 - 545 23]
      IL_0d4e: ldloc.s      c
      IL_0d50: stloc.s      d

      // [546 17 - 546 23]
      IL_0d52: ldloc.s      b
      IL_0d54: stloc.s      c

      // [547 17 - 547 71]
      IL_0d56: ldloc.s      a
      IL_0d58: ldloc.s      f
      IL_0d5a: add          
      IL_0d5b: ldc.i4       -57434055 // 0xfc93a039
      IL_0d60: add          
      IL_0d61: ldloc.s      blockPtr
      IL_0d63: ldc.i4.5     
      IL_0d64: conv.i       
      IL_0d65: ldc.i4.4     
      IL_0d66: mul          
      IL_0d67: add          
      IL_0d68: ldind.u4     
      IL_0d69: add          
      IL_0d6a: stloc.s      'value'

      // [548 17 - 548 59]
      IL_0d6c: ldloc.s      b
      IL_0d6e: ldloc.s      'value'
      IL_0d70: ldc.i4.s     21 // 0x15
      IL_0d72: shl          
      IL_0d73: ldloc.s      'value'
      IL_0d75: ldc.i4.s     11 // 0x0b
      IL_0d77: shr.un       
      IL_0d78: or           
      IL_0d79: add          
      IL_0d7a: stloc.s      b

      // [549 17 - 549 27]
      IL_0d7c: stloc.s      a

      // [552 17 - 552 34]
      IL_0d7e: ldloc.s      c
      IL_0d80: ldloc.s      b
      IL_0d82: ldloc.s      d
      IL_0d84: not          
      IL_0d85: or           
      IL_0d86: xor          
      IL_0d87: stloc.s      f

      // [553 17 - 553 27]
      IL_0d89: ldloc.s      d

      // [554 17 - 554 23]
      IL_0d8b: ldloc.s      c
      IL_0d8d: stloc.s      d

      // [555 17 - 555 23]
      IL_0d8f: ldloc.s      b
      IL_0d91: stloc.s      c

      // [556 17 - 556 71]
      IL_0d93: ldloc.s      a
      IL_0d95: ldloc.s      f
      IL_0d97: add          
      IL_0d98: ldc.i4       1700485571 // 0x655b59c3
      IL_0d9d: add          
      IL_0d9e: ldloc.s      blockPtr
      IL_0da0: ldc.i4.s     12 // 0x0c
      IL_0da2: conv.i       
      IL_0da3: ldc.i4.4     
      IL_0da4: mul          
      IL_0da5: add          
      IL_0da6: ldind.u4     
      IL_0da7: add          
      IL_0da8: stloc.s      'value'

      // [557 17 - 557 57]
      IL_0daa: ldloc.s      b
      IL_0dac: ldloc.s      'value'
      IL_0dae: ldc.i4.6     
      IL_0daf: shl          
      IL_0db0: ldloc.s      'value'
      IL_0db2: ldc.i4.s     26 // 0x1a
      IL_0db4: shr.un       
      IL_0db5: or           
      IL_0db6: add          
      IL_0db7: stloc.s      b

      // [558 17 - 558 27]
      IL_0db9: stloc.s      a

      // [561 17 - 561 34]
      IL_0dbb: ldloc.s      c
      IL_0dbd: ldloc.s      b
      IL_0dbf: ldloc.s      d
      IL_0dc1: not          
      IL_0dc2: or           
      IL_0dc3: xor          
      IL_0dc4: stloc.s      f

      // [562 17 - 562 27]
      IL_0dc6: ldloc.s      d

      // [563 17 - 563 23]
      IL_0dc8: ldloc.s      c
      IL_0dca: stloc.s      d

      // [564 17 - 564 23]
      IL_0dcc: ldloc.s      b
      IL_0dce: stloc.s      c

      // [565 17 - 565 71]
      IL_0dd0: ldloc.s      a
      IL_0dd2: ldloc.s      f
      IL_0dd4: add          
      IL_0dd5: ldc.i4       -1894986606 // 0x8f0ccc92
      IL_0dda: add          
      IL_0ddb: ldloc.s      blockPtr
      IL_0ddd: ldc.i4.3     
      IL_0dde: conv.i       
      IL_0ddf: ldc.i4.4     
      IL_0de0: mul          
      IL_0de1: add          
      IL_0de2: ldind.u4     
      IL_0de3: add          
      IL_0de4: stloc.s      'value'

      // [566 17 - 566 59]
      IL_0de6: ldloc.s      b
      IL_0de8: ldloc.s      'value'
      IL_0dea: ldc.i4.s     10 // 0x0a
      IL_0dec: shl          
      IL_0ded: ldloc.s      'value'
      IL_0def: ldc.i4.s     22 // 0x16
      IL_0df1: shr.un       
      IL_0df2: or           
      IL_0df3: add          
      IL_0df4: stloc.s      b

      // [567 17 - 567 27]
      IL_0df6: stloc.s      a

      // [570 17 - 570 34]
      IL_0df8: ldloc.s      c
      IL_0dfa: ldloc.s      b
      IL_0dfc: ldloc.s      d
      IL_0dfe: not          
      IL_0dff: or           
      IL_0e00: xor          
      IL_0e01: stloc.s      f

      // [571 17 - 571 27]
      IL_0e03: ldloc.s      d

      // [572 17 - 572 23]
      IL_0e05: ldloc.s      c
      IL_0e07: stloc.s      d

      // [573 17 - 573 23]
      IL_0e09: ldloc.s      b
      IL_0e0b: stloc.s      c

      // [574 17 - 574 71]
      IL_0e0d: ldloc.s      a
      IL_0e0f: ldloc.s      f
      IL_0e11: add          
      IL_0e12: ldc.i4       -1051523 // 0xffeff47d
      IL_0e17: add          
      IL_0e18: ldloc.s      blockPtr
      IL_0e1a: ldc.i4.s     10 // 0x0a
      IL_0e1c: conv.i       
      IL_0e1d: ldc.i4.4     
      IL_0e1e: mul          
      IL_0e1f: add          
      IL_0e20: ldind.u4     
      IL_0e21: add          
      IL_0e22: stloc.s      'value'

      // [575 17 - 575 59]
      IL_0e24: ldloc.s      b
      IL_0e26: ldloc.s      'value'
      IL_0e28: ldc.i4.s     15 // 0x0f
      IL_0e2a: shl          
      IL_0e2b: ldloc.s      'value'
      IL_0e2d: ldc.i4.s     17 // 0x11
      IL_0e2f: shr.un       
      IL_0e30: or           
      IL_0e31: add          
      IL_0e32: stloc.s      b

      // [576 17 - 576 27]
      IL_0e34: stloc.s      a

      // [579 17 - 579 34]
      IL_0e36: ldloc.s      c
      IL_0e38: ldloc.s      b
      IL_0e3a: ldloc.s      d
      IL_0e3c: not          
      IL_0e3d: or           
      IL_0e3e: xor          
      IL_0e3f: stloc.s      f

      // [580 17 - 580 27]
      IL_0e41: ldloc.s      d

      // [581 17 - 581 23]
      IL_0e43: ldloc.s      c
      IL_0e45: stloc.s      d

      // [582 17 - 582 23]
      IL_0e47: ldloc.s      b
      IL_0e49: stloc.s      c

      // [583 17 - 583 71]
      IL_0e4b: ldloc.s      a
      IL_0e4d: ldloc.s      f
      IL_0e4f: add          
      IL_0e50: ldc.i4       -2054922799 // 0x85845dd1
      IL_0e55: add          
      IL_0e56: ldloc.s      blockPtr
      IL_0e58: ldc.i4.4     
      IL_0e59: add          
      IL_0e5a: ldind.u4     
      IL_0e5b: add          
      IL_0e5c: stloc.s      'value'

      // [584 17 - 584 59]
      IL_0e5e: ldloc.s      b
      IL_0e60: ldloc.s      'value'
      IL_0e62: ldc.i4.s     21 // 0x15
      IL_0e64: shl          
      IL_0e65: ldloc.s      'value'
      IL_0e67: ldc.i4.s     11 // 0x0b
      IL_0e69: shr.un       
      IL_0e6a: or           
      IL_0e6b: add          
      IL_0e6c: stloc.s      b

      // [585 17 - 585 27]
      IL_0e6e: stloc.s      a

      // [588 17 - 588 34]
      IL_0e70: ldloc.s      c
      IL_0e72: ldloc.s      b
      IL_0e74: ldloc.s      d
      IL_0e76: not          
      IL_0e77: or           
      IL_0e78: xor          
      IL_0e79: stloc.s      f

      // [589 17 - 589 27]
      IL_0e7b: ldloc.s      d

      // [590 17 - 590 23]
      IL_0e7d: ldloc.s      c
      IL_0e7f: stloc.s      d

      // [591 17 - 591 23]
      IL_0e81: ldloc.s      b
      IL_0e83: stloc.s      c

      // [592 17 - 592 71]
      IL_0e85: ldloc.s      a
      IL_0e87: ldloc.s      f
      IL_0e89: add          
      IL_0e8a: ldc.i4       1873313359 // 0x6fa87e4f
      IL_0e8f: add          
      IL_0e90: ldloc.s      blockPtr
      IL_0e92: ldc.i4.8     
      IL_0e93: conv.i       
      IL_0e94: ldc.i4.4     
      IL_0e95: mul          
      IL_0e96: add          
      IL_0e97: ldind.u4     
      IL_0e98: add          
      IL_0e99: stloc.s      'value'

      // [593 17 - 593 57]
      IL_0e9b: ldloc.s      b
      IL_0e9d: ldloc.s      'value'
      IL_0e9f: ldc.i4.6     
      IL_0ea0: shl          
      IL_0ea1: ldloc.s      'value'
      IL_0ea3: ldc.i4.s     26 // 0x1a
      IL_0ea5: shr.un       
      IL_0ea6: or           
      IL_0ea7: add          
      IL_0ea8: stloc.s      b

      // [594 17 - 594 27]
      IL_0eaa: stloc.s      a

      // [597 17 - 597 34]
      IL_0eac: ldloc.s      c
      IL_0eae: ldloc.s      b
      IL_0eb0: ldloc.s      d
      IL_0eb2: not          
      IL_0eb3: or           
      IL_0eb4: xor          
      IL_0eb5: stloc.s      f

      // [598 17 - 598 27]
      IL_0eb7: ldloc.s      d

      // [599 17 - 599 23]
      IL_0eb9: ldloc.s      c
      IL_0ebb: stloc.s      d

      // [600 17 - 600 23]
      IL_0ebd: ldloc.s      b
      IL_0ebf: stloc.s      c

      // [601 17 - 601 71]
      IL_0ec1: ldloc.s      a
      IL_0ec3: ldloc.s      f
      IL_0ec5: add          
      IL_0ec6: ldc.i4       -30611744 // 0xfe2ce6e0
      IL_0ecb: add          
      IL_0ecc: ldloc.s      blockPtr
      IL_0ece: ldc.i4.s     15 // 0x0f
      IL_0ed0: conv.i       
      IL_0ed1: ldc.i4.4     
      IL_0ed2: mul          
      IL_0ed3: add          
      IL_0ed4: ldind.u4     
      IL_0ed5: add          
      IL_0ed6: stloc.s      'value'

      // [602 17 - 602 59]
      IL_0ed8: ldloc.s      b
      IL_0eda: ldloc.s      'value'
      IL_0edc: ldc.i4.s     10 // 0x0a
      IL_0ede: shl          
      IL_0edf: ldloc.s      'value'
      IL_0ee1: ldc.i4.s     22 // 0x16
      IL_0ee3: shr.un       
      IL_0ee4: or           
      IL_0ee5: add          
      IL_0ee6: stloc.s      b

      // [603 17 - 603 27]
      IL_0ee8: stloc.s      a

      // [606 17 - 606 34]
      IL_0eea: ldloc.s      c
      IL_0eec: ldloc.s      b
      IL_0eee: ldloc.s      d
      IL_0ef0: not          
      IL_0ef1: or           
      IL_0ef2: xor          
      IL_0ef3: stloc.s      f

      // [607 17 - 607 27]
      IL_0ef5: ldloc.s      d

      // [608 17 - 608 23]
      IL_0ef7: ldloc.s      c
      IL_0ef9: stloc.s      d

      // [609 17 - 609 23]
      IL_0efb: ldloc.s      b
      IL_0efd: stloc.s      c

      // [610 17 - 610 71]
      IL_0eff: ldloc.s      a
      IL_0f01: ldloc.s      f
      IL_0f03: add          
      IL_0f04: ldc.i4       -1560198380 // 0xa3014314
      IL_0f09: add          
      IL_0f0a: ldloc.s      blockPtr
      IL_0f0c: ldc.i4.6     
      IL_0f0d: conv.i       
      IL_0f0e: ldc.i4.4     
      IL_0f0f: mul          
      IL_0f10: add          
      IL_0f11: ldind.u4     
      IL_0f12: add          
      IL_0f13: stloc.s      'value'

      // [611 17 - 611 59]
      IL_0f15: ldloc.s      b
      IL_0f17: ldloc.s      'value'
      IL_0f19: ldc.i4.s     15 // 0x0f
      IL_0f1b: shl          
      IL_0f1c: ldloc.s      'value'
      IL_0f1e: ldc.i4.s     17 // 0x11
      IL_0f20: shr.un       
      IL_0f21: or           
      IL_0f22: add          
      IL_0f23: stloc.s      b

      // [612 17 - 612 27]
      IL_0f25: stloc.s      a

      // [615 17 - 615 34]
      IL_0f27: ldloc.s      c
      IL_0f29: ldloc.s      b
      IL_0f2b: ldloc.s      d
      IL_0f2d: not          
      IL_0f2e: or           
      IL_0f2f: xor          
      IL_0f30: stloc.s      f

      // [616 17 - 616 27]
      IL_0f32: ldloc.s      d

      // [617 17 - 617 23]
      IL_0f34: ldloc.s      c
      IL_0f36: stloc.s      d

      // [618 17 - 618 23]
      IL_0f38: ldloc.s      b
      IL_0f3a: stloc.s      c

      // [619 17 - 619 71]
      IL_0f3c: ldloc.s      a
      IL_0f3e: ldloc.s      f
      IL_0f40: add          
      IL_0f41: ldc.i4       1309151649 // 0x4e0811a1
      IL_0f46: add          
      IL_0f47: ldloc.s      blockPtr
      IL_0f49: ldc.i4.s     13 // 0x0d
      IL_0f4b: conv.i       
      IL_0f4c: ldc.i4.4     
      IL_0f4d: mul          
      IL_0f4e: add          
      IL_0f4f: ldind.u4     
      IL_0f50: add          
      IL_0f51: stloc.s      'value'

      // [620 17 - 620 59]
      IL_0f53: ldloc.s      b
      IL_0f55: ldloc.s      'value'
      IL_0f57: ldc.i4.s     21 // 0x15
      IL_0f59: shl          
      IL_0f5a: ldloc.s      'value'
      IL_0f5c: ldc.i4.s     11 // 0x0b
      IL_0f5e: shr.un       
      IL_0f5f: or           
      IL_0f60: add          
      IL_0f61: stloc.s      b

      // [621 17 - 621 27]
      IL_0f63: stloc.s      a

      // [624 17 - 624 34]
      IL_0f65: ldloc.s      c
      IL_0f67: ldloc.s      b
      IL_0f69: ldloc.s      d
      IL_0f6b: not          
      IL_0f6c: or           
      IL_0f6d: xor          
      IL_0f6e: stloc.s      f

      // [625 17 - 625 27]
      IL_0f70: ldloc.s      d

      // [626 17 - 626 23]
      IL_0f72: ldloc.s      c
      IL_0f74: stloc.s      d

      // [627 17 - 627 23]
      IL_0f76: ldloc.s      b
      IL_0f78: stloc.s      c

      // [628 17 - 628 71]
      IL_0f7a: ldloc.s      a
      IL_0f7c: ldloc.s      f
      IL_0f7e: add          
      IL_0f7f: ldc.i4       -145523070 // 0xf7537e82
      IL_0f84: add          
      IL_0f85: ldloc.s      blockPtr
      IL_0f87: ldc.i4.4     
      IL_0f88: conv.i       
      IL_0f89: ldc.i4.4     
      IL_0f8a: mul          
      IL_0f8b: add          
      IL_0f8c: ldind.u4     
      IL_0f8d: add          
      IL_0f8e: stloc.s      'value'

      // [629 17 - 629 57]
      IL_0f90: ldloc.s      b
      IL_0f92: ldloc.s      'value'
      IL_0f94: ldc.i4.6     
      IL_0f95: shl          
      IL_0f96: ldloc.s      'value'
      IL_0f98: ldc.i4.s     26 // 0x1a
      IL_0f9a: shr.un       
      IL_0f9b: or           
      IL_0f9c: add          
      IL_0f9d: stloc.s      b

      // [630 17 - 630 27]
      IL_0f9f: stloc.s      a

      // [633 17 - 633 34]
      IL_0fa1: ldloc.s      c
      IL_0fa3: ldloc.s      b
      IL_0fa5: ldloc.s      d
      IL_0fa7: not          
      IL_0fa8: or           
      IL_0fa9: xor          
      IL_0faa: stloc.s      f

      // [634 17 - 634 27]
      IL_0fac: ldloc.s      d

      // [635 17 - 635 23]
      IL_0fae: ldloc.s      c
      IL_0fb0: stloc.s      d

      // [636 17 - 636 23]
      IL_0fb2: ldloc.s      b
      IL_0fb4: stloc.s      c

      // [637 17 - 637 71]
      IL_0fb6: ldloc.s      a
      IL_0fb8: ldloc.s      f
      IL_0fba: add          
      IL_0fbb: ldc.i4       -1120210379 // 0xbd3af235
      IL_0fc0: add          
      IL_0fc1: ldloc.s      blockPtr
      IL_0fc3: ldc.i4.s     11 // 0x0b
      IL_0fc5: conv.i       
      IL_0fc6: ldc.i4.4     
      IL_0fc7: mul          
      IL_0fc8: add          
      IL_0fc9: ldind.u4     
      IL_0fca: add          
      IL_0fcb: stloc.s      'value'

      // [638 17 - 638 59]
      IL_0fcd: ldloc.s      b
      IL_0fcf: ldloc.s      'value'
      IL_0fd1: ldc.i4.s     10 // 0x0a
      IL_0fd3: shl          
      IL_0fd4: ldloc.s      'value'
      IL_0fd6: ldc.i4.s     22 // 0x16
      IL_0fd8: shr.un       
      IL_0fd9: or           
      IL_0fda: add          
      IL_0fdb: stloc.s      b

      // [639 17 - 639 27]
      IL_0fdd: stloc.s      a

      // [642 17 - 642 34]
      IL_0fdf: ldloc.s      c
      IL_0fe1: ldloc.s      b
      IL_0fe3: ldloc.s      d
      IL_0fe5: not          
      IL_0fe6: or           
      IL_0fe7: xor          
      IL_0fe8: stloc.s      f

      // [643 17 - 643 27]
      IL_0fea: ldloc.s      d

      // [644 17 - 644 23]
      IL_0fec: ldloc.s      c
      IL_0fee: stloc.s      d

      // [645 17 - 645 23]
      IL_0ff0: ldloc.s      b
      IL_0ff2: stloc.s      c

      // [646 17 - 646 71]
      IL_0ff4: ldloc.s      a
      IL_0ff6: ldloc.s      f
      IL_0ff8: add          
      IL_0ff9: ldc.i4       718787259 // 0x2ad7d2bb
      IL_0ffe: add          
      IL_0fff: ldloc.s      blockPtr
      IL_1001: ldc.i4.2     
      IL_1002: conv.i       
      IL_1003: ldc.i4.4     
      IL_1004: mul          
      IL_1005: add          
      IL_1006: ldind.u4     
      IL_1007: add          
      IL_1008: stloc.s      'value'

      // [647 17 - 647 59]
      IL_100a: ldloc.s      b
      IL_100c: ldloc.s      'value'
      IL_100e: ldc.i4.s     15 // 0x0f
      IL_1010: shl          
      IL_1011: ldloc.s      'value'
      IL_1013: ldc.i4.s     17 // 0x11
      IL_1015: shr.un       
      IL_1016: or           
      IL_1017: add          
      IL_1018: stloc.s      b

      // [648 17 - 648 27]
      IL_101a: stloc.s      a

      // [651 17 - 651 34]
      IL_101c: ldloc.s      c
      IL_101e: ldloc.s      b
      IL_1020: ldloc.s      d
      IL_1022: not          
      IL_1023: or           
      IL_1024: xor          
      IL_1025: stloc.s      f

      // [652 17 - 652 27]
      IL_1027: ldloc.s      d

      // [653 17 - 653 23]
      IL_1029: ldloc.s      c
      IL_102b: stloc.s      d

      // [654 17 - 654 23]
      IL_102d: ldloc.s      b
      IL_102f: stloc.s      c

      // [655 17 - 655 71]
      IL_1031: ldloc.s      a
      IL_1033: ldloc.s      f
      IL_1035: add          
      IL_1036: ldc.i4       -343485551 // 0xeb86d391
      IL_103b: add          
      IL_103c: ldloc.s      blockPtr
      IL_103e: ldc.i4.s     9 // 0x09
      IL_1040: conv.i       
      IL_1041: ldc.i4.4     
      IL_1042: mul          
      IL_1043: add          
      IL_1044: ldind.u4     
      IL_1045: add          
      IL_1046: stloc.s      'value'

      // [656 17 - 656 59]
      IL_1048: ldloc.s      b
      IL_104a: ldloc.s      'value'
      IL_104c: ldc.i4.s     21 // 0x15
      IL_104e: shl          
      IL_104f: ldloc.s      'value'
      IL_1051: ldc.i4.s     11 // 0x0b
      IL_1053: shr.un       
      IL_1054: or           
      IL_1055: add          
      IL_1056: stloc.s      b

      // [657 17 - 657 27]
      IL_1058: stloc.s      a

      // [659 17 - 659 32]
      IL_105a: ldarg.2      // digest
      IL_105b: ldflda       unsigned int32 Md5DotNet.Md5Digest::A
      IL_1060: dup          
      IL_1061: ldind.u4     
      IL_1062: ldloc.s      a
      IL_1064: add          
      IL_1065: stind.i4     

      // [660 17 - 660 32]
      IL_1066: ldarg.2      // digest
      IL_1067: ldflda       unsigned int32 Md5DotNet.Md5Digest::B
      IL_106c: dup          
      IL_106d: ldind.u4     
      IL_106e: ldloc.s      b
      IL_1070: add          
      IL_1071: stind.i4     

      // [661 17 - 661 32]
      IL_1072: ldarg.2      // digest
      IL_1073: ldflda       unsigned int32 Md5DotNet.Md5Digest::C
      IL_1078: dup          
      IL_1079: ldind.u4     
      IL_107a: ldloc.s      c
      IL_107c: add          
      IL_107d: stind.i4     

      // [662 17 - 662 32]
      IL_107e: ldarg.2      // digest
      IL_107f: ldflda       unsigned int32 Md5DotNet.Md5Digest::D
      IL_1084: dup          
      IL_1085: ldind.u4     
      IL_1086: ldloc.s      d
      IL_1088: add          
      IL_1089: stind.i4     

      // [30 64 - 30 76]
      IL_108a: ldloc.2      // blockIndex
      IL_108b: ldc.i4.1     
      IL_108c: add          
      IL_108d: stloc.2      // blockIndex

      // [30 38 - 30 62]
      IL_108e: ldloc.2      // blockIndex
      IL_108f: ldloc.0      // blocksCount
      IL_1090: blt          IL_0044
    // end of loop

    // [664 9 - 664 10]
    IL_1095: ret          

  } // end of method Md5_5_InlineRotate::GetDigest

  .method private hidebysig static unsigned int32 
    LeftRotate(
      unsigned int32 'value', 
      int32 rotation
    ) cil managed 
  {
    .maxstack 8

    // [669 13 - 669 69]
    IL_0000: ldarg.0      // 'value'
    IL_0001: ldarg.1      // rotation
    IL_0002: ldc.i4.s     31 // 0x1f
    IL_0004: and          
    IL_0005: shl          
    IL_0006: ldarg.0      // 'value'
    IL_0007: ldc.i4.s     32 // 0x20
    IL_0009: ldarg.1      // rotation
    IL_000a: sub          
    IL_000b: ldc.i4.s     31 // 0x1f
    IL_000d: and          
    IL_000e: shr.un       
    IL_000f: or           
    IL_0010: ret          

  } // end of method Md5_5_InlineRotate::LeftRotate
} // end of class Md5DotNet.Md5_5_InlineRotate
